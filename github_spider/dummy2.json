[
{"dictionary": {"test/unit/manipulation.js": "testHtml QUnit moduleTypeSupported ? test : skip html(script type module) function assert  Support: Edge 16-17  Edge sometimes doesn't execute module scripts so skip the test there. QUnit moduleTypeSupported && ! edge i test navigator userAgent ? test : skip html(script type module) function assert assert expect 4 var = assert async = jQuery #qunit-fixture ", "count": 1}},
{"dictionary": {"test/unit/dimensions.js": "QUnit test SVG dimensions (basic content-box) function assert assert expect 8 var = jQuery <svg  height '></svg> appendTo #qunit-fixture var = jQuery <svg  height '></svg> appendTo #qunit-fixture assert equal svg width 100 assert equal svg height 100 QUnit test SVG dimensions (content-box) function assert assert expect 8 var = jQuery <svg  height box-sizing: content-box; border: 1px solid white; padding: 2px; margin: 3px'></svg> appendTo #qunit-fixture var = jQuery <svg  height box-sizing: content-box; border: 1px solid white; padding: 2px; margin: 3px'></svg> appendTo #qunit-fixture assert equal svg width 100 assert equal svg height 100 QUnit test SVG dimensions (border-box) function assert assert expect 8 var = jQuery <svg  height box-sizing: border-box; border: 1px solid white; padding: 2px; margin: 3px'></svg> appendTo #qunit-fixture var = jQuery <svg  height box-sizing: border-box; border: 1px solid white; padding: 2px; margin: 3px'></svg> appendTo #qunit-fixture assert equal svg width 94 assert equal svg height 94 ", "count": 1}},
{"dictionary": {"test/unit/support.js": "= expectedMap firefox_60 else if   firefox i test = expectedMap firefox else if   iphone os 11_ i test else if   iphone  os 11_ i test = expectedMap ios_11 else if   iphone os (?:9 10)_ i test = expectedMap ios_9_10 ", "count": 1}},
{"dictionary": {"test/unit/css.js": "jQuery <div/> 0 style gridArea === ? test : skip Do not append px to CSS Grid-related properties (gh-4007) function assert assert expect 12 var = grid-area : grid-row-start : 2 grid-row-end : auto grid-column-start : auto grid-column-end : auto grid-column : grid-column-start : 2 grid-column-end : auto grid-column-end : true grid-column-start : true grid-row : grid-row-start : 2 grid-row-end : auto grid-row-end : true grid-row-start : true for in = jQuery <div/> appendTo #qunit-fixture $div css 2 = if typeof === object for in = assert equal $div css Do not append px to ' + + ' (retrieved  + + ) else assert equal $div css 2 Do not append px to ' + + ' $div remove QUnit test css('width') and css('height') should respect box-sizing, see #11004 function assert assert expect 4 ", "count": 1}},
{"dictionary": {".travis.yml": "6 8 10 11 addons chrome stable env ", "count": 1}},
{"dictionary": {"src/css.js": "flexGrow : true flexShrink : true fontWeight : true gridArea : true gridColumn : true gridColumnEnd : true gridColumnStart : true gridRow : true gridRowEnd : true gridRowStart : true lineHeight : true opacity : true order : true ", "count": 1}},
{"dictionary": {"src/css.js": "set : function elem value extra var = getStyles = support scrollboxSize === styles position  Only read styles.position if the test has a chance to fail  to avoid forcing a reflow. = ! support scrollboxSize && styles position === absolute  To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991) = scrollBoxSize || = scrollboxSizeBuggy || = && jQuery css boxSizing false === border-box = ?  Account for unreliable border-box dimensions by comparing offset* to computed and  faking a content-box to get border and padding (gh-3699) if && scrollBoxSize if && scrollboxSizeBuggy -= Math ceil offset + 0 toUpperCase + dimension slice 1 - parseFloat - ", "src/css/support.js": " Support: Chrome <=64  Don't get tricked when zoom affects offsetWidth (gh-4029) div style position = absolute = roundPixelMeasures div offsetWidth / 3 === 12   ||   = roundPixelMeasures div offsetWidth / 3 === 12 documentElement removeChild ", "test/unit/support.js": "pixelPosition : true radioValue : false reliableMarginLeft : true scrollboxSize : scrollboxSize : false : ajax : true ", "count": 3}},
{"dictionary": {"Gruntfile.js": "external/requirejs/require.js test/data/testinit.js /jquery .js /jquery.js  Replacement for testinit.js#loadTests() test/data/testrunner.js test/unit/tween.js test/unit/ready.js : dist/jquery. : false : true : : false : true : external/ : false : true : dist/jquery. : false : true : : false : true : external/ : false : true : test/**/*.@(js|css|jpg|html|xml|svg) : false ", "test/data/testinit.js": " eslint no-multi-str: \"off\"   baseURL is intentionally set to \"data/\" instead of \"\".  This is not just for convenience (since most files are in data/)  but also to ensure that urls without prefix fail.  Otherwise it's easy to write tests that pass on test/index.html  but fail in Karma runner (where the baseURL is different). var = data/ var FILEPATH = /test/data/testinit.js = slice call document getElementsByTagName script - 1 0 = && activeScript src ? activeScript src replace   + FILEPATH replace   g .. + / : ../  baseURL is intentionally set to \"data/\" instead of \"\".  This is not just for convenience (since most files are in data/)  but also to ensure that urls without prefix fail.  Otherwise it's easy to write tests that pass on test/index.html  but fail in Karma runner (where the baseURL is different). = + test/data/ = this jQuery  see RFC 2606 this iframeCallback = undefined if window __karma__  In Karma, files are served from /base = base/test/data/ else  Tests are always loaded async  except when running tests in Karma (See Gruntfile)  Tests are always loaded async  except when running tests in Karma (See Gruntfile) if ! window __karma__ QUnit config autostart = false this loadTests = function  Directly load tests that need synchronous evaluation if ! QUnit urlParams amd || document readyState === loading document write <script src=' + + test/unit/ready.js'>< script> else QUnit module ready function QUnit test jQuery ready function assert assert ok false Test should be initialized before DOM ready  Get testSubproject from testrunner first require data/testrunner.js function require parentUrl  +   data/testrunner.js function var = 0 =  A special module with basic tests, meant for if if ! QUnit basicTests || === 1 require require parentUrl  +     +    Support: Android 2.3 only  When running basic tests, replace other modules with dummies to avoid overloading ", "test/jquery.js": "function  global loadTests: false  var = window location pathname = pathname slice 0 pathname lastIndexOf test var FILEPATH = /test/jquery.js = slice call document getElementsByTagName script - 1 0 = && activeScript src ? activeScript src replace   + FILEPATH replace   g .. + / : ../ = window QUnit || parent QUnit = window require || parent require  Define configuration parameters controlling how jQuery is loaded if QUnit config urlConfig push : amd : Load with AMD : Load the AMD jQuery file (and its dependencies)  AMD loading is asynchronous and incompatible with synchronous test loading in Karma if ! window __karma__ QUnit config urlConfig push : amd : Load with AMD : Load the AMD jQuery file (and its dependencies) QUnit config urlConfig push : dev : Load unminified  This doesn't apply to iframes because they synchronously expect jQuery to be there. if urlParams amd && window QUnit require config : path : parentUrl = src/jquery  Otherwise, load synchronously else document write <script id='jquery-js' src=' + + + '>< script>  Synchronous-only tests (other tests are loaded from the test page) if typeof !== undefined document write <script src=' + + test/unit/ready.js'>< script> document write <script id='jquery-js' src=' + + + '>< script> ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() -  4 function assert ajaxTest jQuery.ajax() -  4 function assert return : + name.html#foo beforeSend : function xhr settings assert equal settings url + name.html#foo Make sure that the URL has its hash. assert equal settings url + name.html#foo hash preserved for request with no query component. return false : true : + name.html?abc#foo beforeSend : function xhr settings assert equal settings url + name.html?abc#foo Make sure that the URL has its hash. assert equal settings url + name.html?abc#foo hash preserved for request with query component. return false : true test : 123 beforeSend : function xhr settings assert equal settings url + name.html?abc&test=123#foo Make sure that the URL has its hash. assert equal settings url + name.html?abc&test=123#foo hash preserved for request with query component and data. return false : true : false beforeSend : function xhr settings  Remove the random number, but ensure the cache-buster param is there var = settings url replace   assert equal + name.html?abc&devo=hat&_=#brownies Make sure that the URL has its hash.  Clear the cache-buster param value var = settings url replace   _= _= assert equal + name.html?abc&devo=hat&_=#brownies hash preserved for cache-busting request with query component and data. return false : true setup : function Globals register testBar : window . location . href . replace ( ,   )  +  baseURL  +   mock.php?action=testbar : url (  mock.php?action=testbar  ) : script success : function assert strictEqual window testBar bar Script results returned (GET, no callback) setup : function Globals register testBar : window . location . href . replace ( ,   )  +  baseURL  +   mock.php?action=testbar : url (  mock.php?action=testbar  ) : POST : script success : function data status setup : function Globals register testBar : window . location . href . replace ( ,   ). replace ( ,   )  +  baseURL  +   mock.php?action=testbar : url (  mock.php?action=testbar  ) : script success : function assert strictEqual window testBar bar Script results returned (GET, no callback) QUnit asyncTest jQuery.getJSON( String, Function ) - JSON object with absolute url to local content 2 function assert jQuery getJSON window location href replace   + url mock.php?action=json function json var = url mock.php?action=json  Make a relative URL absolute relative to the document location if ! : i test  An absolute path replaces everything after the host if absoluteUrl charAt 0 === / = window location href replace   (: ) $1 +  A relative path replaces the last slash-separated path segment else = window location href replace   + jQuery getJSON function json assert strictEqual json data lang en Check JSON: lang assert strictEqual json data length 25 Check JSON: length QUnit start ", "count": 4}},
{"dictionary": {"README.md": "FOSSA Status Gitter -------------------------------------- ", "count": 1}},
{"dictionary": {"test/unit/support.js": "= expectedMap safari_11 else if   (?:9 10) ( )  safari i test = expectedMap safari_9_10 else if   firefox i test else if   firefox i test = expectedMap firefox_60 else if   firefox i test = expectedMap firefox ", "count": 1}},
{"dictionary": {"src/core/var/rsingleTag.js": "define function use strict  Match a standalone tag  rsingleTag matches a string consisting of a single HTML element with no attributes  and captures the element's name return   <( ) >(?:< > ) i ", "src/manipulation/var/rtagName.js": "define function use strict return   <( ) i  rtagName captures the name from the first start tag in a string of HTML  https://html.spec.whatwg.org/multipage/syntax.html#tag-open-state  https://html.spec.whatwg.org/multipage/syntax.html#tag-name-state return   <( ) i ", "test/unit/manipulation.js": "assert strictEqual QUnit test Make sure tags with single-character names are found (gh-4124) function assert assert expect 1 var = <p>foo<!--<td>--></p> = jQuery <div/> $el html  Lowercase and replace spaces to remove possible browser inconsistencies = 0 innerHTML toLowerCase replace   g assert strictEqual QUnit test Insert script with data-URI (gh-1887) 1 function assert Globals register testFoo Globals register testSrcFoo ", "count": 3}},
{"dictionary": {"test/unit/support.js": "reliableMarginLeft : true scrollboxSize : true firefox : firefox_60 : ajax : true boxSizingReliable : true checkClone : true reliableMarginLeft : false scrollboxSize : true : ajax : true boxSizingReliable : true checkClone : true checkOn : true clearCloneStyle : true cors : true createHTMLDocument : true focusin : false noCloneChecked : true optSelected : true pixelBoxStyles : true pixelPosition : true radioValue : true reliableMarginLeft : true scrollboxSize : true : ajax : true boxSizingReliable : true = expectedMap safari_11 else if   (?:9 10) ( )  safari i test = expectedMap safari_9_10 else if   firefox 60 i test = expectedMap firefox_60 else if   firefox i test = expectedMap firefox else if   iphone os 11_ i test ", "count": 1}},
{"dictionary": {"src/css.js": "- - 0.5  If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter  Use an explicit zero to avoid NaN (gh-3964) || 0 return ", "test/unit/dimensions.js": "assert equal colElem width 300 col elements have width(), see #12243 QUnit test SVG dimensions (basic content-box) function assert assert expect 8 var = jQuery <svg width='100' height='100'></svg> appendTo #qunit-fixture assert equal svg width 100 assert equal svg height 100 assert equal svg innerWidth 100 assert equal svg innerHeight 100 assert equal svg outerWidth 100 assert equal svg outerHeight 100 assert equal svg outerWidth true 100 assert equal svg outerHeight true 100 svg remove QUnit test SVG dimensions (content-box) function assert assert expect 8 var = jQuery <svg width='100' height='100' style='box-sizing: content-box; border: 1px solid white; padding: 2px; margin: 3px'></svg> appendTo #qunit-fixture assert equal svg width 100 assert equal svg height 100 assert equal svg innerWidth 104 assert equal svg innerHeight 104 assert equal svg outerWidth 106 assert equal svg outerHeight 106 assert equal svg outerWidth true 112 assert equal svg outerHeight true 112 svg remove QUnit test SVG dimensions (border-box) function assert assert expect 8 var = jQuery <svg width='100' height='100' style='box-sizing: border-box; border: 1px solid white; padding: 2px; margin: 3px'></svg> appendTo #qunit-fixture assert equal svg width 94 assert equal svg height 94 assert equal svg innerWidth 98 assert equal svg innerHeight 98 assert equal svg outerWidth 100 assert equal svg outerHeight 100 assert equal svg outerWidth true 106 assert equal svg outerHeight true 106 svg remove QUnit test box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height()  see #10413 function assert assert expect 16 ", "count": 2}},
{"dictionary": {"src/serialize.js": "encodeURIComponent == null ? : if == null return  If an array was passed in, assume that it is an array of form elements. if Array isArray || a jquery && ! jQuery isPlainObject ", "test/unit/serialize.js": "QUnit module serialize : QUnit test jQuery.param() function assert assert expect 23 assert expect 24 var = test : 1 2 null assert equal jQuery param test%5B%5D=1&test%5B%5D=2&test%5B%5D= object with array property with null value = undefined assert equal jQuery param jQuery.param( undefined ) === empty string QUnit test jQuery.param() not affected by ajaxSettings function assert ", "count": 2}},
{"dictionary": {"package.json": "devDependencies babel-core 7.0.0-beta.0 babel-plugin-transform-es2015-for-of 7.0.0-beta.0 commitplease core-js 2. commitplease core-js 2. eslint-config-jquery 1.0.1 grunt 1.0. grunt 1.0. grunt-babel 7.0.0 grunt-cli 1.2.0 grunt-compare-size 0.4.2 grunt-contrib-uglify 3. grunt-contrib-watch 1. .0 grunt-eslint 20. .0 grunt-contrib-uglify 3. grunt-contrib-watch 1. .0 grunt-eslint 20. .0 grunt-git-authors 3.2.0 grunt-jsonlint 1.1.0 grunt-karma 2.0.0 grunt-newer 1.3.0 grunt-npmcopy 0.1.0 gzip-js 0.3.2 husky 0.14.3 insight 0. insight 0. jsdom 5.6.1 karma karma karma-browserstack-launcher 1.3.0 karma-chrome-launcher 2.2.0 karma-firefox-launcher 1. karma-firefox-launcher 1. karma-qunit 1.2.1 load-grunt-tasks load-grunt-tasks native-promise-only 0.8.1 promises-aplus-tests 2.1.2 q 1.5. qunit-assert-step 1. q 1.5. qunit-assert-step 1. qunitjs 1.23.1 raw-body 2. requirejs 2.3. raw-body 2. requirejs 2.3. sinon 2.3.7 sizzle 2.3.3 strip-json-comments 2.0.1 testswarm 1.1.0 uglify-js 3. uglify-js 3. scripts build npm install && grunt ", "count": 1}},
{"dictionary": {"src/core.js": "isEmptyObject : function obj  eslint-disable no-unused-vars   See https://github.com/eslint/eslint/issues/6125 var for in ", "count": 1}},
{"dictionary": {"README.md": "jQuery FOSSA Status -------------------------------------- ", "count": 1}},
{"dictionary": {"src/css.js": " If a number was passed in, add the unit (except for certain CSS properties) if === number  The isCustomProp check can be removed in jQuery 4.0 when we only auto-append  \"px\" to a few hardcoded values. if === number && ! += && 3 || jQuery cssNumber ? : px ", "test/unit/css.js": "assert equal $elem css --prop5 'val5' Works with single quotes ? test : skip Don't append px to CSS vars function assert assert expect 3 var = jQuery <div> appendTo #qunit-fixture css --a 3 css --line-height 4 css --lineHeight 5 assert equal $div css --a 3 --a: 3 assert equal $div css --line-height 4 --line-height: 4 assert equal $div css --lineHeight 5 --lineHeight: 5 ", "count": 2}},
{"dictionary": {".github/lock.yml": " Configuration for lock-threads - https://github.com/dessant/lock-threads  Number of days of inactivity before a closed issue or pull request is locked daysUntilLock 180  Issues and pull requests with these labels will not be locked. Set to `[]` to disable exemptLabels []  Label to add before locking, such as `outdated`. Set to `false` to disable lockLabel false  Comment to post before locking. Set to `false` to disable lockComment false ", "count": 1}},
{"dictionary": {"src/ajax/script.js": "var return send : function _ complete = jQuery <script> prop : s scriptCharset : s url attr s scriptAttrs || on load error callback = function evt = jQuery <script> attr s scriptAttrs || prop : s scriptCharset : s url on load error callback = function evt script remove = null if complete evt type === error ? 404 : 200 evt type  Use native DOM manipulation to avoid our domManip AJAX trickery document head appendChild 0 ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - custom attributes for script tag 4 function assert var = 0123456789 return create : function options var options dataType = script options scriptAttrs = : jquery-ajax-test : = jQuery ajax url data/script.php?header=ecma  Ensure the script tag has the nonce attr on it assert ok === jQuery #jquery-ajax-test attr nonce nonce value options scriptAttrs = : jquery-ajax-test : async = jQuery ajax url mock.php?action=script assert equal jQuery #jquery-ajax-test attr async async attr value return success : function ", "count": 2}},
{"dictionary": {"src/ajax/script.js": " Bind script tag hack transport jQuery ajaxTransport script function s  This transport only deals with cross domain requests if s crossDomain  This transport only deals with cross domain  requests if s crossDomain ||   s . scriptAttrs   var return send : function _ complete = jQuery <script> prop : s scriptCharset : s url on attr (  s . scriptAttrs   ||  {} ). on load error callback = function evt script remove ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - custom attributes for script tag 4 function assert var = 0123456789 return create : function options var options dataType = script options scriptAttrs = : jquery-ajax-test : = jQuery ajax url data/script.php?header=ecma  Ensure the script tag has the nonce attr on it assert ok === jQuery #jquery-ajax-test attr nonce nonce value return success : function assert ok true success complete : function assert ok true complete ajaxTest jQuery.ajax() - do not execute js (crossOrigin) 2 function assert return create : function options ", "count": 2}},
{"dictionary": {"test/unit/css.js": "assert equal el css position absolute The old style is kept when setting an unrecognized value  Support: Edge 14 -   Support: Edge 14 -   Edge collapses whitespace-only values when setting a style property and  there is no easy way for us to work around it. Just skip the test there  and hope for the better future.   edge i test navigator userAgent ? skip : test   edge i test navigator userAgent ? skip : test Keep the last style if the new one is a non-empty whitespace (gh-3204) function assert assert expect 1 ", "count": 1}},
{"dictionary": {"LICENSE.txt": "", "count": 1}},
{"dictionary": {"Gruntfile.js": ": dist/*.map : false : true : external/qunit/qunit.css : false : true : test/**/*.@(js|css|jpg|html|xml) : test/**/*.@(js|css|jpg|html|xml ) : false : true ", "src/traversing.js": "return siblings elem firstChild contents : function elem          if nodeName ( ,   )              return elem contentDocument                    Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only           Treat the template element as a regular one in browsers that           don't support it.          if nodeName template              = elem content ||                   return jQuery merge elem childNodes \t\t if typeof elem . contentDocument   !==   \t\t\t return elem contentDocument \t\t \t\t  Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only \t\t  Treat the template element as a regular one in browsers that \t\t  don't support it. \t\t if nodeName template \t\t\t = elem content || \t\t \t\t return jQuery merge elem childNodes function name fn jQuery fn = function until selector ", "test/data/1x1.svg": "xml  version 1.0  standalone no DOCTYPE svg svg width 1px height 1px http://www.w3.org/2000/svg svg ", "test/data/frame.html": "html head title title head frameset cols 20%, 80% frame id test-frame src iframe.html frame src iframe.html frameset html ", "test/unit/traversing.js": "QUnit test contents() for <template /> function assert      assert expect 4 \t assert expect 4      jQuery #qunit-fixture append          <template id='template'> +              <div id='template-div0'> +                  <span>Hello, Web Component!</span> +              </div> +              <div id='template-div1'></div> +              <div id='template-div2'></div> +          </template>      \t jQuery #qunit-fixture append \t\t <template id='template'> + \t\t     <div id='template-div0'> + \t\t         <span>Hello, Web Component!</span> + \t\t     </div> + \t\t     <div id='template-div1'></div> + \t\t     <div id='template-div2'></div> + \t\t </template> \t      var = jQuery #template contents      assert equal contents length 6 Check template element contents \t var = jQuery #template contents \t assert equal contents length 6 Check template element contents      assert equal contents find span text Hello, Web Component! Find span in template and check its text \t assert equal contents find span text Hello, Web Component! Find span in template and check its text      jQuery <div id='templateTest' /> append          jQuery jQuery map function node              return document importNode true               appendTo #qunit-fixture \t jQuery <div id='templateTest' /> append \t\t\t jQuery jQuery map function node \t\t\t\t\t return document importNode true \t\t\t \t appendTo #qunit-fixture      = jQuery #templateTest contents      assert equal contents length 6 Check cloned nodes of template element contents \t = jQuery #templateTest contents \t assert equal contents length 6 Check cloned nodes of template element contents      assert equal contents filter div length 3 Count cloned elements from template \t assert equal contents filter div length 3 Count cloned elements from template content in document createElement template ? test : skip contents() for <template /> remains inert function assert assert expect 2 content in document createElement template ? test : skip contents() for <template /> remains inert function assert assert expect 2 \t Globals register testScript \t Globals register testImgOnload Globals register testScript Globals register testImgOnload          jQuery #qunit-fixture append              <template id='template'> +                  <script>testScript = 1;</script> +                  <img src=' + + 1x1.jpg' onload='testImgOnload = 1' > +              </template>          \t jQuery #qunit-fixture append \t\t <template id='template'> + \t\t     <script>testScript = 1;</script> + \t\t     <img src=' + + 1x1.jpg' onload='testImgOnload = 1' > + \t\t </template> \t          var = jQuery #template contents \t var = jQuery #template contents assert strictEqual window testScript true script in template isn't executed assert strictEqual window testImgOnload true onload of image in template isn't executed assert strictEqual window testScript true script in template isn't executed assert strictEqual window testImgOnload true onload of image in template isn't executed QUnit test contents() for <object /> function assert assert expect 2 var = jQuery <object id='svg-object' data=' + + 1x1.svg'></object> var = assert async svgObject on load function var = jQuery #svg-object contents assert equal contents length 1 Check object contents assert equal contents find svg length 1 Find svg within object done jQuery #qunit-fixture append QUnit test contents() for <frame /> function assert assert expect 2 var = jQuery <iframe id='frame-contents' src=' + + frame.html'></iframe> var = assert async iframe on load function var = jQuery #frame-contents contents var = container find #test-frame contents assert equal contents length 1 Check frame contents assert equal contents find body length 1 Find body within frame done jQuery #qunit-fixture append QUnit test sort direction function assert assert expect 12 ", "count": 5}},
{"dictionary": {".travis.yml": "language node_js sudo false node_js 4 6 8 addons chrome stable env ", "count": 1}},
{"dictionary": {"count": 0}},
{"dictionary": {"src/css.js": "= || = && jQuery css boxSizing false === border-box = && boxModelAdjustment = ? boxModelAdjustment : 0  Account for unreliable border-box dimensions by comparing offset* to computed and  faking a content-box to get border and padding (gh-3699) ", "src/css/support.js": " Support: IE 9 only  Detect overflow:scroll screwiness (gh-3699)  Support: Chrome <=64  Don't get tricked when zoom affects offsetWidth (gh-4029) div style position = absolute = div offsetWidth === 36 || absolute = roundPixelMeasures (  div offsetWidth /   3  )  === 12 || absolute documentElement removeChild ", "test/data/css/cssWidthBrowserZoom.html": "\t\t\t :  ; \t\t} \t\t  { \t\t\t :  ; \t\t\t :  ; \t\t\t :  ; \t\t\t :  ; script src ../../jquery.js script script src ../iframeTest.js script script \t (  (   ). (   ) ); \t ( \t\t (   ). (   ), \t\t (   ). (  ,   ). (   ) \t); script body html ", "test/unit/css.js": "testIframe css('width') should work correctly with browser zooming css/cssWidthBrowserZoom.html function assert jQuery window document cssWidthBrowserZoom assert expect 1 assert strictEqual 100px elem.css('width') works correctly with browser zoom function assert jQuery window document widthBeforeSet widthAfterSet assert expect 2 assert strictEqual 100px elem.css('width') works correctly with browser zoom assert strictEqual 100px elem.css('width', val) works correctly with browser zoom ", "count": 4}},
{"dictionary": {"src/css/adjustCSS.js": "= && 3 || jQuery cssNumber ? : px  Starting value computation is required for potential unit mismatches = jQuery cssNumber || !== px && + && = elem nodeType && jQuery cssNumber || !== px && + && rcssNum exec jQuery css if && 3 !== ", "test/unit/effects.js": "this clock tick 200 QUnit test animate non-element's zIndex without appending  px function assert assert expect 1 var = : 0 jQuery animate : 200 200 function assert equal obj zIndex 200 The custom property should be modified without appending  px . this clock tick 200 QUnit test stop() function assert assert expect 4 ", "count": 2}},
{"dictionary": {"src/css.js": "set : function elem value extra var = getStyles = jQuery css boxSizing false === border-box = support scrollboxSize === styles position  To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991) = || = && jQuery css boxSizing false === border-box = && boxModelAdjustment  Account for unreliable border-box dimensions by comparing offset* to computed and  faking a content-box to get border and padding (gh-3699) if && support . scrollboxSize ()  ===   styles . position if && scrollBoxSize -= Math ceil offset + 0 toUpperCase + dimension slice 1 - parseFloat - ", "count": 1}},
{"dictionary": {"src/event.js": ": true : true char : true : true : true : true : true ", "count": 1}},
{"dictionary": {".travis.yml": "language node_js  Temporary workaround.  Karma can't access the binaries on travis  without root access.  See https://github.com/travis-ci/travis-ci/issues/8836 sudo required sudo false node_js 4 6 ", "Gruntfile.js": "var = require fs = require gzip-js = require gzip-js = process env TRAVIS if ! grunt option filename grunt option filename jquery.js : : test/karma.context.html : test/karma.debug.html : : : ChromeHeadless : --no-sandbox : qunit : mockserver : : true : : ChromeHeadless  The Chrome sandbox doesn't work on Travis. : ? ChromeHeadlessNoSandbox : ChromeHeadless  To debug tests with Karma: ", "count": 2}},
{"dictionary": {"test/unit/css.js": "assert equal div css --color red Modified CSS custom property using object div css --mixedCase : green div css --mixed-case : red assert equal div css --mixedCase green Modified CSS custom property with mixed case div css --theme-dark : purple div css --themeDark : red assert equal div css --theme-dark purple Modified CSS custom property with dashed name ", "count": 1}},
{"dictionary": {"Gruntfile.js": ": /*! jQuery v<%= pkg.version %> |  + (c) JS Foundation and other contributors | jquery.org/license */ : pure_getters : true hoist_funs : false : false : false  Support: IE <11  typeofs transformation is unsafe for IE9-10 ", "package.json": "sizzle 2.3.3 strip-json-comments 2.0.1 testswarm 1.1.0 uglify-js 3.3. uglify-js 3.3. scripts build npm install && grunt ", "count": 2}},
{"dictionary": {"Gruntfile.js": ": /*! jQuery v<%= pkg.version %> |  + (c) JS Foundation and other contributors | jquery.org/license */ : pure_getters : true hoist_funs : false : false ", "count": 1}},
{"dictionary": {"test/unit/ajax.js": "ajaxTest jQuery.ajax() - native abort 2 function assert return : url mock.php?action=wait&wait=1 xhr : function var = new window.XMLHttpRequest setTimeout function xhr abort 100 return error : function xhr msg assert strictEqual error Native abort triggers error callback complete : function assert ok true complete if ! android 4 0 i test navigator userAgent ajaxTest jQuery.ajax() - native abort 2 function assert return : url mock.php?action=wait&wait=1 xhr : function var = new window.XMLHttpRequest setTimeout function xhr abort 100 return error : function xhr msg assert strictEqual error Native abort triggers error callback complete : function assert ok true complete  Support: Android <= 4.0 - 4.3 only  Android 4.0-4.3 does not have ontimeout on an xhr ", "count": 1}},
{"dictionary": {"src/css/curCSS.js": "define ../core ../var/isAttached ./var/rboxStyle ./var/rnumnonpx ./var/getStyles ./support ../selector  Get jQuery.contains function jQuery rboxStyle rnumnonpx getStyles support ./support function jQuery isAttached rboxStyle rnumnonpx getStyles support use strict if = computed getPropertyValue || if === && ! jQuery . contains (  elem . ownerDocument , if === && ! isAttached ( = jQuery style ", "src/css/var/isHiddenWithinTree.js": "define ../../core ../../ ../../  css is assumed function jQuery function jQuery ,  isAttached use strict  isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or  Support: Firefox <=43 - 45  Disconnected elements can have computed display: none, so first confirm that elem is  in the document. jQuery . contains (  elem . ownerDocument , && isAttached ( && jQuery css display === none ", "src/manipulation.js": "define ./core ./var/isAttached ./var/concat ./var/isFunction ./var/push ./traversing ./selector ./event function jQuery concat isFunction push access function jQuery isAttached ,  concat isFunction push access rcheckableType rtagName rscriptType wrapMap getAll setGlobalEval buildFragment support dataPriv dataUser acceptData DOMEval nodeName if node parentNode if && jQuery . contains (  node . ownerDocument , if && isAttached ( setGlobalEval getAll script node parentNode removeChild clone : function elem dataAndEvents deepDataAndEvents var = elem cloneNode true = jQuery . contains (  elem . ownerDocument , = isAttached (  Fix IE cloning issues if ! support noCloneChecked && elem nodeType === 1 || elem nodeType === 11 && ", "src/manipulation/buildFragment.js": "define ../core ../core/toType ../var/isAttached ./var/rtagName ./var/rscriptType ./wrapMap ./getAll ./setGlobalEval function jQuery toType rtagName rscriptType wrapMap getAll setGlobalEval function jQuery toType isAttached ,  rtagName rscriptType wrapMap getAll setGlobalEval use strict var =   < &# ; function buildFragment elems context scripts selection ignored var contains var attached = context createDocumentFragment = = 0 continue contains = jQuery . contains (  elem . ownerDocument , attached = isAttached (  Append to fragment = getAll fragment appendChild script  Preserve script evaluation history if contains if attached setGlobalEval ", "src/var/isAttached.js": "define ../core ../selector  Get jQuery.contains function jQuery use strict return function isAttached obj return jQuery contains obj ownerDocument ", "count": 5}},
{"dictionary": {"test/unit/deferred.js": "var = then : function onFulfilled onFulfilled  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context onFulfilled call if typeof Symbol === function ", "count": 1}},
{"dictionary": {"src/css.js": "./css/adjustCSS ./css/addGetHookIf ./css/support ./css/finalPropName ./core/init ./core/ready ./selector  contains function jQuery pnum access camelCase document rcssNum rnumnonpx cssExpand getStyles swap curCSS adjustCSS addGetHookIf support getStyles swap curCSS adjustCSS addGetHookIf support ,  finalPropName use strict = : 0 : 400 = Webkit Moz ms = document createElement div style  Return a css property mapped to a potentially vendor prefixed property function vendorPropName name  Shortcut for names that are not vendor prefixed if in return  Check for vendor prefixed names var = 0 toUpperCase + name slice 1 = cssPrefixes length while -- = + if in return  Return a property mapped along what jQuery.cssProps suggests or to  a vendor prefixed property. function finalPropName name var = jQuery cssProps if ! = jQuery cssProps = vendorPropName || return function setPositiveNumber elem value subtract ", "src/css/finalPropName.js": "define ../var/document function document use strict var = Webkit Moz ms = document createElement div style =  Return a vendor-prefixed property or undefined function vendorPropName name  Check for vendor prefixed names var = 0 toUpperCase + name slice 1 = cssPrefixes length while -- = + if in return  Return a potentially-mapped jQuery.cssProps or vendor prefixed property function finalPropName name var = jQuery cssProps || if return if in return return = vendorPropName || return ", "src/effects/Tween.js": "define ../core ../css/finalPropName ../css function jQuery function jQuery ,  finalPropName use strict  Use .style if available and use plain properties where available. if jQuery fx step tween prop jQuery fx step tween prop else if tween elem nodeType === 1 && (  tween . elem . style [  jQuery cssProps tween prop  ]  !=   null || jQuery . cssHooks [  tween prop ] else if tween elem nodeType === 1 &&  ( \t jQuery cssHooks tween prop || tween . elem . style [  finalPropName (  tween prop ) ]  !=   null jQuery style tween elem tween prop tween now + tween unit else tween elem tween prop = tween now ", "count": 3}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.3. -pre version 3.3. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3. -pre version 3. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.3. -pre version 3.3. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"test/unit/traversing.js": "QUnit . test not(Selector) excludes non-element nodes (gh-2808) function assert [  jQuery . find . compile   ?   test   :    ] not(Selector) excludes non-element nodes (gh-2808) function assert assert expect 3 var = jQuery #nonnodes contents ", "count": 1}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {"src/traversing/findFilter.js": "use strict var =    Implement the identical functionality for filter and not function winnow elements qualifier not if isFunction  Simple selector that can be filtered directly, removing non-Elements if risSimple test return jQuery filter  Complex selector, compare the two sets, removing non-Elements = jQuery filter return jQuery grep function elem return indexOf call > - 1 !== && elem nodeType === 1  Filtered directly for both simple and complex selectors return jQuery filter jQuery filter = function expr elems not ", "count": 1}},
{"dictionary": {"test/data/inner_module.js": "window ok true evaluated:   module with src window ok true evaluated:   module with src ", "test/data/testinit.js": "QUnit isSwarm = QUnit urlParams swarmURL + indexOf http === 0 QUnit basicTests = QUnit urlParams module + === basic  Async test for module script type support function moduleTypeSupported var = document createElement script script type = module script text = QUnit.moduleTypeSupported = true document head appendChild parentNode removeChild moduleTypeSupported this loadTests = function  Get testSubproject from testrunner first require data/testrunner.js function var = 0 ", "test/unit/manipulation.js": "testHtml QUnit test html(script type module) function assert assert expect 1 var = jQuery #qunit-fixture = fixture html QUnit moduleTypeSupported ? test : skip html(script type module) function assert assert expect 4 var = assert async = jQuery #qunit-fixture $fixture html <script type='module'>ok( true, 'evaluated: module' );</script> <script type='module' src=' module.js'></script> <script type='module' src='   +   url (  module.js  )  +   '></script> <div> <script type='module'>ok( true, 'evaluated: inner module' );</script> <script type='module' src=' inner_module.js'></script> <script type='module' src='   +   url (  inner_module.js  )  +   '></script> </div> join find script assert equal tmp length 4 All script tags remain.  Allow asynchronous script execution to generate assertions setTimeout function done 1000 QUnit test html(Function) with incoming value -- direct selection function assert ", "count": 3}},
{"dictionary": {"Gruntfile.js": ": false : 3 : 20 * 1000  To debug tests with Karma:  - Run 'grunt karma:chrome' or 'grunt karma:firefox'    (any karma subtask that has singleRun=false)  - Press \"Debug\" in the opened browser window. : false : true : : ChromeHeadless : true : ChromeHeadless : : Chrome  To debug tests with Karma:  1. Run 'grunt karma:chrome-debug' or 'grunt karma:firefox-debug'     (any karma subtask that has singleRun=false)  2. Press \"Debug\" in the opened browser window to start     the tests. Unlike the other karma tasks, the debug task will     keep the browser window open. chrome-debug : : Chrome : false : : Firefox firefox-debug : : Firefox : false : ", "count": 1}},
{"dictionary": {".travis.yml": "language node_js sudo false  Temporary workaround.  Karma can't access the binaries on travis  without root access.  See https://github.com/travis-ci/travis-ci/issues/8836 sudo required node_js 4 6 ", "Gruntfile.js": ": : ChromeHeadless : true  Temporary workaround.  Karma can't access the binaries on travis  without root access.  See https://github.com/travis-ci/travis-ci/issues/8836 : required : true : : Chrome ", "count": 2}},
{"dictionary": {"src/event.js": "./core/init ./selector function jQuery document isFunction ,  documentElement rnothtmlwhite function jQuery document documentElement ,  isFunction rnothtmlwhite slice dataPriv nodeName use strict ", "src/var/isFunction.js": "return function isFunction obj     Support: Chrome <=57, Firefox <=52     In some browsers, typeof returns \"function\" for HTML <object> elements     (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).     We don't want to classify *any* DOM node as a function.    return typeof === function && typeof obj nodeType !== number     Support: Chrome <=57, Firefox <=52  In some browsers, typeof returns \"function\" for HTML <object> elements  (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).  We don't want to classify *any* DOM node as a function. return typeof === function && typeof obj nodeType !== number ", "count": 2}},
{"dictionary": {"Gruntfile.js": ": : ChromeHeadless : true : true  Temporary workaround.  Karma can't access the binaries on travis  without root access.  See https://github.com/travis-ci/travis-ci/issues/8836 : required : : Chrome ", "count": 1}},
{"dictionary": {"src/core/DOMEval.js": "function document use strict function DOMEval code doc var = : true : true : true function DOMEval code doc node = || document var = doc createElement script var = doc createElement script script text = if for in if = doc head appendChild parentNode removeChild ", "src/manipulation.js": "! dataPriv access globalEval && jQuery contains if node src if node src &&  (  node . type   ||    ). toLowerCase ()   !==      Optional AJAX dependency, but won't run scripts if not present if jQuery _evalUrl jQuery _evalUrl node src else DOMEval node textContent replace DOMEval node textContent replace , node ", "src/manipulation/var/rscriptType.js": "define function use strict return   (?:java ecma)script i return   (?:java ecma)script i ", "test/data/inner_module.js": "window ok true evaluated: innert module with src ", "test/data/module.js": "window ok true evaluated: module with src ", "test/unit/manipulation.js": "testHtml QUnit test html(script type module) function assert assert expect 1 var = jQuery #qunit-fixture = fixture html <script type='module'>ok( true, 'evaluated: module' );</script> <script type='module' src='./data/module.js'></script> <div> <script type='module'>ok( true, 'evaluated: inner module' );</script> <script type='module' src='./data/inner_module.js'></script> </div> join find script assert equal tmp length 4 All script tags remain. QUnit test html(Function) with incoming value -- direct selection function assert assert expect 4 ", "count": 6}},
{"dictionary": {"test/unit/basic.js": "QUnit test core function assert assert expect 17 assert expect 18 var = jQuery <div></div><span></span> ", "count": 1}},
{"dictionary": {"test/unit/css.js": "getUnits lineHeight = parseFloat $child css lineHeight 1em css lineHeight add lineHeight 50 % add lineHeight 2 em add lineHeight - 10 px add lineHeight 20 pt add lineHeight 30 pc add lineHeight 1 cm add lineHeight - 44 mm add lineHeight 50 % QUnit test css() mismatched relative values with bounded styles (gh-2144) function assert ", "count": 1}},
{"dictionary": {"test/unit/attributes.js": "assert expect 12 var assert equal jQuery removeAttr class attr class undefined remove class assert equal jQuery removeAttr class attr class undefined remove class assert equal jQuery #form removeAttr id attr id undefined Remove id assert equal jQuery #foo attr style position:absolute; removeAttr style attr style undefined Check removing style attribute assert equal jQuery #form attr style position:absolute; removeAttr style attr style undefined Check removing style attribute on a form ", "count": 1}},
{"dictionary": {"src/core.js": "noop : function isNumeric : function obj  As of jQuery 3.0, isNumeric is limited to  strings and numbers (primitives or objects)  that can be coerced to finite numbers (gh-2662) var = jQuery type return === number || === string &&  parseFloat NaNs numeric-cast false positives (\"\")  ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")  subtraction forces infinities to NaN ! isNaN - parseFloat isPlainObject : function obj var ", "src/deprecated.js": "jQuery now = Date now jQuery isNumeric = function obj  As of jQuery 3.0, isNumeric is limited to  strings and numbers (primitives or objects)  that can be coerced to finite numbers (gh-2662) var = jQuery type return === number || === string &&  parseFloat NaNs numeric-cast false positives (\"\")  ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")  subtraction forces infinities to NaN ! isNaN - parseFloat ", "test/unit/basic.js": "QUnit test core function assert assert expect 23 assert expect 21 var = jQuery <div></div><span></span> assert ok jQuery isPlainObject a : 2 jQuery.isPlainObject(object) assert ok ! jQuery isPlainObject foo jQuery.isPlainObject(String) assert ok jQuery isNumeric -2 jQuery.isNumeric(String representing a number) assert ok ! jQuery isNumeric jQuery.isNumeric( ) assert ok jQuery isXMLDoc jQuery parseXML <?xml version='1.0' encoding='UTF-8'?><foo bar='baz'></foo> jQuery.isXMLDoc ", "test/unit/core.js": "QUnit test isNumeric function assert assert expect 43 var = jQuery isNumeric ToString = function value this toString = function return String assert ok t -10 Negative integer string assert ok t 0 Zero string assert ok t 5 Positive integer string assert ok t - 16 Negative integer number assert ok t 0 Zero integer number assert ok t 32 Positive integer number assert ok t -1.6 Negative floating point string assert ok t 4.536 Positive floating point string assert ok t - 2.6 Negative floating point number assert ok t 3.1415 Positive floating point number assert ok t 1.5999999999999999 Very precise floating point number assert ok t 8e5 Exponential notation assert ok t 123e-2 Exponential notation string assert ok t 040 Legacy octal integer literal string assert ok t 0xFF Hexadecimal integer literal string (0x...) assert ok t 0Xba Hexadecimal integer literal string (0X...) assert ok t 0xFFF Hexadecimal integer literal if + 0b1 === 1 assert ok t 0b111110 Binary integer literal string (0b...) assert ok t 0B111110 Binary integer literal string (0B...) else assert ok true Browser does not support binary integer literal (0b...) assert ok true Browser does not support binary integer literal (0B...) if + 0o1 === 1 assert ok t 0o76 Octal integer literal string (0o...) assert ok t 0O76 Octal integer literal string (0O...) else assert ok true Browser does not support octal integer literal (0o...) assert ok true Browser does not support octal integer literal (0O...) assert equal t new ToString 42 false Only limited to strings and numbers assert equal t false Empty string assert equal t          false Whitespace characters string assert equal t false Tab characters string assert equal t abcdefghijklm1234567890 false Alphanumeric character string assert equal t xabcdefx false Non-numeric character string assert equal t true false Boolean true literal assert equal t false false Boolean false literal assert equal t bcfed5.2 false Number with preceding non-numeric characters assert equal t 7.2acdgs false Number with trailing non-numeric characters assert equal t undefined false Undefined value assert equal t null false Null value assert equal t NaN false NaN value assert equal t Infinity false Infinity primitive assert equal t Number POSITIVE_INFINITY false Positive Infinity assert equal t Number NEGATIVE_INFINITY false Negative Infinity assert equal t new ToString Devo false Custom .toString returning non-number assert equal t false Empty object assert equal t false Empty array assert equal t 42 false Array with one number assert equal t function false Instance of a function assert equal t new Date false Instance of a Date typeof Symbol === function ? test : skip isNumeric(Symbol) function assert assert expect 2 assert equal jQuery isNumeric Symbol false Symbol assert equal jQuery isNumeric Object Symbol false Symbol inside an object QUnit test isXMLDoc - HTML function assert assert expect 4 ", "test/unit/css.js": "var = jQuery <div style='letter-spacing:normal;font-weight:normal;'>test</div> appendTo #qunit-fixture assert ok jQuery . isNumeric parseFloat el css letterSpacing css('letterSpacing') not convertable to number, see #8627 assert ok jQuery . isNumeric parseFloat el css fontWeight css('fontWeight') not convertable to number, see #8627 assert ok ! isNaN parseFloat el css letterSpacing css('letterSpacing') not convertable to number, see #8627 assert ok ! isNaN parseFloat el css fontWeight css('fontWeight') not convertable to number, see #8627 assert equal typeof el css fontWeight string .css() returns a string ", "test/unit/deprecated.js": "= jQuery proxy null arg1 arg2 cb call arg3 QUnit test isNumeric function assert assert expect 43 var = jQuery isNumeric ToString = function value this toString = function return String assert ok t -10 Negative integer string assert ok t 0 Zero string assert ok t 5 Positive integer string assert ok t - 16 Negative integer number assert ok t 0 Zero integer number assert ok t 32 Positive integer number assert ok t -1.6 Negative floating point string assert ok t 4.536 Positive floating point string assert ok t - 2.6 Negative floating point number assert ok t 3.1415 Positive floating point number assert ok t 1.5999999999999999 Very precise floating point number assert ok t 8e5 Exponential notation assert ok t 123e-2 Exponential notation string assert ok t 040 Legacy octal integer literal string assert ok t 0xFF Hexadecimal integer literal string (0x...) assert ok t 0Xba Hexadecimal integer literal string (0X...) assert ok t 0xFFF Hexadecimal integer literal if + 0b1 === 1 assert ok t 0b111110 Binary integer literal string (0b...) assert ok t 0B111110 Binary integer literal string (0B...) else assert ok true Browser does not support binary integer literal (0b...) assert ok true Browser does not support binary integer literal (0B...) if + 0o1 === 1 assert ok t 0o76 Octal integer literal string (0o...) assert ok t 0O76 Octal integer literal string (0O...) else assert ok true Browser does not support octal integer literal (0o...) assert ok true Browser does not support octal integer literal (0O...) assert equal t new ToString 42 false Only limited to strings and numbers assert equal t false Empty string assert equal t          false Whitespace characters string assert equal t false Tab characters string assert equal t abcdefghijklm1234567890 false Alphanumeric character string assert equal t xabcdefx false Non-numeric character string assert equal t true false Boolean true literal assert equal t false false Boolean false literal assert equal t bcfed5.2 false Number with preceding non-numeric characters assert equal t 7.2acdgs false Number with trailing non-numeric characters assert equal t undefined false Undefined value assert equal t null false Null value assert equal t NaN false NaN value assert equal t Infinity false Infinity primitive assert equal t Number POSITIVE_INFINITY false Positive Infinity assert equal t Number NEGATIVE_INFINITY false Negative Infinity assert equal t new ToString Devo false Custom .toString returning non-number assert equal t false Empty object assert equal t false Empty array assert equal t 42 false Array with one number assert equal t function false Instance of a function assert equal t new Date false Instance of a Date typeof Symbol === function ? test : skip isNumeric(Symbol) function assert assert expect 2 assert equal jQuery isNumeric Symbol false Symbol assert equal jQuery isNumeric Object Symbol false Symbol inside an object ", "count": 6}},
{"dictionary": {"src/ajax.js": " Remember the hash so we can put it back = s url slice cacheURL length  If data is available, append data to url if s data  If data is available , append data to url if s data &&  (  s . processData   ||   typeof   s . data   ===    )  += rquery test ? & : ? + s data  #9682: remove data so that it's not used in an eventual retry ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - data - no processing  1 function assert ajaxTest jQuery.ajax() - data - no processing  1 function assert return : bogus.html : : A Beautiful World ajaxTest jQuery.ajax() - data - no processing GET 1 function assert return : bogus.html : : A Beautiful World : get : x-something-else : false beforeSend : function _ s assert deepEqual s data : A Beautiful World data is not processed return false : true ajaxTest jQuery.ajax() - data - process string with GET 2 function assert return : bogus.html : a=1&b=2 : get : x-something-else : false beforeSend : function _ s assert equal s url bogus.html?a=1&b=2 added data to url assert equal s data undefined removed data from settings return false : true var = new Date jQuery each ", "count": 2}},
{"dictionary": {"build/tasks/qunit_fixture.js": "fs readFileSync ./test/data/qunit-fixture.html utf8 toString toString . replace ( ,   ) + ; + // Compat with QUnit 1.x: + ", "count": 1}},
{"dictionary": {"src/deprecated.js": "./core/camelCase ./var/isFunction ./var/isWindow ./var/slice ./var/slice ./event/alias function jQuery nodeName camelCase isFunction isWindow slice use strict ", "src/jquery.js": "./queue/delay ./attributes ./event ./event/alias ./event/focusin ./manipulation ./manipulation/_evalUrl ", "test/unit/deprecated.js": "remove if jQuery fn hover QUnit test hover() mouseenter mouseleave function assert assert expect 1 var = 0 handler1 = function ++ handler2 = function ++ jQuery #firstp hover mouseenter mouseleave off mouseenter off mouseleave hover mouseenter mouseleave off mouseenter mouseleave mouseenter mouseleave assert equal 4 hover handlers fired jQuery fn click ? test : skip trigger() shortcuts function assert assert expect 5 var = jQuery <li><a href='#'>Change location</a></li> prependTo #firstUL elem find a on click function var = jQuery spanx this  same with jQuery(this).find(\"span\"); assert equal close length 0 Context element does not exist, length must be zero assert ok ! 0 Context element does not exist, direct access to element must return undefined return false click  manually clean up detached elements elem remove jQuery #check1 click function assert ok true click event handler for checkbox gets fired twice, see #815 click = 0 jQuery #firstp 0 onclick = function ++ jQuery #firstp click assert equal 1 Check that click, triggers onclick event handler also = 0 jQuery #simon1 0 onclick = function ++ jQuery #simon1 click assert equal 1 Check that click, triggers onclick event handler on an a tag also jQuery fn click ? test : skip Event aliases function assert  Explicitly skipping focus/blur events due to their flakiness var = jQuery <div /> appendTo #qunit-fixture = resize scroll click dblclick mousedown mouseup  + mousemove mouseover mouseout mouseenter mouseleave change  + select submit keydown keypress keyup contextmenu split   assert expect aliases length jQuery each function i name  e.g. $(elem).click(...).click(); function event assert equal event type triggered  + off QUnit test jQuery.parseJSON function assert assert expect 20 ", "test/unit/event.js": "check 0 if jQuery fn hover QUnit test hover() mouseenter mouseleave function assert assert expect 1 var = 0 handler1 = function ++ handler2 = function ++ jQuery #firstp hover mouseenter mouseleave off mouseenter off mouseleave hover mouseenter mouseleave off mouseenter mouseleave mouseenter mouseleave assert equal 4 hover handlers fired QUnit test mouseover triggers mouseenter function assert assert expect 1 jQuery triggerHandler click QUnit test hover event no longer special since 1.9 function assert assert expect 1 jQuery <div>craft</div> on hover function e assert equal e type hover I am hovering! trigger hover off hover QUnit test event object properties on natively-triggered event function assert assert expect 3 $radio trigger click true jQuery fn click ? test : skip trigger() shortcuts function assert assert expect 5 var = jQuery <li><a href='#'>Change location</a></li> prependTo #firstUL elem find a on click function var = jQuery spanx this  same with jQuery(this).find(\"span\"); assert equal close length 0 Context element does not exist, length must be zero assert ok ! 0 Context element does not exist, direct access to element must return undefined return false click  manually clean up detached elements elem remove jQuery #check1 click function assert ok true click event handler for checkbox gets fired twice, see #815 click = 0 jQuery #firstp 0 onclick = function ++ jQuery #firstp click assert equal 1 Check that click, triggers onclick event handler also = 0 jQuery #simon1 0 onclick = function ++ jQuery #simon1 click assert equal 1 Check that click, triggers onclick event handler on an a tag also jQuery fn click ? test : skip Event aliases function assert  Explicitly skipping focus/blur events due to their flakiness var = jQuery <div /> appendTo #qunit-fixture = resize scroll click dblclick mousedown mouseup  + mousemove mouseover mouseout mouseenter mouseleave change  + select submit keydown keypress keyup contextmenu split   assert expect aliases length jQuery each function i name  e.g. $(elem).click(...).click(); function event assert equal event type triggered  + off  Support: IE <=9 only  https://msdn.microsoft.com/en-us/library/hh801223(v=vs.85).aspx QUnit test VML with special event handlers (trac-7071) function assert ", "count": 4}},
{"dictionary": {"src/callbacks.js": "define ./core ./core/toType ./var/isFunction ./var/rnothtmlwhite function jQuery isFunction rnothtmlwhite function jQuery toType ,  isFunction rnothtmlwhite use strict if ! options unique || ! self has list push else if && arg length && jQuery . type !== string else if && arg length && toType !== string  Inspect recursively add ", "src/core.js": "./var/support ./var/isFunction ./var/isWindow ./core/DOMEval ./core/DOMEval ./core/toType function arr document getProto slice concat push indexOf class2type toString hasOwn fnToString ObjectFunctionString support isFunction isWindow DOMEval support isFunction isWindow DOMEval ,  toType use strict return true type : function obj if == null return +  Support: Android <=2.3 only (functionish RegExp) return typeof === object || typeof === function ? toString call || object : typeof  Evaluates a script in a global context globalEval : function code DOMEval  hasOwn isn't used here due to false negatives  regarding Nodelist length in IE var = !! && length in && obj length = jQuery . type = toType if isFunction || isWindow return false ", "src/core/access.js": "define ../core ../core/toType ../var/isFunction function jQuery isFunction function jQuery toType ,  isFunction use strict = == null  Sets many values if jQuery . type === object if toType === object = true for in access true ", "src/core/toType.js": "define ../var/class2type ../var/toString function class2type toString use strict function toType obj if == null return +  Support: Android <=2.3 only (functionish RegExp) return typeof === object || typeof === function ? toString call || object : typeof return ", "src/deprecated.js": "./core ./core/nodeName ./core/camelCase ./core/toType ./var/isFunction ./var/isWindow ./var/slice ./event/alias function jQuery nodeName camelCase isFunction isWindow slice function jQuery nodeName camelCase toType ,  isFunction isWindow slice use strict jQuery isFunction = jQuery isWindow = jQuery camelCase = jQuery type = jQuery now = Date now ", "src/manipulation/buildFragment.js": "define ../core ../core/toType ./var/rtagName ./var/rscriptType ./wrapMap ./getAll ./setGlobalEval function jQuery rtagName rscriptType wrapMap getAll setGlobalEval function jQuery toType ,  rtagName rscriptType wrapMap getAll setGlobalEval use strict if || === 0  Add nodes directly if jQuery . type === object if toType === object  Support: Android <=4.0 only, PhantomJS 1 only  push.apply(_, arraylike) throws on ancient WebKit ", "src/serialize.js": "define ./core ./core/toType ./manipulation/var/rcheckableType ./var/isFunction ./core/init ./traversing  filter ./attributes/prop function jQuery rcheckableType isFunction function jQuery toType ,  rcheckableType isFunction use strict else if ! && jQuery . type === object else if ! && toType === object  Serialize object item. for in ", "test/unit/ajax.js": ": jsonp : success : function data assert strictEqual (  jQuery . type ,  JSON results returned (GET, REST-like with param) assert ok (  Array . isArray JSON results returned (GET, REST-like with param) ", "test/unit/basic.js": "QUnit test core function assert assert expect 21 assert expect 17 var = jQuery <div></div><span></span> assert strictEqual elem length 2 Correct number of elements assert strictEqual jQuery trim   hello    hello jQuery.trim assert strictEqual jQuery type null null jQuery.type(null) assert strictEqual jQuery type undefined undefined jQuery.type(undefined) assert strictEqual jQuery type a string jQuery.type(String) assert ok jQuery isPlainObject a : 2 jQuery.isPlainObject(object) assert ok ! jQuery isPlainObject foo jQuery.isPlainObject(String) ", "test/unit/core.js": "assert equal jQuery trim   ! |  ! | leading/trailing should be trimmed QUnit test type function assert assert expect 28 assert equal jQuery type null null null assert equal jQuery type undefined undefined undefined assert equal jQuery type true boolean Boolean assert equal jQuery type false boolean Boolean assert equal jQuery type Boolean true boolean Boolean assert equal jQuery type 0 number Number assert equal jQuery type 1 number Number assert equal jQuery type Number 1 number Number assert equal jQuery type string String assert equal jQuery type a string String assert equal jQuery type String a string String assert equal jQuery type object Object assert equal jQuery type   foo regexp RegExp assert equal jQuery type new RegExp asdf regexp RegExp assert equal jQuery type 1 array Array assert equal jQuery type new Date date Date assert equal jQuery type new Function return; function Function assert equal jQuery type function function Function assert equal jQuery type new Error error Error assert equal jQuery type window object Window assert equal jQuery type document object Document assert equal jQuery type document body object Element assert equal jQuery type document createTextNode foo object TextNode assert equal jQuery type document getElementsByTagName * object NodeList  Avoid Lint complaints var = String = Number = Boolean = Object assert equal jQuery type new MyBoolean true boolean Boolean assert equal jQuery type new MyNumber 1 number Number assert equal jQuery type new MyString a string String assert equal jQuery type new MyObject object Object QUnit test type for `Symbol` function assert  Prevent reference errors if typeof Symbol !== function assert expect 0 return assert expect 2 assert equal jQuery type Symbol symbol Symbol assert equal jQuery type Object Symbol symbol Symbol QUnit asyncTest isPlainObject function assert assert expect 23 = jQuery parseHTML jQuery body 0 innerHTML assert ok nodes length > 4 Parse a large html string assert equal (  jQuery . type ,  parseHTML returns an array rather than a nodelist assert ok (  Array . isArray parseHTML returns an array rather than a nodelist = <script>undefined()</script> assert equal jQuery parseHTML length 0 Ignore scripts by default ", "test/unit/deferred.js": "assert strictEqual non objects get extended jQuery each function key if typeof !== function assert ok false +  is a function ( + jQuery . type + ) assert ok false +  is a function ( + typeof + ) if !== assert strictEqual +  is the same ", "test/unit/deprecated.js": "QUnit test core function assert QUnit test type function assert assert expect 28 assert equal jQuery type null null null assert equal jQuery type undefined undefined undefined assert equal jQuery type true boolean Boolean assert equal jQuery type false boolean Boolean assert equal jQuery type Boolean true boolean Boolean assert equal jQuery type 0 number Number assert equal jQuery type 1 number Number assert equal jQuery type Number 1 number Number assert equal jQuery type string String assert equal jQuery type a string String assert equal jQuery type String a string String assert equal jQuery type object Object assert equal jQuery type   foo regexp RegExp assert equal jQuery type new RegExp asdf regexp RegExp assert equal jQuery type 1 array Array assert equal jQuery type new Date date Date assert equal jQuery type new Function return; function Function assert equal jQuery type function function Function assert equal jQuery type new Error error Error assert equal jQuery type window object Window assert equal jQuery type document object Document assert equal jQuery type document body object Element assert equal jQuery type document createTextNode foo object TextNode assert equal jQuery type document getElementsByTagName * object NodeList  Avoid Lint complaints var = String = Number = Boolean = Object assert equal jQuery type new MyBoolean true boolean Boolean assert equal jQuery type new MyNumber 1 number Number assert equal jQuery type new MyString a string String assert equal jQuery type new MyObject object Object typeof Symbol === function ? test : skip type for `Symbol` function assert assert expect 2 assert ok jQuery isFunction (  jQuery . noop assert ok (  ! jQuery isFunction (  2  ) assert equal jQuery type (  Symbol () ,  assert equal (  jQuery type (  Object (  Symbol () ) ) ,  QUnit test isFunction function assert assert expect 20 ", "count": 12}},
{"dictionary": {"test/unit/event.js": "= : true handler1 = function assert equal this on() with different this object . bind ( thisObject ) handler2 = function event assert equal this on() with different this object and data assert equal event data on() with different this object and data . bind ( thisObject ) jQuery #firstp on click handler1 . bind ( thisObject ) trigger click off click on click handler2 . bind ( thisObject ) trigger click off click on click trigger click off click on click trigger click off click assert ok ! jQuery _data jQuery #firstp 0 events Event handler unbound when using different this object and data. ", "count": 1}},
{"dictionary": {"Gruntfile.js": "dist/<%= grunt.option('filename').replace('.js', '.min.map') %> : min : ascii_only : true ascii_only : true  Support: Android 4.0 only  UglifyJS 3 breaks Android 4.0 if this option is not enabled.  This is in lieu of setting ie8 for all of mangle, compress, and output ie8 : true : /*! jQuery v<%= pkg.version %> |  + (c) JS Foundation and other contributors | jquery.org/license */ ", "package.json": "sizzle 2.3.3 strip-json-comments 2.0.1 testswarm 1.1.0 uglify-js 3. uglify-js 3. scripts build npm install && grunt ", "count": 2}},
{"dictionary": {"test/unit/ajax.js": "ajaxTest jQuery.ajax() - native timeout 2 function assert return : url mock.php?action=wait&wait=1 xhr : function var = new window.XMLHttpRequest xhr timeout = 1 return error : function xhr msg assert strictEqual error Native timeout triggers error callback complete : function assert ok true complete  Support: Android <= 4.0 - 4.3 only  Android 4.0-4.3 does not have ontimeout on an xhr if ontimeout in new window.XMLHttpRequest ajaxTest jQuery.ajax() - native timeout 2 function assert return : url mock.php?action=wait&wait=1 xhr : function var = new window.XMLHttpRequest xhr timeout = 1 return error : function xhr msg assert strictEqual error Native timeout triggers error callback complete : function assert ok true complete ajaxTest jQuery.ajax() - events with context 12 function assert var = document createElement div ", "count": 1}},
{"dictionary": {"test/unit/ajax.js": "QUnit test jQuery.getScript( Object ) - with callback 2 function assert var = assert async Globals register testBar jQuery getScript : url mock.php?action=testbar success : function assert strictEqual window testBar bar Check if script was evaluated done QUnit test jQuery.getScript( Object ) - no callback 1 function assert Globals register testBar jQuery getScript : url mock.php?action=testbar done assert async  //----------- jQuery.fn.load()  check if load can be called with only url ", "count": 1}},
{"dictionary": {"src/attributes/classes.js": "return elem getAttribute && elem getAttribute class || function classesToArray value if Array isArray return if typeof === string return value match || return jQuery fn extend addClass : function value var if typeof === string && = value match || = classesToArray if classes length while = this ++ = getClass = elem nodeType === 1 &&   + stripAndCollapse +   return this attr class if typeof === string && = value match || = classesToArray if classes length while = this ++ = getClass toggleClass : function value stateVal var = typeof var = typeof = === string || Array isArray if typeof === boolean && type  ===   if typeof === boolean && isValidValue return ? this addClass : this removeClass return this each function var if type  ===   if isValidValue  Toggle individual class names = 0 = jQuery this = value . match ( rnothtmlwhite )  ||  [] = classesToArray ( value ) while = ++ ", "test/unit/attributes.js": "function arrayFromString value return ? value split   : \t======== local reference ======= \tbareObj and functionReturningObj can be used to test passing functions to setters testAddClass QUnit test addClass(Array) function assert testAddClass QUnit test addClass(Function) with incoming value function assert assert expect 52 var testRemoveClass QUnit test removeClass(Array) - simple function assert testRemoveClass QUnit test removeClass(Function) with incoming value function assert assert expect 52 testToggleClass QUnit test toggleClass(Array[, boolean]) function assert testToggleClass QUnit test toggleClass(Function[, boolean]) with incoming value function assert assert expect 14 Did not find a class when not present QUnit test addClass, removeClass, hasClass on many elements - Array function assert assert expect 16 var = jQuery <p>p0</p><p>p1</p><p>p2</p> elem addClass hi assert equal 0 className hi Check single added class assert equal 1 className hi Check single added class assert equal 2 className hi Check single added class elem addClass foo bar assert equal 0 className hi foo bar Check more added classes assert equal 1 className hi foo bar Check more added classes assert equal 2 className hi foo bar Check more added classes elem removeClass assert equal 0 className Remove all classes assert equal 1 className Remove all classes assert equal 2 className Remove all classes elem addClass hi foo bar baz elem removeClass foo assert equal 0 className hi bar baz Check removal of one class assert equal 1 className hi bar baz Check removal of one class assert equal 2 className hi bar baz Check removal of one class elem removeClass bar baz assert equal 0 className hi Check removal of two classes assert equal 1 className hi Check removal of two classes assert equal 2 className hi Check removal of two classes assert ok elem hasClass hi Check has1 QUnit test addClass, removeClass, hasClass on elements with classes with non-HTML whitespace (gh-3072, gh-3003) function assert assert expect 9 ", "count": 2}},
{"dictionary": {"src/manipulation.js": "if nodeName table && nodeName content nodeType !== 11 ? : content firstChild tr return jQuery tbody , elem 0 || return jQuery elem ). children (  tbody 0 || return ", "count": 1}},
{"dictionary": {"src/ajax.js": "define ./core ./var/document ./var/isFunction ./var/rnothtmlwhite ./ajax/var/location ./ajax/var/nonce ./event/trigger ./deferred ./serialize  jQuery.param function jQuery document rnothtmlwhite location nonce rquery function jQuery document isFunction ,  rnothtmlwhite location nonce rquery use strict = 0 = dataTypeExpression toLowerCase match || if jQuery . isFunction if isFunction  For each dataType in the dataTypeExpression while = ++ = function url data callback type  Shift arguments if data argument was omitted if jQuery . isFunction if isFunction = || = = undefined ", "src/ajax/jsonp.js": "define ../core ../var/isFunction ./var/nonce ./var/rquery ../ajax function jQuery nonce rquery function jQuery isFunction ,  nonce rquery use strict if || s dataTypes 0 === jsonp  Get callback name, remembering preexisting value associated with it = s jsonpCallback = jQuery . isFunction s jsonpCallback ? = s jsonpCallback = isFunction s jsonpCallback ? s jsonpCallback : s jsonpCallback  Call if it was a function and we have a response if && jQuery . isFunction if && isFunction overwritten 0 ", "src/ajax/load.js": "define ../core ../core/stripAndCollapse ../var/isFunction ../core/parseHTML ../ajax ../traversing ../manipulation ../selector function jQuery stripAndCollapse function jQuery stripAndCollapse ,  isFunction use strict  If it's a function if jQuery . isFunction if isFunction  We assume that it's the callback = ", "src/attributes/classes.js": "define ../core ../core/stripAndCollapse ../var/isFunction ../var/rnothtmlwhite ../data/var/dataPriv ../core/init function jQuery stripAndCollapse rnothtmlwhite dataPriv function jQuery stripAndCollapse isFunction ,  rnothtmlwhite dataPriv use strict var = 0 if jQuery . isFunction if isFunction return this each function j jQuery this addClass value call this getClass this var = 0 if jQuery . isFunction if isFunction return this each function j jQuery this removeClass value call this getClass this return ? this addClass : this removeClass if jQuery . isFunction if isFunction return this each function i jQuery this toggleClass value call this getClass this ", "src/attributes/val.js": "../core/stripAndCollapse ./support ../core/nodeName ../var/isFunction ../core/init function jQuery stripAndCollapse support nodeName function jQuery stripAndCollapse support nodeName ,  isFunction use strict var =   g jQuery fn extend val : function value var isFunction var valueIsFunction = this 0 if ! arguments length return isFunction = jQuery . isFunction valueIsFunction = isFunction return this each function i var return if isFunction if valueIsFunction = value call this jQuery this val else = ", "src/callbacks.js": "define ./core ./var/isFunction ./var/rnothtmlwhite function jQuery rnothtmlwhite function jQuery isFunction ,  rnothtmlwhite use strict function add args jQuery each function _ arg if jQuery . isFunction if isFunction if ! options unique || ! self has list push ", "src/core.js": "./var/fnToString ./var/ObjectFunctionString ./var/support ./var/isFunction ./var/isWindow ./core/DOMEval function arr document getProto slice concat push indexOf class2type toString hasOwn fnToString ObjectFunctionString support isWindow DOMEval support isFunction ,  isWindow DOMEval use strict  Handle case when target is a string or something (possible in deep copy) if typeof !== object && ! jQuery . isFunction if typeof !== object && ! isFunction = noop : function isFunction : function obj  Support: Chrome <=57, Firefox <=52  In some browsers, typeof returns \"function\" for HTML <object> elements  (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).  We don't want to classify *any* DOM node as a function. return typeof === function && typeof obj nodeType !== number isNumeric : function obj  As of jQuery 3.0, isNumeric is limited to var = !! && length in && obj length = jQuery type if jQuery . isFunction || isWindow if isFunction || isWindow return false ", "src/core/access.js": "define ../core function jQuery ../core ../var/isFunction function jQuery isFunction use strict else if !== undefined = true if ! jQuery . isFunction if ! isFunction = true ", "src/core/init.js": "define ../core ../var/document ../var/isFunction ./var/rsingleTag ../traversing/findFilter function jQuery document rsingleTag function jQuery document isFunction ,  rsingleTag use strict for in  Properties of context are called as methods if possible if jQuery . isFunction this if isFunction this this  ...and otherwise set as attributes  HANDLE: $(function)  Shortcut for document ready else if jQuery . isFunction else if isFunction return root ready !== undefined ? root ready : ", "src/core/ready-no-deferred.js": "define ../core ../var/document function jQuery document ../var/document ../var/isFunction function jQuery document isFunction use strict while readyCallbacks length = readyCallbacks shift if jQuery . isFunction if isFunction executeReady ", "src/deferred.js": "define ./core ./var/isFunction ./var/slice ./callbacks function jQuery slice function jQuery isFunction ,  slice use strict try  Check for promise aspect first to privilege synchronous behavior if && jQuery . isFunction = value promise if && isFunction = value promise method call done fail  Other thenables else if && jQuery . isFunction = value then else if && isFunction = value then method call  Other non-thenables jQuery each function i tuple  Map tuples (progress, done, fail) to arguments (done, fail, progress) var = jQuery . isFunction 4 && 4 var = isFunction 4 && 4  deferred.progress(function() { bind to newDefer or newDefer.notify })  deferred.done(function() { bind to newDefer or newDefer.resolve })  deferred.fail(function() { bind to newDefer or newDefer.reject }) 1 function var = && fn apply this arguments if && jQuery . isFunction returned promise if && isFunction returned promise returned promise progress newDefer notify done newDefer resolve returned then  Handle a returned thenable if jQuery . isFunction if isFunction  Special processors (notify) just wait for resolution if resolve 0 jQuery . isFunction ? isFunction ? : newDefer notifyWith resolve 0 jQuery . isFunction ? isFunction ? : resolve 0 jQuery . isFunction ? isFunction ? :  Use .then() to unwrap secondary thenables (cf. gh-3000) if master state === pending || jQuery . isFunction && then isFunction && then return master then ", "count": 11}},
{"dictionary": {"src/deprecated.js": "define ./core ./core/nodeName ./core/camelCase ./var/isWindow function jQuery nodeName isWindow function jQuery nodeName camelCase ,  isWindow use strict jQuery parseJSON = JSON parse jQuery nodeName = jQuery isWindow = jQuery camelCase = ", "test/unit/data.js": "QUnit test .data always sets data with the camelCased key (gh-2257) function assert assert expect 9 assert expect 18 var = jQuery <div> appendTo #qunit-fixture = non-empty : a string empty-string : one-value : 1 zero-value : 0 an-array : an-object : bool-true : true bool-false : false non-empty : : nonEmpty : a string empty-string : : emptyString : one-value : : oneValue : 1 zero-value : : zeroValue : 0 an-array : : anArray : an-object : : anObject : bool-true : : boolTrue : true bool-false : : boolFalse : false  JSHint enforces double quotes,  but JSON strings need double quotes to parse  so we need escaped double quotes here some-json : {  foo :  bar  } some-json : : someJson : {  foo :  bar  } jQuery each function key val div data div data val . value var = div data assert equal undefined .data does not store with hyphenated keys assert equal val key val value .data stores the camelCased key assert equal nested--Triple triple Key with triple hyphens is correctly camelCased QUnit test .data supports interoperable hyphenated get/set of properties with arbitrary non-null|NaN|undefined values function assert QUnit test .data supports interoperable hyphenated  get/set of properties with arbitrary non-null|NaN|undefined values function assert var = jQuery <div/> : hyphened appendTo #qunit-fixture = non-empty : a string empty-string : one-value : 1 zero-value : 0 an-array : an-object : bool-true : true bool-false : false non-empty : : nonEmpty : a string empty-string : : emptyString : one-value : : oneValue : 1 zero-value : : zeroValue : 0 an-array : : anArray : an-object : : anObject : bool-true : : boolTrue : true bool-false : : boolFalse : false  JSHint enforces double quotes,  but JSON strings need double quotes to parse  so we need escaped double quotes here some-json : {  foo :  bar  } num-1-middle : true num-end-2 : true 2-num-start : true some-json : : someJson : {  foo :  bar  } num-1-middle : : num-1Middle : true num-end-2 : : numEnd-2 : true 2-num-start : : 2NumStart : true assert expect 12 assert expect 24 jQuery each function key val div data div data val . value assert deepEqual div data get:  + assert deepEqual div data val value get:  + assert deepEqual div data val key val value get:  + val key QUnit test .data supports interoperable removal of hyphenated properties function assert QUnit test .data supports interoperable removal of hyphenated  properties function assert var = jQuery <div/> : hyphened appendTo #qunit-fixture = non-empty : a string some-json : {  foo :  bar  } assert expect 18 assert expect 27 jQuery each function key val div data assert deepEqual div data get:  + assert deepEqual div data jQuery camelCase get:  + jQuery camelCase div removeData ", "count": 2}},
{"dictionary": {"src/core.js": " A global GUID counter for objects : 1  Bind a function to a context, optionally partially applying any  arguments. proxy : function fn context var if typeof === string = = =  Quick check to determine if target is callable, in the spec  this throws a TypeError, but we will just return undefined. if ! jQuery isFunction return undefined  Simulated bind = slice call arguments 2 proxy = function return fn apply || this args concat slice call arguments  Set the guid of unique handler to the same of original handler, so it can be removed proxy guid = fn guid = fn guid || jQuery guid ++ return  jQuery.support is not used in Core but other projects attach their  properties to it so it needs to exist. : ", "src/deprecated.js": "./core ./core/nodeName ./core/camelCase ./var/isWindow function jQuery nodeName camelCase isWindow ./var/isWindow ./var/slice function jQuery nodeName camelCase isWindow slice use strict  Bind a function to a context, optionally partially applying any  arguments.  jQuery.proxy is deprecated to promote standards (specifically Function#bind)  However, it is not slated for removal any time soon jQuery proxy = function fn context var if typeof === string = = =  Quick check to determine if target is callable, in the spec  this throws a TypeError, but we will just return undefined. if ! jQuery isFunction return undefined  Simulated bind = slice call arguments 2 proxy = function return fn apply || this args concat slice call arguments  Set the guid of unique handler to the same of original handler, so it can be removed proxy guid = fn guid = fn guid || jQuery guid ++ return jQuery holdReady = function hold if jQuery readyWait ++ ", "src/effects.js": "if if jQuery isFunction result stop jQuery _queueHooks animation elem animation opts queue stop = jQuery . proxy (  result stop , result stop . bind ( return ", "test/unit/core.js": " equal(true, jQuery.isEmptyObject(null), \"isEmptyObject on null\" ); QUnit test jQuery.proxy function assert assert expect 9 var test = function assert equal this Make sure that scope is set properly. = : bar :  Make sure normal works test call  Basic scoping jQuery proxy  Another take on it jQuery proxy method  Make sure it doesn't freak out assert equal jQuery proxy null undefined Make sure no function was returned.  Partial application test2 = function a assert equal pre-applied Ensure arguments can be pre-applied. jQuery proxy null pre-applied  Partial application w/ normal arguments test3 = function a b assert equal normal Ensure arguments can be pre-applied and passed as usual. jQuery proxy null pre-applied normal  Test old syntax = : function a assert equal boom Ensure old syntax works. jQuery proxy meth boom  jQuery 1.9 improved currying with `this` object fn = function assert equal Array prototype join call arguments , arg1,arg2,arg3 args passed assert equal this foo bar this-object passed = jQuery proxy null arg1 arg2 cb call arg3 QUnit test jQuery.parseHTML function assert assert expect 23 ", "test/unit/deprecated.js": "assert ok typeof jQuery now === number jQuery.now is a function QUnit test jQuery.proxy function assert assert expect 9 var test = function assert equal this Make sure that scope is set properly. = : bar :  Make sure normal works test call  Basic scoping jQuery proxy  Another take on it jQuery proxy method  Make sure it doesn't freak out assert equal jQuery proxy null undefined Make sure no function was returned.  Partial application test2 = function a assert equal pre-applied Ensure arguments can be pre-applied. jQuery proxy null pre-applied  Partial application w/ normal arguments test3 = function a b assert equal normal Ensure arguments can be pre-applied and passed as usual. jQuery proxy null pre-applied normal  Test old syntax = : function a assert equal boom Ensure old syntax works. jQuery proxy meth boom  jQuery 1.9 improved currying with `this` object fn = function assert equal Array prototype join call arguments , arg1,arg2,arg3 args passed assert equal this foo bar this-object passed = jQuery proxy null arg1 arg2 cb call arg3 ", "test/unit/event.js": "jQuery #firstp on click jQuery . proxy ( handler1, trigger click off click on click jQuery . proxy ( handler2, trigger click off click on click handler1 . bind ( trigger click off click on click handler2 . bind ( trigger click off click assert ok ! jQuery _data jQuery #firstp 0 events Event handler unbound when using different this object and data. jQuery #body off click #foo  Test binding with different this object jQuery #body on click #foo jQuery proxy function assert equal this foo bar on with event scope foo : bar jQuery #body on click #foo function assert equal this foo bar on with event scope bind foo : bar jQuery #foo trigger click jQuery #body off click #foo  Test binding with different this object, event data, and trigger data jQuery #body on click #foo true jQuery . proxy (  function e data jQuery #body on click #foo true function e data assert equal e data true on with with different this object, event data, and trigger data assert equal this foo bar on with with different this object, event data, and trigger data assert equal true on with with different this object, event data, and trigger data , foo : bar . bind ( foo : bar jQuery #foo trigger click true jQuery #body off click #foo ", "count": 6}},
{"dictionary": {"src/ajax/var/nonce.js": "define ../../core function jQuery define function use strict return jQuery now return Date now ", "src/core.js": "return : Date now  jQuery.support is not used in Core but other projects attach their  properties to it so it needs to exist. : ", "src/deprecated.js": "jQuery isWindow = jQuery camelCase = jQuery now = Date now ", "src/effects.js": "window setTimeout function = undefined return = jQuery now return = Date now  Generate parameters to create a standard animation = 0 = jQuery timers = jQuery now = Date now for < timers length ++ = ", "src/event.js": " Create a timestamp if incoming event doesn't have one this timeStamp = && src timeStamp || jQuery now this timeStamp = && src timeStamp || Date now  Mark it as fixed this jQuery expando = true ", "test/unit/animation.js": "this _oldInterval = jQuery fx interval jQuery fx step = jQuery fx interval = 10 jQuery now = Date now jQuery Animation prefilters = jQuery Animation tweeners = * : teardown : function this sandbox restore jQuery now = Date now jQuery fx stop jQuery fx interval = this _oldInterval window requestAnimationFrame = ", "test/unit/core.js": "script src = + mock.php?action=wait&wait=2&script=1 = jQuery now = Date now document body appendChild jQuery globalEval var strictEvalTest =  + jQuery now + ; jQuery globalEval var strictEvalTest =  + Date now + ; assert ok window strictEvalTest - < 500 Code executed synchronously ", "test/unit/deprecated.js": "assert equal jQuery camelCase Converts:  + +  =>  + QUnit test jQuery.now function assert assert expect 1 assert ok typeof jQuery now === number jQuery.now is a function ", "test/unit/effects.js": "this _oldInterval = jQuery fx interval jQuery fx step = jQuery fx interval = 10 jQuery now = Date now teardown : function this sandbox restore jQuery now = Date now jQuery fx stop jQuery fx interval = this _oldInterval window requestAnimationFrame = ", "test/unit/tween.js": "this _oldInterval = jQuery fx interval jQuery fx step = jQuery fx interval = 10 jQuery now = Date now teardown : function this sandbox restore jQuery now = Date now jQuery fx stop jQuery fx interval = this _oldInterval window requestAnimationFrame = ", "count": 10}},
{"dictionary": {".travis.yml": "9 addons chrome stable env NPM_SCRIPT=test:browserless matrix include  Run browser tests only on one Node.js version to save time. node_js 8 env NPM_SCRIPT=test:browser script npm run $NPM_SCRIPT ", "package.json": "scripts build npm install && grunt start grunt watch test grunt && grunt test:slow karma:main jenkins grunt && grunt test:slow test:browserless grunt && grunt test:slow test:browser grunt && grunt karma:main test grunt && grunt test:slow && grunt karma:main jenkins npm run test:browserless precommit grunt lint:newer qunit_fixture commitmsg node node_modules/commitplease ", "count": 2}},
{"dictionary": {"src/core.js": " Support: Android <=4.0 only  Make sure we trim BOM and NBSP =   g  Matches dashed string for camelizing =   -ms- =   -( ) g  Used by jQuery.camelCase as callback to replace() fcamelCase = function all letter return letter toUpperCase =   g jQuery fn = jQuery prototype = DOMEval  Convert dashed to camelCase; used by the css and data modules  Support: IE <=9 - 11, Edge 12 - 15  Microsoft forgot to hump their vendor prefix (#9572) camelCase : function string return string replace ms- replace each : function obj callback var = 0 ", "src/core/camelCase.js": "define function use strict  Matches dashed string for camelizing var =   -ms- =   -( ) g  Used by camelCase as callback to replace() function fcamelCase all letter return letter toUpperCase  Convert dashed to camelCase; used by the css and data modules  Support: IE <=9 - 11, Edge 12 - 15  Microsoft forgot to hump their vendor prefix (#9572) function camelCase string return string replace ms- replace return ", "src/css.js": "./core ./var/pnum ./core/access ./core/camelCase ./var/document ./var/rcssNum ./css/var/rnumnonpx ./core/init ./core/ready ./selector  contains function jQuery pnum access document rcssNum rnumnonpx cssExpand function jQuery pnum access camelCase ,  document rcssNum rnumnonpx cssExpand getStyles swap curCSS adjustCSS addGetHookIf support use strict  Make sure that we're working with the right name var = jQuery . camelCase = camelCase = rcustomProp test = elem style css : function elem name extra styles var = jQuery . camelCase = camelCase = rcustomProp test  Make sure that we're working with the right name. We don't ", "src/data.js": "define ./core ./core/access ./core/camelCase ./data/var/dataPriv ./data/var/dataUser function jQuery access dataPriv dataUser function jQuery access camelCase ,  dataPriv dataUser use strict if = name if name indexOf data- === 0 = jQuery . camelCase name slice 5 = camelCase name slice 5 dataAttr ", "src/data/Data.js": "define ../core ../core/camelCase ../var/rnothtmlwhite ./var/acceptData function jQuery rnothtmlwhite acceptData function jQuery camelCase ,  rnothtmlwhite acceptData use strict  Handle: [ owner, key, value ] args  Always use camelCase key (gh-2257) if typeof === string jQuery . camelCase = camelCase =  Handle: [ owner, { properties } ] args else  Copy the properties one-by-one to the cache object for in jQuery . camelCase = camelCase = return this cache :  Always use camelCase key (gh-2257) this expando && this expando jQuery . camelCase this expando && this expando camelCase access : function owner key value  If key is an array of keys...  We always set camelCase keys, so remove that. = key map jQuery . camelCase = key map else = jQuery . camelCase = camelCase  If a key with the spaces exists, use it.  Otherwise, create an array by matching non-whitespace ", "src/effects.js": "define ./core ./core/camelCase ./var/document ./var/rcssNum ./var/rnothtmlwhite ./manipulation ./css ./effects/Tween function jQuery document rcssNum rnothtmlwhite cssExpand isHiddenWithinTree ,  swap adjustCSS dataPriv showHide function jQuery camelCase ,  document rcssNum rnothtmlwhite cssExpand isHiddenWithinTree swap ,  adjustCSS dataPriv showHide use strict  camelCase, specialEasing and expand cssHook pass for in = jQuery . camelCase = camelCase = = if Array isArray ", "test/unit/core.js": "QUnit test jQuery.camelCase() function assert var = foo-bar : fooBar foo-bar-baz : fooBarBaz girl-u-want : girlUWant the-4th-dimension : the-4thDimension -o-tannenbaum : OTannenbaum -moz-illa : MozIlla -ms-take : msTake assert expect 7 jQuery each function key val assert equal jQuery camelCase Converts:  + +  =>  + testIframe Conditional compilation compatibility (#13274) core/cc_on.html ", "test/unit/data.js": "QUnit test .data always sets data with the camelCased key (gh-2257) function assert assert expect 18 assert expect 9 var = jQuery <div> appendTo #qunit-fixture = div data var = div data assert equal undefined .data does not store with hyphenated keys assert equal jQuery camelCase .data stores the camelCased key assert equal nested--Triple triple Key with triple hyphens is correctly camelCased QUnit test .data supports interoperable hyphenated  get/set of properties with arbitrary non-null|NaN|undefined values function assert QUnit test .data supports interoperable hyphenated get/set of properties with arbitrary non-null|NaN|undefined values function assert var = jQuery <div/> : hyphened appendTo #qunit-fixture = 2-num-start : true assert expect 24 assert expect 12 jQuery each function key val div data assert deepEqual div data get:  + assert deepEqual div data jQuery camelCase get:  + jQuery camelCase QUnit test .data supports interoperable removal of hyphenated  properties function assert QUnit test .data supports interoperable removal of hyphenated properties function assert var = jQuery <div/> : hyphened appendTo #qunit-fixture = non-empty : a string some-json : {  foo :  bar  } assert expect 27 assert expect 18 jQuery each function key val div data assert deepEqual div data get:  + assert deepEqual div data jQuery camelCase get:  + jQuery camelCase div removeData ", "test/unit/deprecated.js": "assert ok ! jQuery isWindow   window regexp assert ok ! jQuery isWindow function function QUnit test jQuery.camelCase() function assert var = foo-bar : fooBar foo-bar-baz : fooBarBaz girl-u-want : girlUWant the-4th-dimension : the-4thDimension -o-tannenbaum : OTannenbaum -moz-illa : MozIlla -ms-take : msTake assert expect 7 jQuery each function key val assert equal jQuery camelCase Converts:  + +  =>  + ", "count": 9}},
{"dictionary": {"src/manipulation.js": " checked=\"checked\" or checked =   checked (?: = checked ) i =   true ( ) =   <!(?: CDATA --) (?: --)> g  Prefer a tbody over its parent table for containing new rows return function restoreScript elem var = rscriptTypeMasked exec elem type if elem type = 1 if elem type || slice 0 5 === true/ elem type = elem type slice 5 else elem removeAttribute type ", "count": 1}},
{"dictionary": {".travis.yml": "4 6 8 9 ", "count": 1}},
{"dictionary": {".travis.yml": "6 8 9 addons chrome stable ", "Gruntfile.js": "tween : : : test/karma.context.html : test/karma.debug.html : qunit : mockserver : karma-* middleware:mockserver : factory require ./test/middleware-mockserver.js : test/data/jquery-1.9.1.js external/qunit-assert-step/qunit-assert-step.js external/sinon/sinon.js external/npo/npo.js external/requirejs/require.js test/data/testinit.js dist/jquery.min.js  Replacement for testinit.js#loadTests() test/data/testrunner.js test/unit/basic.js test/unit/core.js test/unit/callbacks.js test/unit/deferred.js test/unit/deprecated.js test/unit/support.js test/unit/data.js test/unit/queue.js test/unit/attributes.js test/unit/event.js test/unit/selector.js test/unit/traversing.js test/unit/manipulation.js test/unit/wrap.js test/unit/css.js test/unit/serialize.js test/unit/ajax.js test/unit/effects.js test/unit/offset.js test/unit/dimensions.js test/unit/animation.js test/unit/tween.js test/unit/ready.js : dist/jquery.js : false : true : dist/*.map : false : true : external/qunit/qunit.css : false : true : test/**/*.@(js|css|jpg|html|xml) : false : true : dots : false : 3 : 20 * 1000  To debug tests with Karma:  - Run 'grunt karma:chrome' or 'grunt karma:firefox'    (any karma subtask that has singleRun=false)  - Press \"Debug\" in the opened browser window. : false : : ChromeHeadless : true : : Chrome : : Firefox : : <%= eslint.dev.src %> : dev newer:uglify remove_map_comment dist:* qunit_fixture compare_size uglify remove_map_comment dist:* qunit_fixture eslint:dist test:fast compare_size ", "README.md": "Add random number to url to stop caching ### ```js (   ); (   ); ``` ```js ( ); ( );     ( ); ( );     ``` ", "build/tasks/qunit_fixture.js": "var = require fs module exports = function grunt grunt registerTask qunit_fixture function var = ./test/data/qunit-fixture.js fs writeFileSync // Generated by build/tasks/qunit_fixture.js + QUnit.config.fixture =  + JSON stringify fs readFileSync ./test/data/qunit-fixture.html utf8 toString + ; + // Compat with QUnit 1.x: + document.getElementById(  qunit-fixture  ).innerHTML = QUnit.config.fixture; grunt log ok Updated  + + . ", "external/qunit/qunit.css": "!  * QUnit 1.  *  ://qunitjs.com/  * QUnit 1.  *  ://qunitjs.com/  *  * Copyright jQuery Foundation and other contributors  * Released under the MIT license  *  ://jquery.org/license  *  ://jquery.org/license  *  * Date:   * Date:    * Font Family and Sizes  list-item #qunit-tests .hidepass relative #qunit-tests .hidepass li .running #qunit-tests .hidepass li .pass hidden ", "count": 5}},
{"dictionary": {"src/css/support.js": "= divStyle top !== 1%  Support: Android 4.0 - 4.3 only, Firefox <=3 - 44 = divStyle marginLeft === = roundPixelMeasures (  divStyle marginLeft )  === 12  Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3  Some styles come back with percentage values, even though they shouldn't div style right = 60% = divStyle right === = roundPixelMeasures (  divStyle right )  === 36  Support: IE 9 - 11 only  Detect misreporting of content dimensions for box-sizing:border-box elements = divStyle width === = roundPixelMeasures (  divStyle width )  === 36  Support: IE 9 only  Detect overflow:scroll screwiness (gh-3699) = null function roundPixelMeasures measure return Math round parseFloat var = document createElement div ", "test/data/css/cssWidthBrowserZoom.html": "html head meta charset utf-8 style \t\t  { \t\t\t :  ; \t\t} \t\t  { \t\t\t :  ; \t\t\t :  ; \t\t\t :  ; \t\t\t :      ; \t\t\t :  ; \t\t} \t style head body div id test div script src ../../jquery.js script script src ../iframeTest.js script script \t (  (   ). (   ) ); script body html ", "test/unit/css.js": "testIframe css('width') should work correctly with browser zooming css/cssWidthBrowserZoom.html function assert jQuery window document cssWidthBrowserZoom assert expect 1 assert strictEqual 100px elem.css('width') works correctly with browser zoom function var = document getElementById qunit-fixture ", "count": 3}},
{"dictionary": {"test/unit/support.js": "reliableMarginLeft : false scrollboxSize : true else if   iphone os 11_ i test = ajax : true boxSizingReliable : true checkClone : true checkOn : true clearCloneStyle : true cors : true createHTMLDocument : true focusin : false noCloneChecked : true optSelected : true pixelBoxStyles : true pixelPosition : true radioValue : true reliableMarginLeft : true scrollboxSize : true else if   iphone os (?:9 10)_ i test = ajax : true ", "count": 1}},
{"dictionary": {"CODE_OF_CONDUCT.md": "JS Foundation ", "count": 1}},
{"dictionary": {".gitignore": "", "count": 1}},
{"dictionary": {"build/tasks/node_smoke_tests.js": "var = node_ + testFilePath replace   js grunt registerTask function spawnTest this async node test/node_smoke_tests/ + spawnTest this async node  test/node_smoke_tests/ +   +   nodeSmokeTests push ", "build/tasks/promises_aplus_tests.js": "grunt registerTask promises_aplus_tests:deferred function spawnTest this async __dirname + /../../node_modules/.bin/promises-aplus-tests +   +   __dirname + /../../node_modules/.bin/promises-aplus-tests +  test/promises_aplus_adapters/deferred.js +  --timeout  + grunt registerTask promises_aplus_tests:when function spawnTest this async __dirname + /../../node_modules/.bin/promises-aplus-tests +   +   __dirname + /../../node_modules/.bin/promises-aplus-tests +  test/promises_aplus_adapters/when.js +  --timeout  + ", "count": 2}},
{"dictionary": {".babelrc": "", "Gruntfile.js": ": : : inline : true : true : transform-es2015-for-of : : ", "count": 2}},
{"dictionary": {"test/unit/support.js": "reliableMarginLeft : true scrollboxSize : true else if   11 ( )  safari i test = ajax : true boxSizingReliable : true checkClone : true checkOn : true clearCloneStyle : true cors : true createHTMLDocument : true focusin : false noCloneChecked : true optSelected : true pixelBoxStyles : true pixelPosition : true radioValue : true reliableMarginLeft : true scrollboxSize : true else if   (?:9 10) ( )  safari i test = ajax : true ", "count": 1}},
{"dictionary": {"build/tasks/promises_aplus_tests.js": "use strict var = require ./lib/spawn_test.js var = 2000 = require ./lib/spawn_test.js grunt registerTask promises_aplus_tests promises_aplus_tests:deferred promises_aplus_tests:when grunt registerTask promises_aplus_tests:deferred function spawnTest this async __dirname + /../../node_modules/.bin/promises-aplus-tests +  test/promises_aplus_adapters/deferred.js  test/promises_aplus_adapters/deferred.js +  --timeout  + grunt registerTask promises_aplus_tests:when function spawnTest this async __dirname + /../../node_modules/.bin/promises-aplus-tests +  test/promises_aplus_adapters/when.js  test/promises_aplus_adapters/when.js +  --timeout  + ", "count": 1}},
{"dictionary": {"test/unit/css.js": " Apply change $child css = parseFloat $child css +=  (actual  + round 2 + px, expected  + round 2 + px)  Require a difference of no more than one pixel = Math abs - if <= 1 assert ok true  ...or fail with actual and expected values else assert ok false +  (actual  + + , expected  + + ) assert ok <= 1 getUnits = function prop = pc : parseFloat $child css 100pc css / 100 cm : parseFloat $child css 100cm css / 100 mm : parseFloat $child css 100mm css / 100 % : parseFloat $child css % css / 100 % : parseFloat $child css % css / 500 round = function num fractionDigits var = Math pow 10 return Math round * / jQuery #nothiddendiv css : 1 : 0 : 400 add lineHeight 20 pt add lineHeight 30 pc add lineHeight 1 cm add lineHeight - 20 mm add lineHeight - 44 mm add lineHeight 50 % ", "count": 1}},
{"dictionary": {"build/tasks/lib/spawn_test.js": " Run Node with provided parameters: the first one being the Grunt  done function and latter ones being files to be tested.  See the comment in ../node_smoke_tests.js for more information. module exports = function spawnTest done var = slice call arguments 1 = require cross-spawn module exports = function spawnTest done command var = require child_process spawn spawn node : inherit spawn : inherit : true on close function code done === 0 ", "build/tasks/node_smoke_tests.js": "var = node_ + testFilePath replace   js grunt registerTask function spawnTest this async test/node_smoke_tests/ + spawnTest this async test/node_smoke_tests/ + nodeSmokeTests push ", "build/tasks/promises_aplus_tests.js": "grunt registerTask promises_aplus_tests:deferred function spawnTest this async node_modules/.bin/promises-aplus-tests , test/promises_aplus_adapters/deferred.js __dirname   +   node_modules/.bin/promises-aplus-tests   + \t test/promises_aplus_adapters/deferred.js grunt registerTask promises_aplus_tests:when function spawnTest this async node_modules/.bin/promises-aplus-tests , test/promises_aplus_adapters/when.js __dirname   +   node_modules/.bin/promises-aplus-tests   + \t test/promises_aplus_adapters/when.js ", "package-lock.json": "", "package.json": "babel-plugin-transform-es2015-for-of 7.0.0-beta.0 commitplease 2.7.10 core-js 2.4.1 cross-spawn 5.1.0 eslint-config-jquery 1.0.1 grunt 1.0.1 grunt-babel 7.0.0 ", "count": 5}},
{"dictionary": {"src/css.js": "./core ./var/pnum ./core/access ./css/var/rmargin ./var/document ./var/rcssNum ./css/var/rnumnonpx ./core/init ./core/ready ./selector  contains function jQuery pnum access rmargin ,  document rcssNum rnumnonpx cssExpand function jQuery pnum access document rcssNum rnumnonpx cssExpand getStyles swap curCSS adjustCSS addGetHookIf support use strict if ! rmargin . test (  ) if !==   jQuery cssHooks + set = ", "src/css/curCSS.js": "define ../core ./var/rboxStyle ./var/rnumnonpx ./var/rmargin ./var/getStyles ./support ../selector  Get jQuery.contains function jQuery rnumnonpx ,  rmargin getStyles support function jQuery rboxStyle ,  rnumnonpx getStyles support use strict  but width seems to be reliably pixels.  This is against the CSSOM draft spec:  https://drafts.csswg.org/cssom/#resolved-values if ! support pixelMarginRight && rnumnonpx test && rmargin test if ! support pixelBoxStyles && rnumnonpx test && rboxStyle test  Remember the original values = style width ", "src/css/support.js": " Support: Android 4.0 - 4.3 only, Firefox <=3 - 44 = divStyle marginLeft === 12px  Support: Android 4.0 - 4.3 only  Support: Android 4.0 - 4.3 only  Some styles come back with percentage values, even though they shouldn't div style marginRight = 60% pixelMarginRightVal = divStyle marginRight === 36px div style right = 60% pixelBoxStylesVal = divStyle right === 36px  Support: IE 9 - 11 only  Detect misreporting of content dimensions for box-sizing:border-box elements = null var pixelMarginRightVal var pixelBoxStylesVal = document createElement div = document createElement div computeStyleTests return pixelPosition : function pixelBoxStyles : function computeStyleTests return pixelPositionVal return pixelBoxStylesVal pixelMarginRight : function pixelPosition : function computeStyleTests return pixelMarginRightVal return pixelPositionVal reliableMarginLeft : function computeStyleTests ", "src/css/var/rboxStyle.js": "define ./cssExpand function cssExpand use strict return new RegExp cssExpand join | i ", "src/css/var/rmargin.js": "", "test/unit/support.js": "focusin : false noCloneChecked : true optSelected : true : true : true pixelPosition : true radioValue : true reliableMarginLeft : true focusin : true noCloneChecked : false optSelected : false : true : true pixelPosition : true radioValue : false reliableMarginLeft : true focusin : true noCloneChecked : false optSelected : false : true : true pixelPosition : true radioValue : false reliableMarginLeft : true focusin : false noCloneChecked : true optSelected : true : true : true pixelPosition : true radioValue : true reliableMarginLeft : true focusin : false noCloneChecked : true optSelected : true : true : false pixelPosition : false radioValue : true reliableMarginLeft : true focusin : false noCloneChecked : true optSelected : true : true : true pixelPosition : true radioValue : true reliableMarginLeft : false focusin : false noCloneChecked : true optSelected : true : true : false pixelPosition : false radioValue : true reliableMarginLeft : true focusin : false noCloneChecked : true optSelected : true : true : false pixelPosition : false radioValue : true reliableMarginLeft : true focusin : false noCloneChecked : true optSelected : true : true : false pixelPosition : false radioValue : true reliableMarginLeft : true focusin : false noCloneChecked : true optSelected : true : false : false pixelPosition : false radioValue : true reliableMarginLeft : false ", "count": 6}},
{"dictionary": {"src/css/adjustCSS.js": "use strict function adjustCSS elem prop valueParts tween var = 1 var = 20 = ? function if && 3 !==  Support: Firefox <=54  Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144) = / 2  Trust units reported by jQuery.css = || 3  Make sure we update the tween properties later on = ||  Iteratively approximate from a nonzero starting point = + || 1 do  If previous iteration zeroed out, double until we get *something*.  Use string for doubling so we don't accidentally see scale as unchanged below = || .5 while --    and  initialInUnit  =  initialInUnit  / ;    and   scale jQuery style + if 1 - * 1 - = currentValue / || 0.5 <= 0 = 0 = / \t\t}  while  ( \tscale  !==  ( scale  =   currentValue ()  /  initial )  &&  scale  !==   1   &&   -- maxIterations ) initialInUnit  =  initialInUnit  *   2 ; jQuery . style ( elem, prop, initialInUnit  +  unit ); valueParts  =  valueParts  ||  [] if ", "test/unit/css.js": "add lineHeight 50 % QUnit test css() mismatched relative values with bounded styles (gh-2144) function assert assert expect 1 var = jQuery <div/> css : absolute : 400px : 4px appendTo #qunit-fixture = jQuery <div/> css : absolute : 50% : 50% appendTo $el css right -=25em assert equal Math round parseFloat $el css right 100 Constraints do not interfere with unit conversion QUnit test css(String, Object) function assert assert expect 19 var ", "test/unit/effects.js": "queue function next var = 0 / assert ok > 0.9 && < 1.1 Starting width was close enough assert ok > 0.9 && < 1.1 Starting width was close enough ( + 0 +  approximates  + + ) next parent remove ", "count": 3}},
{"dictionary": {"AUTHORS.txt": "-Owczarek ", "count": 1}},
{"dictionary": {"test/jquery.js": "function  global loadTests: false  var = window location pathname split test 0 var = window location pathname = pathname slice 0 pathname lastIndexOf test = window QUnit || parent QUnit = window require || parent require ", "count": 1}},
{"dictionary": {".mailmap": "-Owczarek -Owczarek ", "count": 1}},
{"dictionary": {"src/css.js": "= jQuery css boxSizing false === border-box =  Computed unit is not pixels. Stop here and return.  Support: Firefox <=54  Return a confounding non-pixel value or feign ignorance, as appropriate. if rnumnonpx test return if ! return = auto  Check for style in case a browser which returns unreliable values ", "test/unit/dimensions.js": "QUnit test width/height on an inline element with percentage dimensions (gh-3611) function assert assert expect 4 jQuery <div id='gh3611' style='width: 100px;'> + <span style='width: 100%; padding: 0 5px'>text</span> + </div> appendTo #qunit-fixture var = jQuery #gh3611 span = 0 getBoundingClientRect width = $elem outerWidth true = $elem outerWidth = $elem innerWidth = $elem width assert equal Math round Math round .outerWidth():  + +  approximates  + assert equal .outerWidth(true) matches .outerWidth() assert equal .innerWidth() matches .outerWidth() assert equal - 10 .width() excludes padding QUnit test width/height on a table row with phantom borders (gh-3698) function assert assert expect 4 ", "count": 2}},
{"dictionary": {"dist/.eslintrc.json": " That is okay for the built version no-multiple-empty-lines : off  Because   is not compatible to jquery code style  Because   is not compatible to jquery code style no-nested-ternary : off no-unused-expressions : off lines-around-comment : off ", "count": 1}},
{"dictionary": {"src/css.js": "= && support boxSizingReliable || === elem style  Fall back to offsetWidth/  when value is \"auto\"  Fall back to offsetWidth/  when value is \"auto\"  This happens for inline elements with no explicit setting (gh-3571) if === auto  Support: Android <=4.1 - 4.3 only  Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602) if === auto || ! parseFloat && jQuery css display false === inline = offset + 0 toUpperCase + dimension slice 1  offsetWidth/offsetHeight provide border-box values = true  Normalize \"\" and auto ", "test/unit/dimensions.js": "QUnit test width/height on a table row with phantom borders (gh-3698) function assert assert expect 4 jQuery <table id='gh3698' style='border-collapse: separate; border-spacing: 0;'><tbody> + <tr style='margin: 0; border: 10px solid black; padding: 0'> + <td style='margin: 0; border: 0; padding: 0; height: 42px; width: 42px;'></td> + </tr> + </tbody></table> appendTo #qunit-fixture var = jQuery #gh3698 tr jQuery each Width Height function i method assert equal outer + 42 outer + +  should match content dimensions assert equal outer + true 42 outer + + (true) should match content dimensions QUnit test interaction with scrollbars (gh-3589) function assert assert expect 48 ", "count": 2}},
{"dictionary": {"src/ajax/xhr.js": "return function if = = xhr onload = xhr onerror = xhr onabort = xhr onreadystatechange = null xhr onerror = xhr onabort = xhr ontimeout = xhr onreadystatechange = null if === abort xhr abort  Listen to events xhr onload = callback = xhr onerror = callback error = xhr onerror = xhr . ontimeout   =   callback error  Support: IE 9 only  Use onreadystatechange to replace onabort ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - native timeout 2 function assert return : url data/name.php?wait=1 xhr : function var = new window.XMLHttpRequest xhr timeout = 1 return error : function xhr msg assert strictEqual error Native timeout triggers error callback complete : function assert ok true complete ajaxTest jQuery.ajax() - events with context 12 function assert var = document createElement div ", "count": 2}},
{"dictionary": {"test/unit/wrap.js": " See test/unit/manipulation.js for explanation about these 2 functions function \u00a0 manipulationBareObj value function   manipulationBareObj value return ", "count": 1}},
{"dictionary": {"test/unit/event.js": "QUnit test shouldn't  shouldn't  function assert assert expect 3 var = assert async = jQuery var = jQuery <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='checkbox' /> + </form> + </div> appendTo #qunit-fixture = jQuery #donor-input = finish = function = null assert strictEqual spy prevent called false Native preventDefault not called assert strictEqual spy stop called false Native stopPropagation not called assert strictEqual spy immediate called false Native stopImmediatePropagation not called  Remove jQuery handlers to ensure removal of capturing handlers on the document outer off focusin done = outer on function event jQuery (   ) on function event spy prevent = sinon stub event originalEvent preventDefault event preventDefault setTimeout on function event on function event spy stop = sinon stub event originalEvent stopPropagation event stopPropagation on function event on function event spy immediate = sinon stub event originalEvent stopImmediatePropagation event stopImmediatePropagation on simulated function event assert ok false simulated event immediate propagation stopped input trigger focus  DOM focus is unreliable in TestSwarm; set a simulated event workaround timeout setTimeout function if ! return 0 addEventListener click function nativeEvent jQuery event simulate focusin this jQuery event fix on simulated function event assert ok false simulated event propagation stopped 0 click QUnit config testTimeout / 4 || 1000  Force a simulated event 0 addEventListener click function nativeEvent jQuery event simulate simulated this jQuery event fix 0 click assert strictEqual spy prevent called false Native preventDefault not called assert strictEqual spy stop called false Native stopPropagation not called assert strictEqual spy immediate called false Native stopImmediatePropagation not called </div> appendTo #qunit-fixture = jQuery #donor-input = focus = jQuery . support . focusin   ?     :   focus finish = function = null ns remove  These tests are unreliable in Firefox if !   firefox i test window navigator userAgent QUnit test Check order of focusin/focusout events function assert assert expect 2 QUnit test Check order of focusin/focusout events function assert assert expect 2 \t var \t = jQuery #name var = jQuery #name input on focus function on focus function = true } ) on focusin function \t\t} ) on focusin function assert ok ! Focusin event should fire before focus does on blur function = true on blur function = true } ) on focusout function \t\t} ) on focusout function assert ok ! Focusout event should fire before blur does = true \t  gain focus \t input trigger focus  gain focus input trigger focus \t  then lose it \t jQuery #search trigger focus  then lose it jQuery #search trigger focus  cleanup input off  cleanup input off QUnit test focus-blur order (#12868) function assert assert expect 5  DOM focus is unreliable in TestSwarm if ! assert ok true GAP: Could not observe focus change assert ok true GAP: Could not observe focus change QUnit test focus-blur order (#12868) function assert assert expect 5 \t var \t = jQuery #text1 \t = jQuery #radio1 trigger focus ; var = jQuery #text1 = jQuery #radio1 trigger focus ,  Support: IE <=10 only  IE8-10 fire focus/blur events asynchronously; this is the resulting mess.  IE's browser window must be topmost for this to work properly!! QUnit stop 0 focus = assert async 0 focus setTimeout function on focus function assert equal ++ 1 text focus on blur function assert equal ++ 0 text blur on focus function assert equal ++ 1 radio focus on blur function assert equal ++ 0 radio blur  Enabled input getting focus = 0 assert equal document activeElement 0 radio has focus $text trigger focus setTimeout function on focus function assert equal ++ 1 text focus on blur function assert equal ++ 0 text blur on focus function assert equal ++ 1 radio focus on blur function assert equal ++ 0 radio blur  DOM focus is unreliable in TestSwarm if === 0 assert ok true GAP: Could not observe focus change assert ok true GAP: Could not observe focus change assert equal document activeElement 0 text has focus  Enabled input getting focus = 0 assert equal document activeElement 0 radio has focus $text trigger focus setTimeout function assert equal document activeElement 0 text has focus  Run handlers without native method on an input = 1 $radio triggerHandler focus $text off QUnit start 50  Run handlers without native method on an input = 1 $radio triggerHandler focus  Clean up $text off $radio off done 50 ,  50  ); ", "count": 1}},
{"dictionary": {"test/unit/event.js": "= null  This test can be flaky in CI... try two methods to prompt a focusin event  This test can be unreliable in CI... try two methods to prompt a focusin event  and set an abort timeout input trigger focus try 0 focus catch setTimeout function if ! return assert ok true Did not intercept focusin done = null QUnit config testTimeout / 2 || 1000 QUnit test Donor event interference function assert ", "count": 1}},
{"dictionary": {"test/data/testrunner.js": " Max time for stop() and asyncTest() until it aborts test  and start()'s the next test. QUnit config testTimeout = 12e4   QUnit config testTimeout = 60e3    Enforce an \"expect\" argument or expect() call in all test bodies. QUnit config requireExpects = true ", "test/unit/event.js": "done = null  This test can be unreliable in CI... try two methods to prompt a focusin event  and set an abort timeout input trigger focus try 0 focus catch  DOM focus is unreliable in TestSwarm CI; set an abort timeout setTimeout function if ! return assert ok true Did not intercept focusin done = null QUnit config testTimeout / 2 || 1000 QUnit config testTimeout / 4 || 1000 QUnit test Donor event interference function assert ", "count": 2}},
{"dictionary": {"test/index.html": " this iframe is outside the #qunit-fixture so it won't waste time by constantly reloading; the tests are \"safe\" and clean up after themselves  iframe id loadediframe name loadediframe style src data/iframe.html iframe dl id dl style div id donor-outer form id donor-form input id donor-input type radio form div div id qunit-fixture p id firstp a id simon1 href http://simon.incutio.com/archive/2003/03/25/#getElementsBySelector rel bookmark a p p id ap ", "test/unit/event.js": "input trigger focus  DOM focus is unreliable in TestSwarm ; set   timeout  DOM focus is unreliable in TestSwarm; set   timeout setTimeout function if ! return assert ok true Did not intercept focusin done = null 0 addEventListener click function nativeEvent jQuery event simulate focusin this jQuery event fix 0 click QUnit config testTimeout / 4 || 1000 QUnit test Donor event interference function assert assert expect 10 var = <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='radio' /> + </form> + </div> jQuery #qunit-fixture append jQuery #donor-outer on click function event assert ok true click bubbled to outer div assert equal typeof event originalEvent object make sure originalEvent exist assert equal event type click make sure event type is correct jQuery #donor-input on click function event assert ok true got a click event from the input assert ok ! event isPropagationStopped propagation says it's not stopped assert equal event type click make sure event type is correct assert equal typeof event originalEvent object make sure originalEvent exist jQuery #donor-input on change function event assert equal typeof event originalEvent object make sure originalEvent exist assert equal event type change make sure event type is correct assert ok true got a change event from the input assert expect 8 var = jQuery <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='checkbox' /> + </form> + </div> appendTo #qunit-fixture = jQuery #donor-input input on click function event assert equal event type click click event at input assert ok ! event isPropagationStopped click event at input is still propagating assert equal typeof event originalEvent object click event at input has originalEvent property outer on click function event assert equal event type click click event at ancestor assert ok ! event isPropagationStopped click event at ancestor is still propagating assert equal typeof event originalEvent object click event at ancestor has originalEvent property input on change function event assert equal event type change change event at input assert equal typeof event originalEvent object change event at input has originalEvent property event stopPropagation jQuery (  input  ) 0 click 0 click QUnit test native stop(Immediate)Propagation/preventDefault methods shouldn't be called function assert var = window navigator userAgent if !   firefox i test ||   safari i test assert expect 1 assert ok true Assertions should run only in Chrome, Safari, Fx & Edge return assert expect 3 var = var = <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='radio' /> + </form> + </div> jQuery #qunit-fixture append var = jQuery #donor-outer var = assert async = jQuery <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='checkbox' /> + </form> + </div> appendTo #qunit-fixture = jQuery #donor-input = finish = function = null assert strictEqual spy prevent called false Native preventDefault not called assert strictEqual spy stop called false Native stopPropagation not called assert strictEqual spy immediate called false Native stopImmediatePropagation not called  Remove jQuery handlers to ensure removal of capturing handlers on the document outer off focusin done on focusin function event checker prevent = sinon stub event originalEvent preventDefault spy prevent = sinon stub event originalEvent preventDefault event preventDefault setTimeout on focusin function event checker . simple = sinon stub event originalEvent stopPropagation spy . stop = sinon stub event originalEvent stopPropagation event stopPropagation on focusin function event checker immediate = sinon stub event originalEvent stopImmediatePropagation spy immediate = sinon stub event originalEvent stopImmediatePropagation event stopImmediatePropagation input trigger focus jQuery #donor-input trigger focus assert strictEqual checker simple called false assert strictEqual checker immediate called false assert strictEqual checker prevent called false  We need to \"off\" it, since yes QUnit always update the fixtures  but \"focus\" event listener is attached to document for focus(in | out)  event and document doesn't get cleared obviously :) outer off focusin QUnit test isSimulated property always exist on event object function assert var = window navigator userAgent if !   firefox i test ||   safari i test assert expect 1 assert ok true Assertions should run only in Chrome, Safari, Fx & Edge return assert expect 1 var = jQuery <input/> jQuery #qunit-fixture append element on focus function event assert notOk event isSimulated element trigger focus  DOM focus is unreliable in TestSwarm; set a simulated event workaround timeout setTimeout function if ! return 0 addEventListener click function nativeEvent jQuery event simulate focusin this jQuery event fix 0 click QUnit config testTimeout / 4 || 1000 QUnit test originalEvent property for Chrome, Safari, Fx & Edge of simulated event function assert var = window navigator userAgent if !   firefox i test ||   safari i test assert expect 1 assert ok true Assertions should run only in Chrome, Safari, Fx & Edge return assert expect 4 var = assert async QUnit test originalEvent type of simulated event function assert assert expect 2 var = <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='radio' /> + </form> + </div> jQuery #qunit-fixture append var = jQuery #donor-outer on focusin function event assert ok true focusin bubbled to outer div assert equal event originalEvent type focus make sure originalEvent type is correct assert equal event type focusin make sure type is correct var = assert async = jQuery <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='checkbox' /> + </form> + </div> appendTo #qunit-fixture = jQuery #donor-input = focus finish = function = null  Remove jQuery handlers to ensure removal of capturing handlers on the document outer off focusin done jQuery #donor-input on focus function assert ok true got a focus event from the input done outer on focusin function event assert equal event type focusin focusin event at ancestor assert equal event originalEvent type focus event at ancestor has correct originalEvent type setTimeout jQuery (  input  ) trigger focus input trigger focus  We need to \"off\" it, since yes QUnit always update the fixtures  but \"focus\" event listener is attached to document for focus(in | out)  event and document doesn't get cleared obviously :) outer off focusin  DOM focus is unreliable in TestSwarm; set a simulated event workaround timeout setTimeout function if ! return 0 addEventListener click function nativeEvent = nativeEvent type jQuery event simulate focusin this jQuery event fix 0 click QUnit config testTimeout / 4 || 1000 QUnit test trigger('click') on radio passes extra params function assert ", "count": 2}},
{"dictionary": {"test/unit/event.js": "var = assert async = jQuery <input/> appendTo #form on focusin function event var input on focusin function event if ! return try event preventDefault catch = var try event preventDefault catch = \t assert strictEqual undefined \t Preventing default on focusin throws no exception assert strictEqual undefined Preventing default on focusin throws no exception done trigger focus done = null  This test can be flaky in CI... try two methods to prompt a focusin event input trigger focus try 0 focus catch QUnit test Donor event interference function assert ", "count": 1}},
{"dictionary": {"src/css.js": " Account for unreliable border-box dimensions by comparing offset* to computed and  faking a content-box to get border and padding (gh-3699) if && ! support borderBoxReliable () if && support scrollboxSize ()  ===   styles . position -= Math ceil offset + 0 toUpperCase + dimension slice 1 - parseFloat - ", "src/css/support.js": "return container style cssText = position:absolute;left:-11111px;width:60px; + margin-top:1px;padding:0;border:0 div style cssText = box-sizing:border-box; + position:relative;display:block; + position:relative;display:block;box-sizing:border-box;overflow:scroll; + margin:auto;border:1px;padding:1px; + top:1%;width:50% div innerHTML = documentElement appendChild width:60%;top:1% documentElement appendChild appendChild var = window getComputedStyle = divStyle top !== 1%  Support: Android 4.0 - 4.3 only, Firefox <=3 - 44 = divStyle marginLeft === 2px = divStyle width === 5px  Support: IE 9 only  Detect misreporting of content dimensions for border-box elements (gh-3699) = divStyle width 0 === 5 = divStyle marginLeft === 12px  Support: Android 4.0 - 4.3 only  Some styles come back with percentage values, even though they shouldn't div style marginRight = 50% = divStyle marginRight === 5px div style marginRight = 60% = divStyle marginRight === 36px  Support: IE 9 - 11 only  Detect misreporting of content dimensions for box-sizing:border-box elements = divStyle width === 36px  Support: IE 9 only  Detect overflow:scroll screwiness (gh-3699) div style position = absolute = div offsetWidth === 36 || absolute documentElement removeChild = null var borderBoxReliableVal var scrollboxSizeVal = document createElement div = document createElement div div cloneNode true style backgroundClip = support clearCloneStyle = div style backgroundClip === content-box container style cssText = border:0;width:10px;height:0;top:0;left:-9999px; + padding:0;margin-top:1px;position:absolute container appendChild jQuery extend borderBoxReliable : function computeStyleTests return boxSizingReliable : function computeStyleTests return reliableMarginLeft : function computeStyleTests return scrollboxSize : function computeStyleTests return ", "test/unit/dimensions.js": "QUnit test interaction with scrollbars (gh-3589) function assert assert expect 36 assert expect 48 var = = 1 = 2 = 100 + = : absolute : scroll : + px : + px = : + px solid blue : + px = jQuery <div /> css css box-sizing : content-box appendTo = jQuery <div /> css css css box-sizing : content-box appendTo = jQuery <div /> css css css box-sizing : border-box appendTo = jQuery 0 0 0 = jQuery <div /> css box-sizing : content-box : absolute : scroll : + px : + px = clone css : + px solid blue : + px = clone css box-sizing : border-box = clone css : relative = jQuery 0 0 0 0 appendTo  Support: IE 9 only  Computed width seems to report content width even with \"box-sizing: border-box\", and borderBox clone css : auto appendTo 0 offsetWidth - 0 offsetWidth if > 0 borderBox css : + + px : + + px for = 0 < 3 ++ if === 1 =  after increasing inner* by  + $boxes outerWidth updater outerHeight updater assert equal plainContentBox innerWidth assert equal plainBox innerWidth plain content-box innerWidth includes scroll gutter + assert equal plainContentBox innerHeight assert equal plainBox innerHeight plain content-box innerHeight includes scroll gutter + assert equal plainContentBox outerWidth assert equal plainBox outerWidth plain content-box outerWidth includes scroll gutter + assert equal plainContentBox outerHeight assert equal plainBox outerHeight plain content-box outerHeight includes scroll gutter + assert equal contentBox innerWidth + 2 * assert equal contentBox outerHeight + 2 * + 2 * content-box outerHeight includes scroll gutter + assert equal borderBox innerWidth - borderBoxLoss  -   2 * assert equal borderBox innerWidth - 2 * border-box innerWidth includes scroll gutter + assert equal borderBox innerHeight - borderBoxLoss  -   2 * assert equal borderBox innerHeight - 2 * border-box innerHeight includes scroll gutter + assert equal borderBox outerWidth   -  borderBoxLoss assert equal borderBox outerWidth border-box outerWidth includes scroll gutter + assert equal borderBox outerHeight   -  borderBoxLoss assert equal borderBox outerHeight border-box outerHeight includes scroll gutter + assert equal relativeBorderBox innerWidth - 2 * relative border-box innerWidth includes scroll gutter + assert equal relativeBorderBox innerHeight - 2 * relative border-box innerHeight includes scroll gutter + assert equal relativeBorderBox outerWidth relative border-box outerWidth includes scroll gutter + assert equal relativeBorderBox outerHeight relative border-box outerHeight includes scroll gutter + ", "test/unit/support.js": "pixelMarginRight : true pixelPosition : true radioValue : true reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   (msie 10 0 trident 7 0) i test = pixelMarginRight : true pixelPosition : true radioValue : false reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   msie 9 0 i test = pixelMarginRight : true pixelPosition : true radioValue : false reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : absolute else if   chrome i test pixelMarginRight : true pixelPosition : true radioValue : true reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   (?:9 10) ( )  safari i test = pixelMarginRight : true pixelPosition : false radioValue : true reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   firefox i test = pixelMarginRight : true pixelPosition : true radioValue : true reliableMarginLeft : false reliableMarginLeft : false scrollboxSize : true else if   iphone os (?:9 10)_ i test = pixelMarginRight : true pixelPosition : false radioValue : true reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   iphone os 8_ i test = pixelMarginRight : true pixelPosition : false radioValue : true reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   iphone os 7_ i test = pixelMarginRight : true pixelPosition : false radioValue : true reliableMarginLeft : true reliableMarginLeft : true scrollboxSize : true else if   android 4 i test = pixelMarginRight : false pixelPosition : false radioValue : true reliableMarginLeft : false reliableMarginLeft : false scrollboxSize : true ", "count": 4}},
{"dictionary": {"src/offset.js": " Incorporate borders into its offset, since they are outside its content origin = jQuery offset = : parentOffset top + jQuery css borderTopWidth true : parentOffset left + jQuery css borderLeftWidth true parentOffset top += jQuery css 0 borderTopWidth true parentOffset left += jQuery css 0 borderLeftWidth true ", "count": 1}},
{"dictionary": {"src/css.js": "function getWidthOrHeight elem dimension extra  Start with computed style var = getStyles var = getStyles = curCSS = jQuery css boxSizing false === border-box = jQuery css boxSizing false === border-box =  Computed unit is not pixels. Stop here and return. if rnumnonpx test  Check for style in case a browser which returns unreliable values  for getComputedStyle silently falls back to the reliable elem.style = isBorderBox && = valueIsBorderBox && support boxSizingReliable || === elem style  Fall back to offsetWidth/Height when value is \"auto\" set : function elem value extra var = getStyles = jQuery css boxSizing false === border-box = && boxModelAdjustment jQuery . css ( elem,  ,  false , styles )  ===   isBorderBox  Account for unreliable border-box dimensions by comparing offset* to computed and  faking a content-box to get border and padding (gh-3699) if && ! support borderBoxReliable -= Math ceil offset + 0 toUpperCase + dimension slice 1 - parseFloat - boxModelAdjustment border false - 0.5  Convert to pixels if value adjustment is needed if && = rcssNum exec && 3 || px !== px ", "src/css/support.js": " Support: Android 4.0 - 4.3 only, Firefox <=3 - 44 = divStyle marginLeft === 2px = divStyle width === 4px = divStyle width === 5px  Support: IE 9 only  Detect misreporting of content dimensions for border-box elements (gh-3699) = divStyle width 0 === 5  Support: Android 4.0 - 4.3 only  Some styles come back with percentage values, even though they shouldn't div style marginRight = 50% = divStyle marginRight === = divStyle marginRight === documentElement removeChild = null var var = document createElement div = document createElement div div cloneNode true style backgroundClip = support clearCloneStyle = div style backgroundClip === content-box container style cssText = border:0;width: ;height:0;top:0;left:-9999px; + container style cssText = border:0;width: ;height:0;top:0;left:-9999px; + padding:0;margin-top:1px;position:absolute container appendChild jQuery extend pixelPosition : function borderBoxReliable : function computeStyleTests return pixelPositionVal return borderBoxReliableVal boxSizingReliable : function computeStyleTests return pixelPosition : function computeStyleTests return pixelMarginRight : function computeStyleTests return ", "test/unit/dimensions.js": "css css box-sizing : border-box appendTo = jQuery 0 0 0 = jQuery 0 0 0  Support: IE 9 only  Computed width seems to report content width even with \"box-sizing: border-box\", and  \"overflow: scroll\" actually _shrinks_ the element (gh-3699). = borderBox clone css : auto appendTo 0 offsetWidth - 0 offsetWidth for = 0 < 3 ++ if === 1 assert equal contentBox outerHeight + 2 * + 2 * content-box outerHeight includes scroll gutter + assert equal borderBox innerWidth - 2 * assert equal borderBox innerWidth - borderBoxLoss  -   2 * border-box innerWidth includes scroll gutter + assert equal borderBox innerHeight - 2 * assert equal borderBox innerHeight - borderBoxLoss  -   2 * border-box innerHeight includes scroll gutter + assert equal borderBox outerWidth assert equal borderBox outerWidth   -  borderBoxLoss border-box outerWidth includes scroll gutter + assert equal borderBox outerHeight assert equal borderBox outerHeight   -  borderBoxLoss border-box outerHeight includes scroll gutter + ", "count": 3}},
{"dictionary": {"src/offset.js": " Incorporate borders into its offset, since they are outside its content origin = jQuery offset parentOffset top += jQuery css [  0  ] borderTopWidth true parentOffset left += jQuery css [  0  ] borderLeftWidth true parentOffset top += jQuery css borderTopWidth true parentOffset left += jQuery css borderLeftWidth true ", "count": 1}},
{"dictionary": {"test/unit/offset.js": "QUnit test disconnected element function assert assert expect 3 assert expect 4 var = jQuery document createElement div offset assert equal result top 0 Retrieving offset on disconnected elements returns zeros (gh-2310) assert equal result left 0 Retrieving offset on disconnected elements returns zeros (gh-2310) assert equal Object keys length 2 Retrieving offset on disconnected elements returns offset object (gh-3167) assert equal jQuery isPlainObject true Retrieving offset on disconnected elements returns plain object (gh-3612) QUnit test hidden (display: none) element function assert assert expect 3 assert expect 4 var = jQuery <div style='display: none' /> appendTo #qunit-fixture = node offset assert equal result top 0 Retrieving offset on hidden elements returns zeros (gh-2310) assert equal result left 0 Retrieving offset on hidden elements returns zeros (gh-2310) assert equal Object keys length 2 Retrieving offset on hidden elements returns offset object (gh-3167) assert equal jQuery isPlainObject true Retrieving offset on hidden elements returns plain object (gh-3612) QUnit test 0 sized element function assert assert expect 3 assert expect 4 var = jQuery <div style='margin: 5px; width: 0; height: 0' /> appendTo #qunit-fixture = node offset assert notEqual result top 0 Retrieving offset on 0 sized elements (gh-3167) assert notEqual result left 0 Retrieving offset on 0 sized elements (gh-3167) assert equal Object keys length 2 Retrieving offset on 0 sized elements returns offset object (gh-3167) assert equal jQuery isPlainObject true Retrieving offset on 0 sized elements returns plain object (gh-3612) QUnit test hidden (visibility: hidden) element function assert assert expect 3 assert expect 4 var = jQuery <div style='margin: 5px; visibility: hidden' /> appendTo #qunit-fixture = node offset assert notEqual result top 0 Retrieving offset on visibility:hidden elements (gh-3167) assert notEqual result left 0 Retrieving offset on visibility:hidden elements (gh-3167) assert equal Object keys length 2 Retrieving offset on visibility:hidden elements returns offset object (gh-3167) assert equal jQuery isPlainObject true Retrieving offset on visibility:hidden elements returns plain object (gh-3612) QUnit test normal element function assert assert expect 4 var = jQuery <div> appendTo #qunit-fixture = node offset = node position node remove assert equal Object keys length 2 Retrieving offset on normal elements returns offset object (gh-3612) assert equal jQuery isPlainObject true Retrieving offset on normal elements returns plain object (gh-3612) assert equal Object keys length 2 Retrieving position on normal elements returns offset object (gh-3612) assert equal jQuery isPlainObject true Retrieving position on normal elements returns plain object (gh-3612) testIframe absolute offset/absolute.html function assert $ iframe testIframe fixed offset/fixed.html function assert $ window assert expect 34 assert expect 38 var assert ok true Browser doesn't support scroll position. assert ok true Browser doesn't support scroll position. assert ok true Browser doesn't support scroll position. assert ok true Browser doesn't support scroll position. assert ok true Browser doesn't support scroll position. else if window supportsFixedPosition assert equal jQuery isPlainObject $ this id offset true jQuery(' + this id + ').offset() is plain object assert equal jQuery isPlainObject $ this id position true jQuery(' + this id + ').position() is plain object assert equal $ this id offset top this offsetTop jQuery(' + this id + ').offset().top assert equal $ this id position top this positionTop jQuery(' + this id + ').position().top assert equal $ this id offset left this offsetLeft jQuery(' + this id + ').offset().left assert ok true Fixed position is not supported assert ok true Fixed position is not supported assert ok true Fixed position is not supported assert ok true Fixed position is not supported assert ok true Fixed position is not supported ", "count": 1}},
{"dictionary": {"src/event/trigger.js": "use strict var =   (?:focusinfocus focusoutblur) var =   (?:focusinfocus focusoutblur) stopPropagationCallback = function e e stopPropagation jQuery extend jQuery event trigger : function event data elem onlyHandlers var var  lastElement, = || document = hasOwn call event type ? event type : event = hasOwn call event namespace ? event namespace split . : = = = || document = lastElement  =   = = || document  Don't do events on text and comment nodes if elem nodeType === 3 || elem nodeType === 8  Fire handlers on the event path = 0 while = ++ && ! event isPropagationStopped \t\t\tlastElement  =  cur; event type = > 1 ? : special bindType ||  Prevent re-triggering of the same event, since we already bubbled it above jQuery event triggered = if event isPropagationStopped lastElement addEventListener if event isPropagationStopped lastElement removeEventListener jQuery event triggered = undefined if ", "test/unit/event.js": "0 removeEventListener click QUnit test triggered events stopPropagation() for natively-bound events function assert assert expect 1 var = jQuery #button = $button parent neverCallMe = function assert ok false propagation should have been stopped stopPropagationCallback = function e assert ok true propagation is stopped e stopPropagation 0 addEventListener click $button on click $button trigger click 0 removeEventListener click $button off click QUnit test trigger() works with events that were previously stopped function assert assert expect 0 var = jQuery #button = $button parent neverCallMe = function assert ok false propagation should have been stopped 0 addEventListener click $button on click var = jQuery Event click clickEvent stopPropagation $button trigger 0 removeEventListener click $button off click QUnit test on(), iframes function assert assert expect 1 ", "count": 2}},
{"dictionary": {"Gruntfile.js": ": : false : true : true : dist/<%= grunt.option('filename').replace('.js', '.min.map') %> : min beautify : output : ascii_only : true : /*! jQuery v<%= pkg.version %> |  + (c) JS Foundation and other contributors | jquery.org/license */ : hoist_funs : false : false : false : false  Support: IE <11  typeofs transformation is unsafe for IE9-10  See https://github.com/mishoo/UglifyJS2/issues/2198 : false ", "count": 1}},
{"dictionary": {"src/core.js": "./var/fnToString ./var/ObjectFunctionString ./var/support ./var/isWindow ./core/DOMEval function arr document getProto slice concat push indexOf class2type toString hasOwn fnToString ObjectFunctionString support DOMEval support isWindow ,  DOMEval use strict return typeof === function && typeof obj nodeType !== number isWindow : function obj return != null && === obj window isNumeric : function obj  As of jQuery 3.0, isNumeric is limited to var = !! && length in && obj length = jQuery type if jQuery isFunction || jQuery . isWindow if jQuery isFunction || isWindow return false ", "src/deprecated.js": "define ./core ./core/nodeName function jQuery nodeName ./core/nodeName ./var/isWindow function jQuery nodeName isWindow use strict jQuery isArray = Array isArray jQuery parseJSON = JSON parse jQuery nodeName = jQuery isWindow = ", "src/dimensions.js": "define ./core ./core/access ./var/isWindow ./css function jQuery access function jQuery access ,  isWindow use strict return access this function elem type value var if jQuery . isWindow if isWindow  $( window ).outerWidth/Height return w/h including scrollbars (gh-1729) return funcName indexOf outer === 0 ? ", "src/event/trigger.js": "../data/var/dataPriv ../data/var/acceptData ../var/hasOwn \t , ../event function jQuery document dataPriv acceptData hasOwn function jQuery document dataPriv acceptData hasOwn ,  isWindow use strict  Determine event propagation path in advance, per W3C events spec (#9951)  Bubble up to document, then to window; watch for a global ownerDocument var (#9724) if ! && ! special noBubble && ! jQuery . isWindow if ! && ! special noBubble && ! isWindow = special delegateType || if ! rfocusMorph test +  Call a native DOM method on the target with the same name as the event.  Don't do default actions on window, that's where global variables be (#6170) if && jQuery isFunction && ! jQuery . isWindow if && jQuery isFunction && ! isWindow  Don't re-trigger an onFOO event when we call its FOO() method = ", "src/offset.js": "./css/curCSS ./css/addGetHookIf ./css/support \t , ./core/init ./css ./selector  contains function jQuery access document documentElement rnumnonpx curCSS addGetHookIf support curCSS addGetHookIf support ,  isWindow use strict  Coalesce documents and windows var if jQuery . isWindow if isWindow = else if elem nodeType === 9 = elem defaultView ", "src/var/isWindow.js": "define function use strict return function isWindow obj return != null && === obj window ", "test/unit/basic.js": "QUnit test core function assert assert expect 27 assert expect 25 var = jQuery <div></div><span></span> <?xml version='1.0' encoding='UTF-8'?><foo bar='baz'></foo> jQuery.isXMLDoc assert ok jQuery isWindow window jQuery.isWindow(window) assert ok ! jQuery isWindow 2 jQuery.isWindow(Number) assert strictEqual jQuery inArray 3 a 6 false 3 3 jQuery.inArray - true assert strictEqual jQuery inArray 3 a 6 false 3 ", "test/unit/core.js": "assert ok jQuery isXMLDoc jQuery tab 0 XML Tab Element QUnit test isWindow function assert assert expect 14 assert ok jQuery isWindow window window assert ok jQuery isWindow document getElementsByTagName iframe 0 contentWindow iframe.contentWindow assert ok ! jQuery isWindow empty assert ok ! jQuery isWindow null null assert ok ! jQuery isWindow undefined undefined assert ok ! jQuery isWindow document document assert ok ! jQuery isWindow document documentElement documentElement assert ok ! jQuery isWindow string assert ok ! jQuery isWindow 1 number assert ok ! jQuery isWindow true boolean assert ok ! jQuery isWindow object assert ok ! jQuery isWindow setInterval : function fake window assert ok ! jQuery isWindow   window regexp assert ok ! jQuery isWindow function function QUnit test jQuery('html') function assert assert expect 18 ", "test/unit/deprecated.js": "Works on custom elements (true) QUnit test jQuery.isWindow function assert assert expect 14 assert ok jQuery isWindow window window assert ok jQuery isWindow document getElementsByTagName iframe 0 contentWindow iframe.contentWindow assert ok ! jQuery isWindow empty assert ok ! jQuery isWindow null null assert ok ! jQuery isWindow undefined undefined assert ok ! jQuery isWindow document document assert ok ! jQuery isWindow document documentElement documentElement assert ok ! jQuery isWindow string assert ok ! jQuery isWindow 1 number assert ok ! jQuery isWindow true boolean assert ok ! jQuery isWindow object assert ok ! jQuery isWindow setInterval : function fake window assert ok ! jQuery isWindow   window regexp assert ok ! jQuery isWindow function function ", "count": 9}},
{"dictionary": {"count": 0}},
{"dictionary": {".gitignore": "", "count": 1}},
{"dictionary": {"src/deferred.js": " fulfilled_callbacks.disable 3 - 2 disable  rejected_handlers.disable  fulfilled_handlers.disable 3 - 3 disable  progress_callbacks.lock 0 2 lock 0 2 lock  progress_handlers.lock 0 3 lock ", "count": 1}},
{"dictionary": {".travis.yml": "node_js 4 6 ", "count": 1}},
{"dictionary": {"test/unit/core.js": "var = jQuery #yahoo x parent assert equal Yahoo jQuery #yahoo text check for non-destructive  assert equal Yahoo jQuery #yahoo text check for non-destructive  QUnit test length function assert ", "test/unit/manipulation.js": " First clone = $section clone  This branch tests a known   in modern browsers that should never fail.  This branch tests a known   in modern browsers that should never fail.  Included for expected test count symmetry (expecting 1) assert equal 0 nodeName SECTION detached clone nodeName matches 'SECTION' ", "count": 2}},
{"dictionary": {"src/css.js": "function augmentWidthOrHeight elem name extra isBorderBox styles var = 0  If we already have the right measurement, avoid augmentation if === ? border : content = 4  Otherwise initialize for horizontal or vertical properties else = === width ? 1 : 0 function boxModelAdjustment elem dimension box isBorderBox styles computedVal var = === width ? 1 : 0 = 0 = 0  Adjustment may not be necessary if === ? border : content return 0 for < 4 += 2  Both box models exclude margin if extra === margin val += jQuery css extra + true  Both box models exclude margin if box === margin delta += jQuery css box + true if  If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\" if !  border-box includes padding, so remove it if we want content if === content -= jQuery css padding + true  Add padding += jQuery css padding + true  At this point, extra isn't border nor margin, so remove border if !== margin -= jQuery css border + + Width true  For \"border\" or \"margin\", add border if !== padding += jQuery css border + + Width true  But still keep track of it otherwise else += jQuery css border + + Width true  If we get here with a border-box (content + padding + border), we're seeking \"content\" or  \"padding\" or \"margin\" else  At this point, extra isn't content, so add padding += jQuery css padding + true  For \"content\", subtract padding if === content -= jQuery css padding + true   content padding  border if extra !== val  = jQuery css border + + Width true   content padding  border if box !== delta  = jQuery css border + + Width true return  Account for positive content-box scroll gutter when requested by providing computedVal if ! && >= 0  offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border  Assuming integer scroll gutter, subtract the rest and round down += Math max 0 Math ceil offset + 0 toUpperCase + dimension slice 1 - - - - 0.5 return function getWidthOrHeight elem name extra function getWidthOrHeight elem dimension extra  Start with computed style var = getStyles = curCSS name = curCSS dimension = jQuery css boxSizing false === border-box  Computed unit is not pixels. Stop here and return.  Check for style in case a browser which returns unreliable values  for getComputedStyle silently falls back to the reliable elem.style = && support boxSizingReliable || === elem style name support boxSizingReliable || === elem style dimension  Fall back to offsetWidth/Height when value is \"auto\"  This happens for inline elements with no explicit setting (gh-3571) if === auto = offset + name 0 toUpperCase + name slice 1 = offset + dimension 0 toUpperCase + dimension slice 1  Normalize \"\" and   Normalize \"\" and  = parseFloat || 0   the   box  model   the   box model return + augmentWidthOrHeight boxModelAdjustment name dimension || ? border : content  Provide the current computed size to request scroll gutter calculation (gh-3589) + px jQuery each height width function i name jQuery cssHooks name = jQuery each height width function i dimension jQuery cssHooks dimension = get : function elem computed extra if  in IE throws an error. ! elem getClientRects length || ! elem getBoundingClientRect width ? swap function return getWidthOrHeight name return getWidthOrHeight dimension : getWidthOrHeight name getWidthOrHeight dimension set : function elem value extra var = extra  &&   getStyles = && augmentWidthOrHeight = getStyles = && boxModelAdjustment name dimension jQuery css boxSizing false === border-box if && = rcssNum exec && 3 || px !== px elem style name = = jQuery css name elem style dimension = = jQuery css dimension return setPositiveNumber ", "test/unit/dimensions.js": "QUnit test interaction with scrollbars (gh-3589) function assert assert expect 36 var = updater = function adjustment return function i old return + = jQuery <div/> css : absolute : 1000px : 1000px appendTo #qunit-fixture = jQuery <div style='width:4.5px;'/> appendTo width % 1 = 1 = 2 = 100 + = : absolute : scroll : + px : + px = : + px solid blue : + px = jQuery <div /> css css box-sizing : content-box appendTo = jQuery <div /> css css css box-sizing : content-box appendTo = jQuery <div /> css css css box-sizing : border-box appendTo = jQuery 0 0 0 for = 0 < 3 ++ if === 1 =  after increasing inner* by  + += $boxes innerWidth updater innerHeight updater else if === 2 =  after increasing outer* by  + += $boxes outerWidth updater outerHeight updater assert equal plainContentBox innerWidth plain content-box innerWidth includes scroll gutter + assert equal plainContentBox innerHeight plain content-box innerHeight includes scroll gutter + assert equal plainContentBox outerWidth plain content-box outerWidth includes scroll gutter + assert equal plainContentBox outerHeight plain content-box outerHeight includes scroll gutter + assert equal contentBox innerWidth + 2 * content-box innerWidth includes scroll gutter + assert equal contentBox innerHeight + 2 * content-box innerHeight includes scroll gutter + assert equal contentBox outerWidth + 2 * + 2 * content-box outerWidth includes scroll gutter + assert equal contentBox outerHeight + 2 * + 2 * content-box outerHeight includes scroll gutter + assert equal borderBox innerWidth - 2 * border-box innerWidth includes scroll gutter + assert equal borderBox innerHeight - 2 * border-box innerHeight includes scroll gutter + assert equal borderBox outerWidth border-box outerWidth includes scroll gutter + assert equal borderBox outerHeight border-box outerHeight includes scroll gutter + ", "count": 2}},
{"dictionary": {"test/data/testinit.js": "wrapper call function assert var = assert async = supportjQuery <iframe/> attr : qunit-fixture-iframe : url ./data/ + css : absolute : 0 : -600px : 500px  Try to overcome TestSwarm iframe visibilty quirks if QUnit isSwarm $iframe css : 0 css : absolute : 0 : -600px : 500px attr : qunit-fixture-iframe : url ./data/ +  Test iframes are expected to invoke this via startIframeTest (cf. iframeTest.js) window iframeCallback = function ", "count": 1}},
{"dictionary": {"src/css.js": " Add in properties whose names you wish to fix before  setting or getting the value : float : cssFloat :  Get and set the style property on a DOM Node style : function elem name value extra ", "count": 1}},
{"dictionary": {"src/ajax.js": "if s crossDomain == null = document createElement a  Support: IE <=8 - 11, Edge 12 -   Support: IE <=8 - 11, Edge 12 -   IE throws exception on accessing the href property if url is malformed,  e.g. http://example.com:80x/ try ", "src/core.js": " Convert dashed to camelCase; used by the css and data modules  Support: IE <=9 - 11, Edge 12 -   Support: IE <=9 - 11, Edge 12 -   Microsoft forgot to hump their vendor prefix (#9572) camelCase : function string return string replace ms- replace ", "src/effects.js": " Restrict \"overflow\" and \"display\" styles during box animations if && elem nodeType === 1  Support: IE <=9 - 11, Edge 12 -   Support: IE <=9 - 11, Edge 12 -   Record all 3 overflow attributes because IE does not infer the shorthand  from identically-valued overflowX and overflowY  from identically-valued overflowX and overflowY and Edge just mirrors  the overflowX value there. opts overflow = style overflow style overflowX style overflowY  Identify a display type, preferring old show/hide data over the CSS cascade ", "src/manipulation.js": " eslint-enable   Support: IE <=10 - 11, Edge 12 - 13  Support: IE <=10 - 11, Edge 12 - 13  In IE/Edge using regex groups here causes severe slowdowns.  See https://connect.microsoft.com/IE/feedback/details/1736512/ =   <script <style <link i ", "test/unit/ajax.js": "Nullable : null undefined : undefined  Support: IE 9 - 11, Edge 12 -   Support: IE 9 - 11, Edge 12 -   Not all browsers allow empty-string headers \"Empty\": \"\" ", "test/unit/css.js": "QUnit test Keep the last style if the new one isn't recognized by the browser (#14836) function assert assert expect 2 assert expect 1 var = jQuery <div></div> css position absolute css position fake value var = jQuery <div></div> css position absolute css position fake value assert equal el css position absolute The old style is kept when setting an unrecognized value = jQuery <div></div> css position absolute css position    Support: Edge 14  Edge collapses whitespace-only values when setting a style property and  there is no easy way for us to work around it. Just skip the test there  and hope for the better future. if   edge i test navigator userAgent assert ok true Skipped (Edge 14 handles whitespace-only values incorrectly) else assert equal el css position absolute The old style is kept when setting to a space  Support: Edge 14 - 15  Edge collapses whitespace-only values when setting a style property and  there is no easy way for us to work around it. Just skip the test there  and hope for the better future.   edge i test navigator userAgent ? skip : test Keep the last style if the new one is a non-empty whitespace (gh-3204) function assert assert expect 1 var = jQuery <div></div> css position absolute css position   assert equal el css position absolute The old style is kept when setting to a space QUnit test Reset the style if set to an empty string function assert ", "test/unit/dimensions.js": "assert equal $divChild outerWidth $divNormal outerWidth child of a hidden element outerWidth() is wrong see #9441 assert equal $divChild outerWidth true $divNormal outerWidth true child of a hidden element outerWidth( true ) is wrong see #9300  Support: IE 10 - 11, Edge 12 - 13+  Child height is not always decimal assert equal $divChild height toFixed 3 $divNormal height toFixed 3 child of a hidden element height() is wrong see #9441 assert equal $divChild innerHeight toFixed 3 $divNormal innerHeight toFixed 3 child of a hidden element innerHeight() is wrong see #9441 assert equal $divChild outerHeight toFixed 3 $divNormal outerHeight toFixed 3 child of a hidden element outerHeight() is wrong see #9441 assert equal $divChild outerHeight true toFixed 3 $divNormal outerHeight true toFixed 3 child of a hidden element outerHeight( true ) is wrong see #9300 assert equal $divChild height $divNormal height child of a hidden element height() is wrong see #9441 assert equal $divChild innerHeight $divNormal innerHeight child of a hidden element innerHeight() is wrong see #9441 assert equal $divChild outerHeight $divNormal outerHeight child of a hidden element outerHeight() is wrong see #9441 assert equal $divChild outerHeight true $divNormal outerHeight true child of a hidden element outerHeight( true ) is wrong see #9300  tests that child div of an unconnected div works the same as a normal div assert equal $divUnconnected width $divNormal width unconnected element width() is wrong see #9441 assert equal $divUnconnected innerWidth $divNormal innerWidth unconnected element innerWidth() is wrong see #9441 assert equal $divUnconnected outerWidth $divNormal outerWidth unconnected element outerWidth() is wrong see #9441 assert equal $divUnconnected outerWidth true $divNormal outerWidth true unconnected element outerWidth( true ) is wrong see #9300  Support: IE 10 - 11, Edge 12 - 13+  Child height is not always decimal assert equal $divUnconnected height toFixed 3 $divNormal height toFixed 3 unconnected element height() is wrong see #9441 assert equal $divUnconnected innerHeight toFixed 3 $divNormal innerHeight toFixed 3 unconnected element innerHeight() is wrong see #9441 assert equal $divUnconnected outerHeight toFixed 3 $divNormal outerHeight toFixed 3 unconnected element outerHeight() is wrong see #9441 assert equal $divUnconnected outerHeight true toFixed 3 $divNormal outerHeight true toFixed 3 unconnected element outerHeight( true ) is wrong see #9300 assert equal $divUnconnected height $divNormal height unconnected element height() is wrong see #9441 assert equal $divUnconnected innerHeight $divNormal innerHeight unconnected element innerHeight() is wrong see #9441 assert equal $divUnconnected outerHeight $divNormal outerHeight unconnected element outerHeight() is wrong see #9441 assert equal $divUnconnected outerHeight true $divNormal outerHeight true unconnected element outerHeight( true ) is wrong see #9300  teardown html $divHiddenParent remove assert equal $divChild outerWidth $divNormal outerWidth child of a hidden element outerWidth() is wrong see #10413 assert equal $divChild outerWidth true $divNormal outerWidth true child of a hidden element outerWidth( true ) is wrong see #10413  Support: IE 10 - 11, Edge 12 - 13+  Child height is not always decimal assert equal $divChild height toFixed 3 $divNormal height toFixed 3 child of a hidden element height() is wrong see #10413 assert equal $divChild innerHeight toFixed 3 $divNormal innerHeight toFixed 3 child of a hidden element innerHeight() is wrong see #10413 assert equal $divChild outerHeight toFixed 3 $divNormal outerHeight toFixed 3 child of a hidden element outerHeight() is wrong see #10413 assert equal $divChild outerHeight true toFixed 3 $divNormal outerHeight true toFixed 3 child of a hidden element outerHeight( true ) is wrong see #10413 assert equal $divChild height $divNormal height child of a hidden element height() is wrong see #10413 assert equal $divChild innerHeight $divNormal innerHeight child of a hidden element innerHeight() is wrong see #10413 assert equal $divChild outerHeight $divNormal outerHeight child of a hidden element outerHeight() is wrong see #10413 assert equal $divChild outerHeight true $divNormal outerHeight true child of a hidden element outerHeight( true ) is wrong see #10413  tests that child div of an unconnected div works the same as a normal div assert equal $divUnconnected width $divNormal width unconnected element width() is wrong see #10413 assert equal $divUnconnected innerWidth $divNormal innerWidth unconnected element innerWidth() is wrong see #10413 assert equal $divUnconnected outerWidth $divNormal outerWidth unconnected element outerWidth() is wrong see #10413 assert equal $divUnconnected outerWidth true $divNormal outerWidth true unconnected element outerWidth( true ) is wrong see #10413  Support: IE 10 - 11, Edge 12 - 13+  Child height is not always decimal assert equal $divUnconnected height toFixed 3 $divNormal height toFixed 3 unconnected element height() is wrong see #10413 assert equal $divUnconnected innerHeight toFixed 3 $divNormal innerHeight toFixed 3 unconnected element innerHeight() is wrong see #10413 assert equal $divUnconnected outerHeight toFixed 3 $divNormal outerHeight toFixed 3 unconnected element outerHeight() is wrong see #10413 assert equal $divUnconnected outerHeight true toFixed 3 $divNormal outerHeight true toFixed 3 unconnected element outerHeight( true ) is wrong see #10413 assert equal $divUnconnected height $divNormal height unconnected element height() is wrong see #10413 assert equal $divUnconnected innerHeight $divNormal innerHeight unconnected element innerHeight() is wrong see #10413 assert equal $divUnconnected outerHeight $divNormal outerHeight unconnected element outerHeight() is wrong see #10413 assert equal $divUnconnected outerHeight true $divNormal outerHeight true unconnected element outerHeight( true ) is wrong see #10413  teardown html $divHiddenParent remove ", "test/unit/support.js": "function var  version, var = window navigator userAgent if   edge i test = userAgent match   edge ( ) i 1 = ajax : true boxSizingReliable : true checkClone : true checkOn : true clearCloneStyle : version  >=   13 clearCloneStyle : true cors : true createHTMLDocument : true focusin : false ", "count": 8}},
{"dictionary": {"test/data/testinit.js": "wrapper call function assert var = assert async = supportjQuery <iframe/> css : absolute : 0 : -600px : 500px attr : qunit-fixture-iframe : url ./data/ + attr : qunit-fixture-iframe : url ./data/ + css : absolute : 0 : -600px : 500px  Try to overcome TestSwarm iframe visibilty quirks if QUnit isSwarm $iframe css : 0  Test iframes are expected to invoke this via startIframeTest (cf. iframeTest.js) window iframeCallback = function ", "count": 1}},
{"dictionary": {"test/data/testinit.js": "wrapper call function assert var = assert async = supportjQuery <iframe/> attr : qunit-fixture-iframe : url ./data/ + css : absolute : 0 : -600px : 500px  Try to overcome TestSwarm iframe visibilty quirks if QUnit isSwarm $iframe css : 0 css : absolute : 0 : -600px : 500px attr : qunit-fixture-iframe : url ./data/ +  Test iframes are expected to invoke this via startIframeTest (cf. iframeTest.js) window iframeCallback = function ", "count": 1}},
{"dictionary": {"test/unit/offset.js": "= win pageXOffset = getExpectations assert expect 1   +   3 * Object keys length assert expect 3 * Object keys length  Setup documentElement and body styles, preserving scroll position doc documentElement style position = ", "count": 1}},
{"dictionary": {"test/data/testinit.js": "var = assert async = supportjQuery <iframe/> attr : qunit-fixture-iframe : url ./data/ + css : absolute : 0 : -600px : 300px : 500px css : absolute : 0 : -600px : 500px  Try to overcome TestSwarm iframe visibilty quirks if QUnit isSwarm ", "test/unit/offset.js": "doc body style position = win scrollTo  Try to figure out what is happening in TestSwarm var = $ #fixed 0 = win getComputedStyle = fixed getBoundingClientRect assert ok CI debug JSON stringify : QUnit isSwarm : original scroll : scroll : win pageYOffset win pageXOffset #fixed pos : fixedStyle position #fixed viewport rect : fixedRect top fixedRect left null    Verify expected document offset supportjQuery each function id descriptor assert deepEqual ", "count": 2}},
{"dictionary": {"test/data/testinit.js": "wrapper call function assert var = assert async = supportjQuery <iframe/> css : absolute : 500px : -600px attr : qunit-fixture-iframe : url ./data/ + attr : qunit-fixture-iframe : url ./data/ + css : absolute : 0 : -600px : 300px : 500px  Overcome TestSwarm iframe visibilty quirks if QUnit isSwarm $iframe css : 0  Test iframes are expected to invoke this via startIframeTest (cf. iframeTest.js) window iframeCallback = function ", "count": 1}},
{"dictionary": {"test/data/testinit.js": ": 500px    TestSwarm iframe visibilty quirks    TestSwarm iframe visibilty quirks if QUnit isSwarm $iframe css : 0 ", "test/unit/offset.js": "return props === static ? 0 : 8192 === static ? 0 : 4096 512 256 1024 512 2048 1024 !== fixed && documentElement = : 2 : 1 function getExpectations htmlPos bodyPos function getExpectations htmlPos bodyPos ,  scrollTop ,  scrollLeft  Initialize data about page elements var = if props style === fixed && || expectations documentElement style !== fixed offset top += viewportScroll . top offset left += viewportScroll . left offset top += scrollTop offset left += scrollLeft  Support: IE<=10 only  Fudge the tests to work around <html>.gBCR() erroneously including margins if   MSIE (?:9 10) test navigator userAgent expectations documentElement pos top -= expectations documentElement marginTop - viewportScroll . top scrollTop expectations documentElement offset top -= expectations documentElement marginTop - viewportScroll . top scrollTop expectations documentElement pos left -= expectations documentElement marginLeft - viewportScroll . left scrollLeft expectations documentElement offset left -= expectations documentElement marginLeft - viewportScroll . left scrollLeft if !== static delete expectations documentElement delete expectations body var = nonzero box properties - html. + +  body. + testIframe offset/boxes.html function assert $ win doc  Define expectations at runtime to properly account for scrolling var = win pageYOffset = win pageXOffset  Define expectations at runtime so alwaysScrollable is correct = getExpectations = getExpectations assert expect 1 + 3 * Object keys length = fixed getBoundingClientRect assert ok CI debug JSON stringify : QUnit isSwarm : original scroll : scroll : win pageYOffset win pageXOffset ", "count": 2}},
{"dictionary": {"test/unit/offset.js": "= win pageXOffset !== 0 done function _ mockTest mockTest function mockQUnit_test _ testCallback setTimeout function testCallback  Define expectations at runtime so alwaysScrollable is correct = getExpectations assert expect 3 * Object keys length assert expect 1   +   3 * Object keys length  Setup documentElement and body styles, preserving scroll position doc documentElement style position = doc body style position = win scrollTo  Try to figure out what is happening in TestSwarm var = $ #fixed 0 = win getComputedStyle = fixed getBoundingClientRect assert ok CI debug JSON stringify : original scroll : scroll : win pageYOffset win pageXOffset #fixed pos : fixedStyle position #fixed viewport rect : fixedRect top fixedRect left null    Verify expected document offset supportjQuery each function id descriptor assert deepEqual ", "count": 1}},
{"dictionary": {"test/data/testinit.js": "this testIframe = function title fileName func QUnit test function assert var var = assert async var = assert async = supportjQuery <iframe/> css : absolute : 500px : -600px attr : qunit-fixture-iframe : url ./data/ +  Test iframes are expected to invoke this via startIframeTest (cf. iframeTest.js) window iframeCallback = function func apply this func = function iframe remove iframe remove done = jQuery <div/> css : absolute : 500px : -600px append jQuery <iframe/> attr src url ./data/ + appendTo #qunit-fixture  Attach iframe to the body for visibility-dependent code  It will be removed by either the above code, or the testDone callback in testrunner.js $iframe appendTo document body this iframeCallback = undefined ", "test/data/testrunner.js": " ...even if the jQuery under test has a broken .empty() supportjQuery #qunit-fixture empty  Remove the iframe fixture supportjQuery #qunit-fixture-iframe remove  Reset internal jQuery state jQuery event global = if ", "count": 2}},
{"dictionary": {"test/data/testinit.js": " Attach iframe to the body for visibility-dependent code  It will be removed by either the above code, or the testDone callback in testrunner.js $iframe appendTo document body $iframe prependTo document body this iframeCallback = undefined ", "count": 1}},
{"dictionary": {"test/data/testinit.js": "this testIframe = function title fileName func QUnit test function assert this testIframe = function title fileName func wrapper if ! = QUnit test wrapper call function assert var = assert async = supportjQuery <iframe/> css : absolute : 500px : -600px ", "test/unit/offset.js": " Support: iOS <=7  Hijack the iframe test infrastructure to detect viewport scrollability  for pages with position:fixed document element var = assert async = supportjQuery <iframe/> css : absolute : 50px : -60px attr src url ./data/offset/boxes.html window iframeCallback = function $ win doc doc documentElement style position = fixed = win pageXOffset !== 0 window iframeCallback = undefined $iframe remove done $iframe appendTo document body var = assert async testIframe null offset/boxes.html function assert $ win doc doc documentElement style position = fixed = win pageXOffset !== 0 done function _ mockTest mockTest QUnit module offset setup : function assert ", "count": 2}},
{"dictionary": {"test/data/offset/boxes.html": "script type text/javascript charset utf-8 \t\t\t (  () { \t\t\t\t . (  ,   ); \t\t\t\t ); \t\t\t\t ); \t\t\t} ); \t\t script head ", "count": 1}},
{"dictionary": {"test/unit/offset.js": "null offset/boxes.html function assert $ win doc var = win pageYOffset = win pageXOffset doc documentElement style position = fixed win scrollTo = win pageXOffset !== 0 done var = nonzero box properties - html. + +  body. + testIframe offset/boxes.html function assert $ win doc  Define expectations at runtime so alwaysScrollable is correct var = getExpectations var = win pageYOffset = win pageXOffset  Define expectations at runtime so alwaysScrollable is correct = getExpectations assert expect 3 * Object keys length  Setup documentElement and body styles  Setup documentElement and body styles doc documentElement style position = doc body style position = win scrollTo  Verify expected document offset supportjQuery each function id descriptor ", "count": 1}},
{"dictionary": {"src/offset.js": "./css/curCSS ./css/addGetHookIf ./css/support ./core/nodeName ./core/init ./css ./selector  contains function jQuery access document documentElement rnumnonpx curCSS addGetHookIf support ,  nodeName curCSS addGetHookIf support use strict jQuery fn extend  offset() relates an element's border box to the document origin offset : function options  Preserve chaining for setter var doc, docElem,  var = this 0 if ! return : 0 : 0  Get document-relative position by adding viewport scroll to viewport-relative gBCR = elem getBoundingClientRect = elem ownerDocument = doc documentElement = doc defaultView = elem ownerDocument defaultView return : rect top + win pageYOffset   -   docElem . clientTop : rect left + win pageXOffset   -   docElem . clientLeft : rect top + win pageYOffset : rect left + win pageXOffset  position() relates an element's margin box to its offset parent's padding box  This corresponds to the behavior of CSS absolute positioning position : function if ! this 0 return var var  doc, = this 0 = : 0 : 0  Fixed elements are offset from window (parentOffset = {top:0, left: 0},  because it is its only offset parent  position:fixed elements are offset from the viewport, which itself always has zero offset if jQuery css position === fixed  Assume   Assume  = elem getBoundingClientRect else = this offset  Get *real* offsetParent = this offsetParent  Account for the *real* offset parent, which can be the document or its root element  when a statically positioned element is identified = elem ownerDocument = elem offsetParent || doc documentElement while && === doc body || === doc documentElement && jQuery css position === static  Get correct offsets = this offset if ! nodeName 0 html = offsetParent offset = offsetParent parentNode if && !== && offsetParent nodeType === 1  Incorporate borders into its offset, since they are outside its content origin = jQuery offset = : parentOffset top + jQuery css borderTopWidth true : parentOffset left + jQuery css borderLeftWidth true  Add offsetParent borders = : parentOffset top + jQuery css 0 borderTopWidth true : parentOffset left + jQuery css 0 borderLeftWidth true  Subtract parent offsets and element margins ", "test/data/offset/boxes.html": "\"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\" html id documentElement class box head meta http-equiv Content-type content text/html; charset=utf-8 meta name description content horizontal values 2^N; vertical doubled title title style type text/css media screen \t\t\t \t\t\t  {  :  ; } \t\t\t  {  :  ; } \t\t\t  {  :  ; } \t\t\t  {  :  ; } \t\t\t  { \t\t\t\t :  ; \t\t\t\t :  ; \t\t\t\t :  ; \t\t\t} \t\t\t \t\t\t  { \t\t\t\t :               ; \t\t\t\t :              ;  :     ; \t\t\t\t :                       ; \t\t\t\t :                      ; \t\t\t} \t\t\t  { \t\t\t\t :                      ; \t\t\t\t :               ; \t\t\t\t :                    ; \t\t\t} \t\t\t  { \t\t\t\t :                    ; \t\t\t\t :             ; \t\t\t\t :                  ; \t\t\t} \t\t\t  { \t\t\t\t :           ;  :   ; \t\t\t} \t\t\t  { \t\t\t\t :           ;  :  ; \t\t\t} \t\t\t \t\t\t ( ) { \t\t\t\t :  ; \t\t\t} \t\t\t  { \t\t\t\t :  ( ,  ,  ); \t\t\t\t :  ( ,  ,  ); \t\t\t} \t\t\t  { \t\t\t\t :  ( ,  ,  ); \t\t\t\t :  ( ,  ,  ); \t\t\t} \t\t\t , \t\t\t  { \t\t\t\t :      ; \t\t\t\t :  ( ); \t\t\t} \t\t\t  { \t\t\t\t :  ( ,  ,  ,  ); \t\t\t\t :  ; \t\t\t} \t\t\t    { \t\t\t\t :  ( ,  ,  ,  ); \t\t\t} \t\t style script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript charset utf-8 \t\t\t (  () { \t\t\t\t . (  ,   ); \t\t\t\t (); \t\t\t} ); \t\t script head body id body class box div id relative class relative box div id relative-relative class relative box code & ; code div div id relative-absolute class absolute box code & ; code div div div id absolute class absolute box div id absolute-relative class relative box code & ; code div div id absolute-absolute class absolute box code & ; code div div div id fixed class fixed box div id fixed-relative class relative box code & ; code div div id fixed-absolute class absolute box code & ; code div div p id positionTest class absolute p body html ", "count": 2}},
{"dictionary": {"test/data/iframeTest.js": "window startIframeTest = function var = Array prototype slice call arguments ", "test/data/testinit.js": "var var = assert async  Test iframes are expected to invoke this via startIframeTest (cf. iframeTest.js) window iframeCallback = function var = Array prototype slice call arguments ", "test/unit/offset.js": "return var supportsFixedPosition = jQuery <div/> css : 2000 : 2000 checkSupport = function var supportsFixedPosition,  alwaysScrollable = supportjQuery <div/> css : 2000 : 2000 checkSupport = function   assert    Only run once = false var = jQuery <div/> css : fixed : 20px appendTo #qunit-fixture var = supportjQuery <div/> css : fixed : 20px appendTo #qunit-fixture = 0 offsetTop === 20 checkFixed remove    to body  #qunit-fixture     to  body  #qunit-fixture  forceScroll appendTo body window scrollTo 200 200 = document documentElement scrollTop || document body scrollTop forceScroll detach = 0 offsetTop === 20 checkFixed remove  Support: iOS <=7  Hijack the iframe test infrastructure to detect viewport scrollability  for pages with position:fixed document element var = assert async = supportjQuery <iframe/> css : absolute : 50px : -60px attr src url ./data/offset/boxes.html window iframeCallback = function $ win doc doc documentElement style position = fixed = win pageXOffset !== 0 window iframeCallback = undefined $iframe remove done $iframe appendTo document body QUnit module offset setup : function QUnit module offset setup : function   assert   if typeof === function checkSupport checkSupport  assert   Force a scroll value on the main window to ensure incorrect results 512 256 1024 512 2048 1024 !== fixed && documentElement = : 2 : 1 = false  Support: iOS <=7  Detect viewport scrollability for pages with position:fixed document element function var = jQuery <iframe/> css : absolute : 50px : -60px attr src url ./data/offset/boxes.html  Hijack the iframe test infrastructure window iframeCallback = function $ win doc doc documentElement style position = fixed = win pageXOffset !== 0 window iframeCallback = undefined $iframe remove return $iframe appendTo document body return = : 2 : 1 function getExpectations htmlPos bodyPos assert deepEqual supportjQuery extend $ # + offset descriptor offset jQuery('# + + ').offset() jQuery('# + + ').offset(): top  + descriptor offset top + , left  + descriptor offset left  Verify expected relative position supportjQuery each function id descriptor assert deepEqual supportjQuery extend $ # + position descriptor pos jQuery('# + + ').position() jQuery('# + + ').position(): top  + descriptor pos top + , left  + descriptor pos left  Verify that values round-trip ", "count": 3}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.2. -pre version 3.2. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"src/core/stripAndCollapse.js": "use strict  Strip and collapse whitespace according to HTML spec  https:// .spec.whatwg.org/ #strip-and-collapse-whitespace  https:// .spec.whatwg.org/#strip-and-collapse -whitespace function stripAndCollapse value var = value match || return tokens join   ", "src/var/rnothtmlwhite.js": " Only count HTML whitespace  Other whitespace should count in values  https:// .spec.whatwg.org/  https:// .spec.whatwg.org/ return   g ", "count": 2}},
{"dictionary": {"test/node_smoke_tests/lib/ensure_iterability_es6.js": "+= i nodeName assert strictEqual DIVSPANA for-of   on jQuery objects assert strictEqual DIVSPANA for-of   on jQuery objects ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.2. -pre version 3.2. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.2. -pre version 3.2. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"src/css/curCSS.js": "use strict function curCSS elem name computed var var  Support: Firefox 51+  Retrieving style before computed somehow  fixes an issue with getting wrong values  on detached elements = elem style = || getStyles  This is against the CSSOM draft spec:  https://drafts.csswg.org/cssom/#resolved-values if ! support pixelMarginRight && rnumnonpx test && rmargin test = elem style  Remember the original values = style width ", "count": 1}},
{"dictionary": {"src/core.js": "noop : function isFunction : function obj return jQuery type === function  Support: Chrome <=57, Firefox <=52  In some browsers, typeof returns \"function\" for HTML <object> elements  (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).  We don't want to classify *any* DOM node as a function. return typeof === function && typeof obj nodeType !== number isWindow : function obj var = !! && length in && obj length = jQuery type if type  ===   || jQuery isWindow if jQuery . isFunction ( obj ) || jQuery isWindow return false ", "test/unit/core.js": "QUnit test isFunction function assert assert expect 19 assert expect 20 var fn = function assert ok jQuery isFunction Normal Function assert notOk jQuery isFunction Object create custom Function subclass = document createElement object  Firefox   this is a function   Firefox   this is a function assert ok ! jQuery isFunction Object Element  Since 1.3, this isn't supported (#2968) QUnit test isFunction(cross-realm function) function assert assert expect 1 var = assert async  Functions from other windows should be matched Globals register iframeDone window iframeDone = function fn detail window iframeDone = undefined assert ok jQuery isFunction cross-realm function + ?  -  + : done = jQuery #qunit-fixture 0 appendChild document createElement iframe = iframe contentDocument || iframe contentWindow document doc open doc write <body onload='window.parent.iframeDone( function() {} );'> doc close supportjQuery each GeneratorFunction : function*() {} : async function() {} function subclass source var try = Function return  + catch ? test : skip isFunction( + + ) function assert assert expect 1 assert equal jQuery isFunction true typeof Symbol === function && Symbol toStringTag ? test : skip isFunction(custom @@toStringTag) function assert assert expect 2 var = fn = function Symbol toStringTag = Function Symbol toStringTag = Object assert equal jQuery isFunction false function-mimicking object assert equal jQuery isFunction true object-mimicking function QUnit test isNumeric function assert assert expect 43 ", "test/unit/deferred.js": "assert expect 1 var = assert async var = assert async = jQuery Deferred var     =   jQuery . Deferred () done function defer done function setTimeout throw new Error catch typeof Symbol === function && Symbol toStringTag ? test : skip jQuery.Deferred.then - IsCallable determination (gh-3596) function assert assert expect 1 var = assert async = jQuery Deferred function faker assert ok true handler with non-'Function' @@toStringTag gets invoked Symbol toStringTag = String defer then then defer resolve  Test fails in IE9 but is skipped there because console is not active window console ? test : skip jQuery.Deferred.exceptionHook function assert QUnit test jQuery.when(thenable) - like Promise.resolve function assert use strict var CASES = 16 = slice var = then : function onFulfilled onFulfilled if typeof Symbol === function customToStringThen then Symbol toStringTag = String var = slice = : explicit = jQuery Deferred notify true = jQuery Deferred notify true = jQuery Deferred resolve = jQuery Deferred resolve = : Promise resolve true : : Promise reject false : jQuery Deferred resolve true : = : true : : true : true : true : false : baz quux = Object keys length + Object keys length  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context = function getDefaultContext return this call = assert async CASES * 2 = assert async numCases * 2 assert expect CASES * 4 assert expect numCases * 4 jQuery each function message value var = jQuery.when(  + +  ) ", "count": 3}},
{"dictionary": {"test/unit/event.js": "outer off focusin QUnit test trigger('click') on radio passes extra params function assert assert expect 1 var = jQuery <input type='radio' /> appendTo #qunit-fixture on click function e data assert ok Trigger data is passed to radio click handler $radio trigger click true jQuery fn click ? test : skip trigger() shortcuts function assert assert expect 5 ", "count": 1}},
{"dictionary": {".github/PULL_REQUEST_TEMPLATE.md": "Checklist ### Mark an `[x]` for completed items, if you're not sure leave them unchecked and we can assist. * contribute.jquery.com/CLA/ * cla.js.foundation/jquery/jquery * * * Thanks! Bots and humans will be around shortly to check it out. ", "count": 1}},
{"dictionary": {"src/css.js": "= && support boxSizingReliable || === elem style  Fall back to offsetWidth/Height when value is \"auto\"  This happens for inline elements with no explicit setting (gh-3571) if === auto = offset + 0 toUpperCase + name slice 1  Normalize \"\", auto, and prepare for extra = parseFloat || 0 ", "src/css/curCSS.js": "use strict function curCSS elem name computed var = elem style var = || getStyles  This is against the CSSOM draft spec:  https://drafts.csswg.org/cssom/#resolved-values if ! support pixelMarginRight && rnumnonpx test && rmargin test = elem style  Remember the original values = style width ", "test/unit/dimensions.js": "assert equal $elem height 200 Height ignores transforms QUnit test width/height on an inline element with no explicitly-set dimensions (gh-3571) function assert assert expect 8 var = jQuery <span style='border: 2px solid black;padding: 1px;margin: 3px;'>Hello, I'm some text.</span> appendTo #qunit-fixture jQuery each Width Height function i method var = method toLowerCase assert notEqual 0 +  should not be zero on inline element. assert equal inner + + 2 inner + +  should include padding assert equal outer + + 6 outer + +  should include padding and border assert equal outer + true + 12 outer + + (true) should include padding, border, and margin ", "count": 3}},
{"dictionary": {"src/event.js": "./var/document ./var/documentElement ./var/rnothtmlwhite ./var/rcheckableType ./var/slice ./data/var/dataPriv ./core/nodeName ./core/init ./selector function jQuery document documentElement rnothtmlwhite rcheckableType slice dataPriv nodeName function jQuery document documentElement rnothtmlwhite slice dataPriv nodeName use strict :  For  , fire native event so checked state will be right  For  , fire native event so checked state will be right trigger : function if rcheckableType test this type && this click && nodeName this input if this type === checkbox && this click && nodeName this input this click return false ", "src/manipulation.js": "./core ./var/concat ./var/push ./var/rcheckableType ./core/access ./manipulation/var/rcheckableType ./manipulation/var/rtagName ./manipulation/var/rscriptType ./manipulation/wrapMap ./traversing ./selector ./event function jQuery concat push rcheckableType access rtagName rscriptType function jQuery concat push access rcheckableType rtagName rscriptType wrapMap getAll setGlobalEval buildFragment support dataPriv dataUser acceptData DOMEval nodeName ", "src/var/rcheckableType.js \u2192 src/manipulation/var/rcheckableType.js": "", "src/serialize.js": "define ./core ./var/rcheckableType ./ var/rcheckableType ./core/init ./traversing  filter ./attributes/prop ", "count": 4}},
{"dictionary": {"build/release/dist.js": "null 2 \t * Replace the version in the README \t *      \t  function editReadme readme var = new RegExp Release prevVersion g return readme replace Release newVersion \t * Copy necessary files over to the dist repo \t   Copy dist files var = Release dir dist + /dist = Release dir dist + /external = fs readFileSync Release dir dist + /README.md utf8 = concat README.md  Write generated bower file fs writeFileSync Release dir dist + /bower.json generateBower console log Adding files to dist... fs writeFileSync Release dir dist + /README.md editReadme console log Files ready to add. console log Edit the dist README.md to include the latest blog post link. \t * Add, commit, and tag the dist files \t  function commit console log Adding files to dist... Release exec git add -A Error adding files. Release exec git commit -m  Release  + Release newVersion + Release confirmReview Release _section Add, commit, and tag files in distribution repo Release confirmReview Release _section Pushing files to distribution repo ", "count": 1}},
{"dictionary": {"test/unit/event.js": "clone remove QUnit test checkbox state (#3827 ) function assert assert expect 17 QUnit test checkbox state (#3827) function assert assert expect 9 var = jQuery <div><input type=checkbox><div> appendTo #qunit-fixture = cbParent find input 0 = jQuery <div><input type=radio name=gh3423><input type=radio name=gh3423><div> appendTo #qunit-fixture = radioParent find input 0 = radioParent find input 1 var = jQuery <div><input type=checkbox><div> appendTo #qunit-fixture = markup find input 0 jQuery on click function assert equal this checked false just-clicked checkbox is not checked cbParent on click function markup on click function assert equal cb checked false checkbox is not checked in bubbled event radioParent on click function assert equal radio checked false radio is not checked in bubbled event  Native click cb checked = radio . checked   =   true cb checked = true assert equal cb checked true native - checkbox is initially checked assert equal radio checked true native - radio is initially checked cb click radio2 click assert equal cb checked false native - checkbox is no longer checked assert equal radio checked false native - radio is no longer checked  jQuery click cb checked = radio checked = true assert equal cb checked true .trigger - checkbox is initially checked assert equal radio checked true .trigger - radio is initially checked jQuery trigger click assert equal cb checked false .trigger - checkbox is no longer checked assert equal radio checked false .trigger - radio is no longer checked cb checked = true assert equal cb checked true jQuery - checkbox is initially checked jQuery trigger click assert equal cb checked false jQuery - checkbox is no longer checked  Handlers only; checkbox state remains false jQuery triggerHandler click assert equal cb checked false .triggerHandler - checkbox is still unchecked assert equal radio checked false .triggerHandler - radio is still unchecked jQuery triggerHandler click QUnit test hover event no longer special since 1.9 function assert ", "count": 1}},
{"dictionary": {"src/deprecated.js": "return arguments length === 1 ? this off ** : this off || ** holdReady : function hold if jQuery readyWait ++ else jQuery ready true jQuery holdReady = function hold if jQuery readyWait ++ else jQuery ready true jQuery isArray = Array isArray jQuery parseJSON = JSON parse jQuery nodeName = ", "test/readywait.html \u2192 test/data/readywait.html": "\t\t  {  :   } \t\t  {  :   } \t style script src jquery.js script script src ../jquery.js script script src ./iframeTest.js script  Load the script loader that uses \t\tjQuery.readyWait  script src data/readywaitloader.js script script type text/javascript \t ( () { \t\t \t\t \t\t \t\t \t\t \t\t \t\t ( ). (delayedMessage); \t}); \t( () { \t\t  released    ; \t\t \t\t . (   ); \t\t (  () { \t\t\treleased    ; \t\t\t . (   ); \t\t},   ); \t\t ( () { \t\t\t (   ). (     released ); \t\t\t ( released ); \t\t}); \t})(); \t script head body ", "test/data/readywaitasset.js": "", "test/data/readywaitloader.js": "", "test/unit/ready.js": "var = jQuery when jQuery ready = Promise resolve jQuery ready = new Date = = done testIframe holdReady test needs to be a standalone test since it deals with DOM ready readywait.html function assert jQuery window document releaseCalled assert expect 2 var = new Date assert ok - >= 300 Needs to have waited at least half a second assert ok The release function was called, which resulted in ready ", "count": 5}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.2. -pre version 3.2. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3. -pre version 3. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"build/release.js": "module exports dependencies = archiver@ shelljs@0.7. npm@ chalk@1.1. archiver@ shelljs@0.7. npm@ chalk@1.1. ", "count": 1}},
{"dictionary": {"test/unit/css.js": "function var = jQuery <div> appendTo #qunit-fixture 0 = jQuery <div> appendTo document body = 0 div style setProperty --prop value = getComputedStyle getPropertyValue --prop = !! getComputedStyle getPropertyValue --prop elem remove ? test : skip css(--customProperty) function assert jQuery #qunit-fixture append ", "count": 1}},
{"dictionary": {"src/css.js": "= curCSS = jQuery css boxSizing false === border-box  Fall back to uncomputed css if necessary if < 0 || == null = elem style  Computed unit is not pixels. Stop here and return. if rnumnonpx test return ", "count": 1}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {"src/css.js": "function getWidthOrHeight elem name extra  Start with offset property, which is equivalent to the border-box value var = true  Start with computed style var = getStyles = curCSS = jQuery css boxSizing false === border-box  Support: IE <=11 only  Running getBoundingClientRect on a disconnected node  in IE throws an error. if elem getClientRects length = elem getBoundingClientRect  Fall back to uncomputed css if necessary if < 0 || == null = elem style  Some non-html elements return undefined for offsetWidth, so check for null/undefined  svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285  MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668 if <= 0 || == null  Fall back to computed then uncomputed css if necessary = curCSS if < 0 || == null = elem style  Computed unit is not pixels. Stop here and return. if rnumnonpx test return  Computed unit is not pixels. Stop here and return. if rnumnonpx test return \t  Check for style in case a browser which returns unreliable values \t  for getComputedStyle silently falls back to the reliable elem.style \t = && \t support boxSizingReliable || === elem style  Check for style in case a browser which returns unreliable values  for getComputedStyle silently falls back to the reliable elem.style = && support boxSizingReliable || === elem style  Normalize \"\", auto, and prepare for extra = parseFloat || 0  Normalize \"\", auto, and prepare for extra = parseFloat || 0  Use the active box-sizing model to add/subtract irrelevant styles return + ", "test/unit/dimensions.js": "parent scrollTop 400 QUnit test width/height on element with transform (gh-3193) function assert assert expect 2 var = jQuery <div style='width: 200px; height: 200px; transform: scale(2);' /> appendTo #qunit-fixture assert equal $elem width 200 Width ignores transforms assert equal $elem height 200 Height ignores transforms ", "count": 2}},
{"dictionary": {"src/css.js": " except \"table\", \"table-cell\", or \"table-caption\"  See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display =   (none table(?!-c ) ) =   -- = : absolute : hidden : block = : 0  Return a property mapped along what jQuery.cssProps suggests or to  a vendor prefixed property. function finalPropName name var = jQuery cssProps if ! = jQuery cssProps = vendorPropName || return function setPositiveNumber elem value subtract  Any relative (+/-) values have already been  Make sure that we're working with the right name var = jQuery camelCase = rcustomProp test = elem style = jQuery cssProps || jQuery cssProps = vendorPropName ||  Make sure that we're working with the right name. We don't  want to query the value if it is a CSS custom property  since they are user-defined. if ! = finalPropName  Gets hook for the prefixed version, then unprefixed version = jQuery cssHooks || jQuery cssHooks if ! || ! set in || = hooks set !== undefined = if style setProperty else = else css : function elem name extra styles var = jQuery camelCase = jQuery camelCase = rcustomProp test  Make sure that we're working with the right name = jQuery cssProps || jQuery cssProps = vendorPropName ||  Make sure that we're working with the right name. We don't  want to modify the value if it is a CSS custom property  since they are user-defined. if ! = finalPropName  Try prefixed name followed by the unprefixed name = jQuery cssHooks || jQuery cssHooks = parseFloat return === true || isFinite ? || 0 : return ", "src/css/curCSS.js": "= || getStyles  Support: IE <=9 only  getPropertyValue is only needed for .css('filter') (#12537)  getPropertyValue is needed for:    .css('filter') (IE 9 only, #12537)    .css('--customProperty) (#3144) if = computed getPropertyValue || ", "test/unit/css.js": "QUnit test css(--customProperty) function assert jQuery #qunit-fixture append <style> +     .test__customProperties { +         --prop1:val1; +         --prop2: val2; +         --prop3:val3 ; +         --prop4: val4 ; +         --prop5:'val5'; +     } + </style> var = jQuery <div> appendTo #qunit-fixture = jQuery <div> addClass test__customProperties appendTo #qunit-fixture =   safari i test navigator userAgent && ! irefox i test navigator userAgent && ! dge i test navigator userAgent = &&   9 ( )  safari i test navigator userAgent || \t\t\t 10 0( )  safari i test navigator userAgent = 10 if -= 2 if -= 2 assert expect div css --color blue assert equal div css --color blue Modified CSS custom property using string div css --color yellow assert equal div css --color yellow Overwrite CSS custom property div css --color : red assert equal div css --color red Modified CSS custom property using object div css --mixedCase : green assert equal div css --mixedCase green Modified CSS custom property with mixed case div css --theme-dark : purple assert equal div css --theme-dark purple Modified CSS custom property with dashed name assert equal $elem css --prop1 val1 Basic CSS custom property  Support: Safari 9.1-10.0 only  Safari collapses whitespaces & quotes. Ignore it. if ! assert equal $elem css --prop2  val2 Preceding whitespace maintained assert equal $elem css --prop3 val3  Following whitespace maintained  Support: Chrome 49-55, Safari 9.1-10.0  Chrome treats single quotes as double ones.  Safari treats double quotes as single ones. if ! assert equal $elem css --prop4 val4 Works with double quotes assert equal $elem css --prop5 'val5' Works with single quotes ", "count": 3}},
{"dictionary": {"test/unit/css.js": "function var = jQuery <div> appendTo #qunit-fixture 0 div style setProperty --prop value = getComputedStyle getPropertyValue --prop ? test : skip css(--customProperty) function assert jQuery #qunit-fixture append <style> +     .test__customProperties { +         --prop1:val1; +         --prop2: val2; +         --prop3:val3 ; +         --prop4: val4 ; +         --prop5:'val5'; +     } + </style> var = jQuery <div> appendTo #qunit-fixture = jQuery <div> addClass test__customProperties appendTo #qunit-fixture =   safari i test navigator userAgent && ! irefox i test navigator userAgent && ! dge i test navigator userAgent = &&   9 ( )  safari i test navigator userAgent || \t\t\t\t 10 0( )  safari i test navigator userAgent || \t\t\t\t iphone os (?:9 10)_ i test navigator userAgent = 10 if -= 2 if -= 2 assert expect QUnit test css(--customProperty) function assert jQuery #qunit-fixture append <style> +     .test__customProperties { +         --prop1:val1; +         --prop2: val2; +         --prop3:val3 ; +         --prop4: val4 ; +         --prop5:'val5'; +     } + </style> var = jQuery <div> appendTo #qunit-fixture = jQuery <div> addClass test__customProperties appendTo #qunit-fixture =   safari i test navigator userAgent && ! irefox i test navigator userAgent && ! dge i test navigator userAgent = &&   9 ( )  safari i test navigator userAgent || \t\t\t 10 0( )  safari i test navigator userAgent = 10 if -= 2 if -= 2 assert expect div css --color blue assert equal div css --color blue Modified CSS custom property using string div css --color blue assert equal div css --color blue Modified CSS custom property using string div css --color yellow assert equal div css --color yellow Overwrite CSS custom property \t div css --color yellow \t assert equal div css --color yellow Overwrite CSS custom property div css --color : red assert equal div css --color red Modified CSS custom property using object \t div css --color : red \t assert equal div css --color red Modified CSS custom property using object div css --mixedCase : green assert equal div css --mixedCase green Modified CSS custom property with mixed case div css --mixedCase : green assert equal div css --mixedCase green Modified CSS custom property with mixed case div css --theme-dark : purple assert equal div css --theme-dark purple Modified CSS custom property with dashed name div css --theme-dark : purple assert equal div css --theme-dark purple Modified CSS custom property with dashed name assert equal $elem css --prop1 val1 Basic CSS custom property \t assert equal $elem css --prop1 val1 Basic CSS custom property  Support: Safari 9.1-10.0 only  Safari collapses whitespaces & quotes. Ignore it. if ! assert equal $elem css --prop2  val2 Preceding whitespace maintained assert equal $elem css --prop3 val3  Following whitespace maintained \t  Support: Safari 9.1-10.0 only \t  Safari collapses whitespaces & quotes. Ignore it. \t if ! \t assert equal $elem css --prop2  val2 Preceding whitespace maintained \t assert equal $elem css --prop3 val3  Following whitespace maintained \t  Support: Chrome 49-55, Safari 9.1-10.0  Chrome treats single quotes as double ones.  Safari treats double quotes as single ones. if ! assert equal $elem css --prop4 val4 Works with double quotes assert equal $elem css --prop5 'val5' Works with single quotes  Support: Chrome 49-55, Safari 9.1-10.0  Chrome treats single quotes as double ones.  Safari treats double quotes as single ones. if ! assert equal $elem css --prop4 val4 Works with double quotes assert equal $elem css --prop5 'val5' Works with single quotes ", "count": 1}},
{"dictionary": {"src/deprecated.js": "else jQuery ready true : jQuery isArray = Array isArray jQuery parseJSON = JSON parse jQuery nodeName = ", "test/unit/deprecated.js": "assert strictEqual jQuery isArray Array isArray Array.isArray equals jQuery.isArray QUnit test jQuery.nodeName function assert assert expect 8 assert strictEqual typeof jQuery nodeName function jQuery.nodeName is a function assert strictEqual jQuery nodeName document createElement div div true Basic usage (true) assert strictEqual jQuery nodeName document createElement div span false Basic usage (false) assert strictEqual jQuery nodeName document createElement div DIV true Ignores case in the name parameter assert strictEqual jQuery nodeName document createElement section section true Works on HTML5 tags (true) assert strictEqual jQuery nodeName document createElement section article false Works on HTML5 tags (false) assert strictEqual jQuery nodeName document createElement custom-element custom-element true Works on custom elements (true) assert strictEqual jQuery nodeName document createElement custom-element my-element false Works on custom elements (true) ", "count": 2}},
{"dictionary": {"build/release/cdn.js": "item replace Release newVersion = Release exec   + files join   Error retrieving md5sum = Release exec   + files join   Error retrieving md5sum fs writeFileSync files push ", "count": 1}},
{"dictionary": {"src/effects.js": "use strict var timerId inProgress =   (?:toggle show hide) =   queueHooks function raf if window requestAnimationFrame function schedule if if document hidden === false && window requestAnimationFrame window requestAnimationFrame else window setTimeout jQuery fx interval jQuery fx tick : && || && ! jQuery isFunction &&  Go to the end state if fx are off if jQuery fx off ||   document . hidden    Go to the end state if fx are off if jQuery fx off opt duration = 0 else jQuery fx timer = function timer var = jQuery timers push - 1 = jQuery timers if timer jQuery fx start  If the timer finished immediately, safely remove it (allowing for external removal)  Use a superfluous post-decrement for better compressibility w.r.t. jQuery.fx.tick above else if === timers splice -- 1 jQuery timers push jQuery fx start jQuery fx interval = 13 jQuery fx start = function if ! = window requestAnimationFrame ? window requestAnimationFrame : window setInterval jQuery fx tick jQuery fx interval if return = true schedule jQuery fx stop = function if window cancelAnimationFrame window cancelAnimationFrame else window clearInterval = null = null jQuery fx speeds = ", "test/unit/effects.js": "QUnit test Animation callbacks (#11797) function assert assert expect 16 assert expect 15 var = 0 = jQuery #foo children = false = 0 = 1 targets eq 0 animate : 1 assert ok true async: start progress : function anim percent  occasionally the progress handler is called twice in first frame.... *shrug* if === 0 && === 1 return assert equal async: progress  +  once at 0, once at 1 ++ done : function ", "count": 2}},
{"dictionary": {"src/core/ready-no-deferred.js": " the ready event fires. See #6781 : 1  Hold (or release) the ready event holdReady : function hold if jQuery readyWait ++ else jQuery ready true ready : function wait  Abort if there are pending holds or we're already ready ", "src/core/ready.js": " the ready event fires. See #6781 : 1  Hold (or release) the ready event holdReady : function hold if jQuery readyWait ++ else jQuery ready true  Handle when the DOM is ready ready : function wait ", "src/deprecated.js": "return arguments length === 1 ? this off ** : this off || ** holdReady : function hold if jQuery readyWait ++ else jQuery ready true ", "count": 3}},
{"dictionary": {"build/release.js": "generateArtifacts : function callback Release exec grunt Grunt command failed Release exec grunt custom:-ajax,-effects  --filename=jquery.slim.js &&  + grunt custom:-ajax,-effects --filename=jquery.slim.js &&  + grunt remove_map_comment --filename=jquery.slim.js Grunt custom failed ", "count": 1}},
{"dictionary": {"src/attributes/val.js": "../core ../core/stripAndCollapse ./support ../core/init ../core/nodeName ../core/nodeName ../core/init function jQuery stripAndCollapse support nodeName use strict ", "src/core/init.js": "../core ../var/document ./var/rsingleTag ../traversing/findFilter function jQuery document rsingleTag ", "src/event.js": "./var/rcheckableType ./var/slice ./data/var/dataPriv ./core/init ./core/nodeName ./core/init ./selector function jQuery document documentElement rnothtmlwhite   rcheckableType ,  slice ,  dataPriv , nodeName function jQuery document documentElement rnothtmlwhite             rcheckableType ,  slice ,  dataPriv ,  nodeName use strict ", "src/manipulation.js": "./data/var/dataUser ./data/var/acceptData ./core/DOMEval ./core/nodeName ./core/init ./core/nodeName ./traversing ./selector ./event ", "src/offset.js": "./css/curCSS ./css/addGetHookIf ./css/support ./core/nodeName ./core/init ./core/nodeName ./css ./selector  contains function jQuery access document documentElement rnumnonpx   curCSS ,  addGetHookIf ,  support , \t nodeName function jQuery access document documentElement rnumnonpx               curCSS ,  addGetHookIf ,  support ,  nodeName use strict ", "src/traversing.js": "./traversing/var/dir ./traversing/var/siblings ./traversing/var/rneedsContext ./core/init ./core/nodeName ./core/init ./traversing/findFilter ./selector function jQuery indexOf dir siblings rneedsContext nodeName ", "count": 6}},
{"dictionary": {"src/attributes/attr.js": "define ../core ../core/access ../core/nodeName ./support ../var/rnothtmlwhite ../selector function jQuery access support rnothtmlwhite function jQuery access nodeName ,  support rnothtmlwhite use strict : set : function elem value if ! support radioValue && === radio && jQuery . nodeName input nodeName input var = elem value elem setAttribute type if ", "src/attributes/val.js": "../core ../core/stripAndCollapse ./support ../core/init function jQuery stripAndCollapse support ../core/init ../core/nodeName function jQuery stripAndCollapse support nodeName use strict  Don't return options that are disabled or in a disabled optgroup ! option disabled && ! option parentNode disabled || ! jQuery . nodeName option parentNode optgroup ! nodeName option parentNode optgroup  Get the specific value for the option = jQuery val ", "src/core.js": "return string replace ms- replace nodeName : function elem name return elem nodeName && elem nodeName toLowerCase === name toLowerCase each : function obj callback var = 0 ", "src/core/nodeName.js": "define function use strict function nodeName elem name return elem nodeName && elem nodeName toLowerCase === name toLowerCase return ", "src/deprecated.js": "define ./core function jQuery ./core ./core/nodeName function jQuery nodeName use strict else jQuery ready true : jQuery isArray = Array isArray ", "src/event.js": "./var/slice ./data/var/dataPriv ./core/init ./core/nodeName ./selector function jQuery document documentElement rnothtmlwhite rcheckableType slice dataPriv function jQuery document documentElement rnothtmlwhite rcheckableType slice dataPriv nodeName use strict  For checkable types, fire native event so checked state will be right trigger : function if rcheckableType test this type && this click && jQuery . nodeName this input this click && nodeName this input this click return false  For cross-browser consistency, don't fire native .click() on links _default : function event return jQuery . nodeName event target a return nodeName event target a ", "src/manipulation.js": "./core/DOMEval ./core/init ./core/nodeName ./traversing ./selector ./event function jQuery concat push rcheckableType access rtagName rscriptType wrapMap getAll setGlobalEval buildFragment support dataPriv dataUser acceptData DOMEval dataPriv dataUser acceptData DOMEval ,  nodeName use strict  Prefer a tbody over its parent table for containing new rows function manipulationTarget elem content if jQuery . nodeName table && jQuery . nodeName content nodeType !== 11 ? : content firstChild tr if nodeName table && nodeName content nodeType !== 11 ? : content firstChild tr return jQuery >tbody 0 || ", "src/manipulation/getAll.js": "define ../core function jQuery ../core ../core/nodeName function jQuery nodeName use strict = if === undefined || && jQuery . nodeName if === undefined || && nodeName return jQuery merge ", "src/offset.js": "./css/support ./core/init ./core/nodeName ./css ./selector  contains function jQuery access document documentElement rnumnonpx curCSS addGetHookIf support function jQuery access document documentElement rnumnonpx curCSS addGetHookIf support nodeName use strict  Get correct offsets = this offset if ! jQuery . nodeName 0 html if ! nodeName 0 html = offsetParent offset ", "src/traversing.js": "./traversing/var/siblings ./traversing/var/rneedsContext ./core/init ./core/nodeName ./traversing/findFilter ./selector function jQuery indexOf dir siblings rneedsContext function jQuery indexOf dir siblings rneedsContext ,  nodeName use strict return siblings elem firstChild contents : function elem if jQuery . nodeName iframe if nodeName iframe return elem contentDocument  Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only  Treat the template element as a regular one in browsers that  don't support it. if jQuery . nodeName template if nodeName template = elem content || ", "test/unit/core.js": "var = + + test var = jQuery < + + ></ + + > assert ok 0 Create a  + +  element assert ok jQuery . nodeName (  0 ,  tagName toUpperCase )  assert ok 0 . nodeName   ===   tagName toUpperCase +  element has expected node name var = tr multiple symbol join var = jQuery < + + ></ + + > assert ok 0 Create a  + +  element assert ok jQuery . nodeName (  0 ,  tagName toUpperCase )  assert ok 0 . nodeName   ===   tagName toUpperCase +  element has expected node name ", "test/unit/manipulation.js": "jQuery each thead tbody tfoot colgroup caption tr th td split   function i name var = jQuery < + + -d></ + + -d>< + + -d></ + + -d> assert ok 0 Create a tag-hyphenated element assert ok jQuery . nodeName (  0 ,  name toUpperCase + -D  ) Hyphenated node name assert ok jQuery . nodeName (  1 ,  name toUpperCase + -D  ) Hyphenated node name assert ok 0 . nodeName   ===   name toUpperCase + -D Hyphenated node name assert ok 1 . nodeName   ===   name toUpperCase + -D Hyphenated node name var = jQuery <tr-multiple-hyphens><td-with-hyphen>text</td-with-hyphen></tr-multiple-hyphens> assert ok jQuery . nodeName (  0 ,  TR-MULTIPLE-HYPHENS  ) Tags with multiple hyphens assert ok jQuery . nodeName (  j children 0 ,  TD-WITH-HYPHEN  ) Tags with multiple hyphens assert ok 0 . nodeName   ===   TR-MULTIPLE-HYPHENS Tags with multiple hyphens assert ok j children 0 . nodeName   ===   TD-WITH-HYPHEN Tags with multiple hyphens assert equal j children text text Tags with multiple hyphens behave normally jQuery each function name value var = < + + > + + </ + + > assert ok jQuery nodeName (  jQuery . parseHTML < + + > + + </ + + > 0 , name ) +  is created correctly assert ok jQuery parseHTML < + + > + + </ + + > 0 . nodeName . toLowerCase ()  ===  name +  is created correctly results push args push jQuery fn append apply jQuery <div/> children each function i assert ok jQuery nodeName (  this ,  ) assert ok this nodeName . toLowerCase ()  === jQuery each function index tag jQuery < + + />< + + /> each function assert ok jQuery nodeName (  this ,  ) +  empty elements created correctly assert ok this nodeName . toLowerCase ()  === +  empty elements created correctly jQuery < + this + ></ + + >< + + ></ + + > each function assert ok jQuery nodeName (  this ,  ) +  elements with closing tag created correctly assert ok this nodeName . toLowerCase ()  === +  elements with closing tag created correctly ", "count": 12}},
{"dictionary": {"src/traversing.js": "return siblings elem firstChild contents : function elem return elem contentDocument || jQuery merge elem childNodes if jQuery nodeName iframe return elem contentDocument  Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only  Treat the template element as a regular one in browsers that  don't support it. if jQuery nodeName template = elem content || return jQuery merge elem childNodes function name fn jQuery fn = function until selector ", "test/unit/traversing.js": "assert equal 0 nodeValue hi Check node,textnode,comment contents is just the one from span QUnit test contents() for <template /> function assert assert expect 4 jQuery #qunit-fixture append <template id='template'> +     <div id='template-div0'> +         <span>Hello, Web Component!</span> +     </div> +     <div id='template-div1'></div> +     <div id='template-div2'></div> + </template> var = jQuery #template contents assert equal contents length 6 Check template element contents assert equal contents find span text Hello, Web Component! Find span in template and check its text jQuery <div id='templateTest' /> append jQuery jQuery map function node return document importNode true appendTo #qunit-fixture = jQuery #templateTest contents assert equal contents length 6 Check cloned nodes of template element contents assert equal contents filter div length 3 Count cloned elements from template content in document createElement template ? test : skip contents() for <template /> remains inert function assert assert expect 2 Globals register testScript Globals register testImgOnload jQuery #qunit-fixture append <template id='template'> +     <script>testScript = 1;</script> +     <img src='data/1x1.jpg' onload='testImgOnload = 1' > + </template> var = jQuery #template contents assert strictEqual window testScript true script in template isn't executed assert strictEqual window testImgOnload true onload of image in template isn't executed QUnit test sort direction function assert assert expect 12 ", "count": 2}},
{"dictionary": {"test/unit/event.js": "clone remove QUnit test checkbox state (#3827) function assert assert expect 9 QUnit test checkbox state (#3827 ) function assert assert expect 17 var = jQuery <div><input type=checkbox><div> appendTo #qunit-fixture = markup find input 0 var = jQuery <div><input type=checkbox><div> appendTo #qunit-fixture = cbParent find input 0 = jQuery <div><input type=radio name=gh3423><input type=radio name=gh3423><div> appendTo #qunit-fixture = radioParent find input 0 = radioParent find input 1 jQuery on click function assert equal this checked false just-clicked checkbox is not checked markup on click function cbParent on click function assert equal cb checked false checkbox is not checked in bubbled event radioParent on click function assert equal radio checked false radio is not checked in bubbled event  Native click cb checked = true cb checked = radio . checked   =   true assert equal cb checked true native - checkbox is initially checked assert equal radio checked true native - radio is initially checked cb click radio2 click assert equal cb checked false native - checkbox is no longer checked assert equal radio checked false native - radio is no longer checked  jQuery click cb checked = true assert equal cb checked true jQuery - checkbox is initially checked jQuery trigger click assert equal cb checked false jQuery - checkbox is no longer checked cb checked = radio checked = true assert equal cb checked true .trigger - checkbox is initially checked assert equal radio checked true .trigger - radio is initially checked jQuery trigger click assert equal cb checked false .trigger - checkbox is no longer checked assert equal radio checked false .trigger - radio is no longer checked  Handlers only; checkbox state remains false jQuery triggerHandler click jQuery triggerHandler click assert equal cb checked false .triggerHandler - checkbox is still unchecked assert equal radio checked false .triggerHandler - radio is still unchecked QUnit test hover event no longer special since 1.9 function assert ", "count": 1}},
{"dictionary": {"src/effects.js": "deferred notifyWith  If there's more to do, yield if < 1 && return else deferred resolveWith return false  If this was an empty animation, synthesize a final progress notification if ! deferred notifyWith 1 0  Resolve the animation and report its conclusion deferred resolveWith return false = deferred promise : animation opts start call  Attach callbacks from options progress animation opts progress done animation opts done animation opts complete fail animation opts fail always animation opts always jQuery fx timer jQuery extend :  attach callbacks from options return animation progress animation opts progress done animation opts done animation opts complete fail animation opts fail always animation opts always return jQuery Animation = jQuery extend for < timers length ++ =    the timer     the timer  if ! timer && === timers splice -- 1 jQuery fx timer = function timer jQuery timers push var = jQuery timers push - 1 = jQuery timers if timer jQuery fx start else jQuery timers pop  If the timer finished immediately, safely remove it (allowing for external removal)  Use a superfluous post-decrement for better compressibility w.r.t. jQuery.fx.tick above else if === timers splice -- 1 ", "test/unit/effects.js": "QUnit test hide hidden elements, with animation (bug #7141) function assert assert expect 3 assert expect 4 var = jQuery <div style='display:none' > appendTo #qunit-fixture assert equal div css display none Element is  div hide 1 function assert ok (  ! jQuery . _data ( div,  is  div show 1 function assert equal div css display block var = jQuery <div  style='display:none' > appendTo #qunit-fixture assert equal div css display none Element is  div hide 10 function assert equal (  div . css (  ,  is  div show 11 function assert equal div css display block this clock tick 10 this clock tick 50 assert equal div css display block Element is visible after animations QUnit test animate unit-less properties (#4966) function assert ", "count": 2}},
{"dictionary": {"src/event.js": "./var/document ./var/documentElement ./var/rnothtmlwhite ./var/rcheckableType ./var/slice ./data/var/dataPriv ./core/init ./selector function jQuery document documentElement rnothtmlwhite slice dataPriv function jQuery document documentElement rnothtmlwhite rcheckableType ,  slice dataPriv use strict :  For  , fire native event so checked state will be right  For  , fire native event so checked state will be right trigger : function if this type === checkbox && this click && jQuery nodeName this input if rcheckableType test this type && this click && jQuery nodeName this input this click return false ", "src/manipulation.js": "./core ./var/concat ./var/push ./var/rcheckableType ./core/access ./manipulation/var/rcheckableType ./manipulation/var/rtagName ./manipulation/var/rscriptType ./manipulation/wrapMap ./traversing ./selector ./event function jQuery concat push access rcheckableType rtagName rscriptType function jQuery concat push rcheckableType access rtagName rscriptType wrapMap getAll setGlobalEval buildFragment support dataPriv dataUser acceptData DOMEval ", "src/serialize.js": "define ./core ./ var/rcheckableType ./var/rcheckableType ./core/init ./traversing  filter ./attributes/prop ", "src/manipulation/var/rcheckableType.js \u2192 src/var/rcheckableType.js": "", "count": 4}},
{"dictionary": {"src/manipulation.js": "=   true ( ) =   <!(?: CDATA --) (?: --)> g  Prefer a tbody over its parent table for containing new rows function manipulationTarget elem content if jQuery nodeName table && jQuery nodeName content nodeType !== 11 ? : content firstChild tr return elem . getElementsByTagName tbody 0 || return jQuery tbody , elem 0 || return ", "test/unit/manipulation.js": "assert strictEqual table find td width 150 QUnit test Make sure tr is not appended to the wrong tbody (gh-3439) function assert assert expect 1 var = <thead><tr><td> + <table><tbody><tr><td>nested</td></tr></tbody></table> + </td></tr></thead> = <tr><td>added</td></tr> = htmlIn replace </thead> </thead> + = supportjQuery <table/> html appendTo #qunit-fixture 0 jQuery append  Lowercase and replace spaces to remove possible browser inconsistencies = table innerHTML toLowerCase replace   g assert strictEqual QUnit test Insert script with data-URI (gh-1887) 1 function assert Globals register testFoo Globals register testSrcFoo ", "count": 2}},
{"dictionary": {"src/callbacks.js": "fire = function  Enforce single-firing = options once = locked  ||   options once  Execute callbacks for all pending executions,  respecting firingIndex overrides and runtime changes ", "test/unit/callbacks.js": "cb fire assert ok ! Disabled callback function didn't fire QUnit test jQuery.Callbacks() - list with memory stays locked (gh-3469) function assert assert expect 3 var = jQuery Callbacks memory = 0 count1 = function += 1 count2 = function += 10 cb add cb fire assert equal 1 Pre-lock() fire cb lock cb add assert equal 11 Post-lock() add cb fire assert equal 11 Post-lock() fire ignored ", "count": 2}},
{"dictionary": {"test/jquery.js": "function  global loadTests: false  var = window location pathname split test 0 var = window location pathname split test 0 = window QUnit || parent QUnit = window require || parent require  iFrames won't load AMD (the iframe tests synchronously expect jQuery to be there) QUnit config urlConfig push : amd : Load with AMD : Load the AMD jQuery file (and its dependencies)  If QUnit is on window, this is the main window  This detection allows AMD tests to be run in an iframe if QUnit urlParams amd && window QUnit = window require || parent require  Default to unminified jQuery for directly-opened iframes = ? QUnit urlParams : : true = urlParams dev ? dist/jquery.js : dist/jquery.min.js  Define configuration parameters controlling how jQuery is loaded if QUnit config urlConfig push : amd : Load with AMD : Load the AMD jQuery file (and its dependencies) QUnit config urlConfig push : dev : Load unminified : Load the development (unminified) jQuery file  Honor AMD loading on the main window (detected by seeing QUnit on it).  This doesn't apply to iframes because they synchronously expect jQuery to be there. if urlParams amd && window QUnit require config : else require return  Config parameter to use minified jQuery QUnit config urlConfig push : dev : Load unminified : Load the development (unminified) jQuery file if QUnit urlParams dev = dist/jquery.js  Otherwise, load synchronously else = dist/jquery.min.js  Load jQuery document write <script id='jquery-js' src=' + + + '>< script> document write <script id='jquery-js' src=' + + + '>< script>  Synchronous-only tests if  (  typeof  loadTests  !==    { document . write (    +  path  +    ); \t  Synchronous-only tests \t if  (  typeof  loadTests  !==    ) { \t\t document . write (    +  path  +   ; } ", "count": 1}},
{"dictionary": {"package.json": "Traversing Wrap markerPattern ^((clos|fix|resolv)(e[sd]|ing))|(refs?) ticketPattern ^((Closes|Fixes) ([a-zA-Z]{2,}-)[0-9]+)|(Refs? [^#]) markerPattern ^((clos|fix|resolv)(e[sd]|ing))| (refs?) ticketPattern ^((Closes|Fixes) ([a-zA-Z]{2,}-)[0-9]+)| (Refs? [^#]) ", "count": 1}},
{"dictionary": {".travis.yml": "language node_js sudo false node_js 0.12 4 6 7 ", "Gruntfile.js": "var = require fs = require gzip-js =   v0 test process version  Support: Node.js <4  Skip running tasks that dropped support for Node.js 0.12  in this Node version. function runIfNewNode task return ? print_old_node_message: + : = require gzip-js if ! grunt option filename grunt option filename jquery.js  Load grunt tasks from NPM packages  Support: Node.js <4  Don't load the eslint task in old Node.js, it won't parse. require load-grunt-tasks : ? grunt-* !grunt-eslint : grunt-* require load-grunt-tasks  Integrate jQuery specific tasks grunt loadTasks build/tasks grunt registerTask print_old_node_message function var = slice call arguments join : grunt log writeln Old Node.js detected, running the task  + +  skipped... grunt registerTask lint jsonlint  Running the full eslint task without breaking it down to targets  would run the dist target first which would point to errors in the built  file, making it harder to fix them. We want to check the built file only  if we already know the source files pass the linter. runIfNewNode (  eslint:dev  ) runIfNewNode (  eslint:dist  ) eslint:dev eslint:dist grunt registerTask lint:newer newer:jsonlint  Don't replace it with just the task; see the above comment. runIfNewNode (  newer:eslint:dev  ) runIfNewNode (  newer:eslint:dist  ) newer:eslint:dev newer:eslint:dist grunt registerTask test:fast runIfNewNode (  node_smoke_tests  ) grunt registerTask test:slow runIfNewNode (  promises_aplus_tests  ) grunt registerTask test:fast node_smoke_tests grunt registerTask test:slow promises_aplus_tests grunt registerTask test test:fast grunt registerTask dev build:*:* runIfNewNode (  newer:eslint:dev  ) newer:eslint:dev newer:uglify remove_map_comment dist:* compare_size grunt registerTask default runIfNewNode (  eslint:dev  ) eslint:dev build:*:* uglify remove_map_comment dist:* runIfNewNode (  eslint:dist  ) eslint:dist test:fast compare_size ", "count": 2}},
{"dictionary": {".github/ISSUE_TEMPLATE.md": "  Note that we only can fix bugs in the latest version of jQuery.   Briefly describe the issue you've encountered   *  What do you expect to happen?   *  What   happens?   *  What   happens?   *  Which browsers are affected?   Provide a *minimal* test case, see https://webkit.org/test-case-reduction/   Use the latest shipping version of jQuery in your test case! ", "count": 1}},
{"dictionary": {"test/unit/core.js": "assert equal jQuery <div > length 0 Ignore escaped html characters QUnit test jQuery(tag-hyphenated elements) gh-1987 function assert assert expect 17 QUnit test jQuery(element with non-alphanumeric name) function assert assert expect 36 jQuery each - : function i symbol jQuery each thead tbody tfoot colgroup caption tr th td function j tag var = + + test var = jQuery < + + ></ + + > assert ok 0 Create a  + +  element assert ok jQuery nodeName 0 tagName toUpperCase +  element has expected node name jQuery each thead tbody tfoot colgroup caption tr th td split   function i name var = jQuery < + + -d></ + + -d> assert ok 0 Create a tag-hyphenated elements assert ok jQuery nodeName 0 name toUpperCase + -D Tag-hyphenated element has expected node name var = tr multiple symbol join var = jQuery < + + ></ + + > assert ok 0 Create a  + +  element assert ok jQuery nodeName 0 tagName toUpperCase +  element has expected node name var = jQuery <tr-multiple-hyphens></tr-multiple-hyphens> assert ok jQuery nodeName 0 TR-MULTIPLE-HYPHENS Element with multiple hyphens in its tag has expected node name QUnit test jQuery('massive html #7990') function assert ", "count": 1}},
{"dictionary": {".eslintignore": "", "count": 1}},
{"dictionary": {"test/node_smoke_tests/.eslintrc.json": "extends : ../../.eslintrc-node.json parserOptions : ecmaVersion : 2015 ecmaVersion : 6 env : ", "count": 1}},
{"dictionary": {".npmignore": "", "count": 1}},
{"dictionary": {"src/offset.js": "use strict  * Gets a window from an element   function getWindow elem return jQuery isWindow ? : elem nodeType === 9 && elem defaultView jQuery offset = setOffset : function elem options i var var docElem, win doc var doc, docElem win = this 0 if ! = elem getBoundingClientRect = elem ownerDocument = getWindow = doc documentElement = doc defaultView return : rect top + win pageYOffset - docElem clientTop jQuery fn = function val return access this function elem method val var = getWindow  Coalesce documents and windows var if jQuery isWindow = else if elem nodeType === 9 = elem defaultView if === undefined return ? : ", "count": 1}},
{"dictionary": {".eslintrc-browser.json": "root true extends jquery // Support IE <= 9 only Android <=4.0 only // The above browsers are failing a lot of tests in the ES5 // test suite at http //test 262 .ecmascript.org. parserOptions : ecmaVersion 3 // The browser env is not enabled on purpose so that code takes // all browser-only globals from window instead of assuming // they're available as globals. This makes it possible to use // jQuery with tools like jsdom which provide a custom window // implementation. env globals window true jQuery true define true module true noGlobal true rules strict error function ", ".eslintrc-node.json": "root true extends jquery parserOptions ecmaVersion 5 env node true ", ".eslintrc.json": "extends : eslint-config-jquery root : true env : node : true extends : ./.eslintrc-node.json ", "Gruntfile.js": "grunt registerTask lint jsonlint runIfNewNode eslint  Running the full eslint task without breaking it down to targets  would run the dist target first which would point to errors in the built  file, making it harder to fix them. We want to check the built file only  if we already know the source files pass the linter. runIfNewNode eslint:dev runIfNewNode eslint:dist grunt registerTask lint:newer newer:jsonlint runIfNewNode newer:eslint  Don't replace it with just the task; see the above comment. runIfNewNode newer:eslint:dev runIfNewNode newer:eslint:dist grunt registerTask test:fast runIfNewNode node_smoke_tests ", "dist/.eslintrc.json": "extends : ../src/.eslintrc.json root : true extends : ../.eslintrc-browser.json rules :  That is okay for the built version no-multiple-empty-lines : off ", "src/.eslintrc.json": " Support: IE <=9 only, Android <=4.0 only  The above browsers are failing a lot of tests in the ES5  test suite at http://test262.ecmascript.org. parserOptions : ecmaVersion : 3 globals : window : true jQuery : true define : true module : true noGlobal : true rules : strict : error function root : true extends : ../.eslintrc-browser.json ", "test/.eslintrc.json": "root : true extends : ../.eslintrc-browser.json env :  In source the browser env is not enabled but unit tests rely on them  too much and we don't run them in non-browser environments anyway. browser : true  Support: IE <=9 only, Android <=4.0 only  The above browsers are failing a lot of tests in the ES5  test suite at http://test262.ecmascript.org. parserOptions : ecmaVersion : 3 globals : require : false define : false baseURL : true externalHost : true rules :  See https://github.com/eslint/eslint/issues/2342 no-unused-vars : off  Too   errors  Too   errors max-len : off brace-style : off key-spacing : off camelcase : off strict : off  Not really too   - waiting autofix features for these rules  Not really too   - waiting  autofix features for these rules lines-around-comment : off dot-notation : off ", "test/node_smoke_tests/.eslintrc.json": "root : true extends : ../../.eslintrc-node.json parserOptions : ecmaVersion : 2015 env : es6 : true extends : ../../.eslintrc.json root : true ", "test/promises_aplus_adapters/.eslintrc.json": "extends : ../../.eslintrc.json root : true root : true extends : ../../.eslintrc-node.json ", "count": 9}},
{"dictionary": {"src/deferred.js": "throw function adoptValue value resolve reject function adoptValue value resolve reject ,  noValue var try  Other non-thenables else  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context resolve call undefined  Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:  * false: [ value ].slice( 0 ) => resolve( value )  * true: [ value ].slice( 1 ) => resolve() resolve apply undefined slice  For Promises/A+, convert exceptions into rejections  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context reject call undefined reject apply undefined [   ]  Single- and empty arguments are adopted like Promise.resolve if <= 1 adoptValue master done updateFunc resolve master reject adoptValue master done updateFunc resolve master reject !  Use .then() to unwrap secondary thenables (cf. gh-3000) if master state === pending || ", "test/unit/deferred.js": "jQuery when done function resolveValue assert strictEqual resolveValue,  undefined Resolved .done with no arguments assert strictEqual arguments . length ,  0 Resolved .done with no arguments assert strictEqual this Default .done context with no arguments then function resolveValue assert strictEqual resolveValue,  undefined Resolved .then with no arguments assert strictEqual arguments . length ,  0 Resolved .then with no arguments assert strictEqual this Default .then context with no arguments ", "count": 2}},
{"dictionary": {"src/offset.js": "return  Return zeros for disconnected and hidden (display: none) elements (gh-2310)  Support: IE <=11 only  Running getBoundingClientRect on a  disconnected node in IE throws an error = elem getBoundingClientRect  Make sure element is not hidden (display: none) if rect width || rect height = elem ownerDocument = getWindow = doc documentElement = elem ownerDocument = getWindow = doc documentElement return : rect top + win pageYOffset - docElem clientTop : rect left + win pageXOffset - docElem clientLeft  Return zeros for disconnected and hidden elements (gh-2310) return return : rect top + win pageYOffset - docElem clientTop : rect left + win pageXOffset - docElem clientLeft position : function ", "test/unit/offset.js": "QUnit test disconnected element function assert assert expect 2 assert expect 3 var = jQuery document createElement div offset  valid input, but will return zeros for back-compat assert equal result top 0 Retrieving offset on disconnected elements returns zeros (gh-2310) assert equal result left 0 Retrieving offset on disconnected elements returns zeros (gh-2310) assert equal Object keys length 2 Retrieving offset on disconnected elements returns offset object (gh-3167) QUnit test hidden (display: none) element function assert assert expect 2 assert expect 3 var = jQuery <div style='display: none' /> appendTo #qunit-fixture = node offset  valid input, but will return zeros for back-compat assert equal result top 0 Retrieving offset on hidden elements returns zeros (gh-2310) assert equal result left 0 Retrieving offset on hidden elements returns zeros (gh-2310) assert equal Object keys length 2 Retrieving offset on hidden elements returns offset object (gh-3167) QUnit test 0 sized element function assert assert expect 3 var = jQuery <div style='margin: 5px; width: 0; height: 0' /> appendTo #qunit-fixture = node offset node remove assert notEqual result top 0 Retrieving offset on 0 sized elements (gh-3167) assert notEqual result left 0 Retrieving offset on 0 sized elements (gh-3167) assert equal Object keys length 2 Retrieving offset on 0 sized elements returns offset object (gh-3167) QUnit test hidden (visibility: hidden) element function assert assert expect 3 var = jQuery <div style='margin: 5px; visibility: hidden' /> appendTo #qunit-fixture = node offset node remove assert notEqual result top 0 Retrieving offset on visibility:hidden elements (gh-3167) assert notEqual result left 0 Retrieving offset on visibility:hidden elements (gh-3167) assert equal Object keys length 2 Retrieving offset on visibility:hidden elements returns offset object (gh-3167) testIframe absolute offset/absolute.html function assert $ iframe ", "count": 2}},
{"dictionary": {"build/tasks/build.js": "read = function fileName return grunt file read + = read wrapper.js split     CODE  Catch `// @CODE` and subsequent comment lines event if they don't start  in the first column. = read wrapper.js split    @CODE (?: ) = : src : jquery ", "count": 1}},
{"dictionary": {"CONTRIBUTING.md": "*jQuery Core* * * at the API repo * Foundation their respective repos * organization their respective repos Getting Involved API design principles identifying bugs guidelines contribute.jquery.org getting started with open source commit & pull request guide style guides contributor license agreement contribute.jquery.org getting started with open source commit & pull request guide style guides contributor license agreement Questions and Discussion ", "Gruntfile.js": "ascii_only : true : /*! jQuery v<%= pkg.version %> |  + (c)   Foundation | jquery.org/license */ (c)   Foundation  | jquery.org/license */ : hoist_funs : false : false ", "LICENSE.txt": "jQuery jquery.org JS js.foundation ", "package.json": "main dist/jquery.js homepage https://jquery.com author name  Foundation and other contributors name  Foundation and other contributors url https://github.com/jquery/jquery/blob/master/AUTHORS.txt repository ", "src/wrapper.js": " * Includes Sizzle.js  * https://sizzlejs.com/  *  * Copyright   Foundation and other contributors  * Copyright   Foundation and other contributors  * Released under the MIT license  * https://jquery.org/license  * ", "count": 5}},
{"dictionary": {".travis.yml": "language node_js sudo false node_js 0.10 0.12 4 6 ", "Gruntfile.js": "=   v0 test process version  Support: Node.js <4  Skip running tasks that dropped support for Node.js 0. 12  in   Node  .  Skip running tasks that dropped support for Node.js 0.12  in   Node  . function runIfNewNode task return ? print_old_node_message: + : ", "count": 2}},
{"dictionary": {"src/attributes/val.js": "else if typeof === number += else if jQuery isArray else if Array isArray = jQuery map function value return == null ? : + jQuery each radio checkbox function jQuery valHooks this = set : function elem value if jQuery isArray if Array isArray return elem checked = jQuery inArray jQuery val > - 1 ", "src/core.js": " Recurse if we're merging plain objects or arrays if && && jQuery isPlainObject || = jQuery isArray = Array isArray if = false = && jQuery isArray ? : = && Array isArray ? : else = && jQuery isPlainObject ? : return jQuery type === function : Array isArray isWindow : function obj return != null && === obj window ", "src/css.js": "= = 0 if jQuery isArray if Array isArray = getStyles = name length ", "src/data/Data.js": "if !== undefined  Support array or space separated string of keys if jQuery isArray if Array isArray  If key is an array of keys...  We always set camelCase keys, so remove that. ", "src/deprecated.js": "jQuery isArray = Array isArray jQuery parseJSON = JSON parse ", "src/effects.js": "= jQuery camelCase = = if jQuery isArray if Array isArray = 1 = = 0 ", "src/queue.js": " Speed up dequeue by getting out quickly if this is just a lookup if if ! || jQuery isArray if ! || Array isArray = dataPriv access jQuery makeArray else queue push ", "src/serialize.js": "function buildParams prefix obj traditional add var if jQuery isArray if Array isArray  Serialize array item. jQuery each function i v  If an array was passed in, assume that it is an array of form elements. if jQuery isArray || a jquery && ! jQuery isPlainObject if Array isArray || a jquery && ! jQuery isPlainObject  Serialize the form elements jQuery each function return null if jQuery isArray if Array isArray return jQuery map function val return : elem name : val replace ", "test/data/testinit.js": "= || = options requests || options request || if ! jQuery isArray if ! Array isArray = ", "test/data/testrunner.js": "if elems jquery && elems toArray = elems toArray if ! supportjQuery isArray if ! Array isArray = ", "test/unit/core.js": "assert ok jQuery extend true arr !== Deep extend of object must clone child array  #5991 assert ok jQuery isArray jQuery extend true arr : arr Cloned array have to be an Array assert ok Array isArray jQuery extend true arr : arr Cloned array have to be an Array assert ok jQuery isPlainObject jQuery extend true arr : arr : arr Cloned object have to be an plain object = = jQuery extend true assert deepEqual The [result] and [initial] have equal shape and values assert ok ! jQuery isArray result object result.object wasn't paved with an empty array assert ok ! Array isArray result object result.object wasn't paved with an empty array QUnit test jQuery.each(Object,Function) function assert ", "test/unit/deprecated.js": "assert strictEqual jQuery parseJSON 0 0 Input cast to string QUnit test jQuery.isArray function assert assert expect 1 assert strictEqual jQuery isArray Array isArray Array.isArray equals jQuery.isArray ", "test/unit/queue.js": "var = document createElement div assert ok jQuery isArray jQuery queue fx jQuery noop jQuery.queue should return an array while manipulating the queue assert ok Array isArray jQuery queue fx jQuery noop jQuery.queue should return an array while manipulating the queue QUnit test delay() function assert ", "count": 13}},
{"dictionary": {".travis.yml": "0.12 4 6 7 ", "count": 1}},
{"dictionary": {".github/ISSUE_TEMPLATE.md": "  Most features should start as plugins outside of jQuery. Bug Reports:   Note that we only can fix bugs in the latest   of jQuery.   Note that we only can fix bugs in the latest   of jQuery.   Briefly describe the issue you've encountered   *  What do you expect to happen?   *  What acually happens? ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.1. -pre version 3.1. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"build/release/dist.js": "fs writeFileSync Release dir dist + /bower.json generateBower console log Adding files to dist... Release exec git add . Error adding files. Release exec git add -A Error adding files. Release exec git commit -m  Release  + Release newVersion + git commit -m  Release  + Release newVersion + Error committing files. console log console log Tagging release on dist... Release exec git tag  + Release newVersion Error tagging  + Release newVersion +  on dist repo. Release tagTime = Release exec git log -1 --format= %ad Release tagTime = Release exec git log -1 --format= %ad Error getting tag timestamp. trim ", "count": 1}},
{"dictionary": {"src/core/ready-no-deferred.js": "use strict var = = false whenReady = function fn readyCallbacks push whenReady = function fn readyCallbacks push if ! = true while readyCallbacks length = readyCallbacks shift if jQuery isFunction executeReady while readyCallbacks length = readyCallbacks shift if jQuery isFunction executeReady = false ", "count": 1}},
{"dictionary": {".mailmap": "", "AUTHORS.txt": "timmywillisn 4timmywil ", "count": 2}},
{"dictionary": {"build/release/cdn.js": " Map files need to reference the new uncompressed name;  assume that all files reside in the same directory.  \"file\":\"jquery.min.js\" \"sources\":[\"jquery.js\"]  \"file\":\"jquery.min.js\" \"sources\":[\"jquery.js\"] = fs readFileSync utf8 replace   \"file\":\"( )\",\"sources\": \"( )\" file : + unpathedFile replace   min map .min.js + , sources :[ + unpathedFile replace   min map .js + ] replace   \"file\":\"( )\" file : + unpathedFile replace   min map .min.js replace   \"sources\": \"( )\" sources :[ + unpathedFile replace   min map .js + ] fs writeFileSync else if !== shell cp -f ", "count": 1}},
{"dictionary": {"src/core/stripAndCollapse.js": "define function define ../var/rnothtmlwhite function rnothtmlwhite use strict  Strip and collapse whitespace according to HTML spec  https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace var  rhtmlSpace  = , stripAndCollapse   =   function (  value { \t return (    +  value  +    ). replace ( rhtmlSpace,     ). slice (  1 ,  - 1 \t}; function   stripAndCollapse (  value  ) { var  tokens  =   value . match ( rnothtmlwhite ||  []; return tokens . join (    } return ", "count": 1}},
{"dictionary": {"test/unit/support.js": "radioValue : true reliableMarginLeft : true else if   ( )  safari i test else if   ( )  safari i test = ajax : true boxSizingReliable : true radioValue : true reliableMarginLeft : true else if   8 0( ) safari i test = ajax : true boxSizingReliable : true checkClone : true checkOn : true clearCloneStyle : true cors : true createHTMLDocument : false focusin : false noCloneChecked : true optSelected : true pixelMarginRight : true pixelPosition : false radioValue : true reliableMarginLeft : true else if   firefox i test = ajax : true radioValue : true reliableMarginLeft : false else if   iphone os  i test else if   iphone os  i test = ajax : true boxSizingReliable : true ", "count": 1}},
{"dictionary": {"package.json": "jsdom 5.6.1 load-grunt-tasks 3.5.0 native-promise-only 0.8.1 promises-aplus-tests 2.1. promises-aplus-tests 2.1. q 1.4.1 qunit-assert-step 1.0.3 qunitjs 1.23.1 ", "count": 1}},
{"dictionary": {"build/tasks/build.js": "read = function fileName return grunt file read + = read exports/global.js = read wrapper.js split     CODE = : src : true : : 0 replace   eslint(?:  -) : globals replace \t\t\t\t\t ExcludeStart ExcludeEnd ig + 1 : 1 : : ", "src/exports/global.js": " ExcludeStart  define ../core function jQuery noGlobal  This file is included in a different way from all the others  so the \"use strict\" pragma is not needed.  eslint strict: \"off\"   ExcludeEnd  use strict var if ! window jQuery = window $ = ", "src/jquery.js": "./offset ./dimensions ./deprecated ./exports/amd ./exports/amd ./exports/global function jQuery use strict return (  window . jQuery   =   window . $   =  jQuery ) return ", "test/data/testinit.js": "\t\t\t\t * Run in noConflict mode \t\t\t\t  if jQuery noConflict jQuery noConflict jQuery noConflict  Load the TestSwarm listener if swarmURL is in the address. if QUnit isSwarm ", "test/unit/core.js": "assert ok window strictEvalTest - < 500 Code executed synchronously  This is not run in AMD mode if jQuery noConflict QUnit test noConflict function assert assert expect 7 QUnit test noConflict function assert assert expect 7 \t var = var = \t assert strictEqual jQuery noConflict noConflict returned the jQuery object \t assert strictEqual window jQuery Make sure jQuery wasn't touched. \t assert strictEqual window $ Make sure $ was reverted. assert strictEqual jQuery noConflict noConflict returned the jQuery object assert strictEqual window jQuery Make sure jQuery wasn't touched. assert strictEqual window $ Make sure $ was reverted. \t = = = = \t assert strictEqual jQuery noConflict true noConflict returned the jQuery object \t assert strictEqual window jQuery Make sure jQuery was reverted. \t assert strictEqual window $ Make sure $ was reverted. \t assert ok $$ pushStack Make sure that jQuery still works. assert strictEqual jQuery noConflict true noConflict returned the jQuery object assert strictEqual window jQuery Make sure jQuery was reverted. assert strictEqual window $ Make sure $ was reverted. assert ok $$ pushStack Make sure that jQuery still works. window jQuery = = window jQuery = = QUnit test trim function assert assert expect 13 ", "count": 5}},
{"dictionary": {"src/traversing/findFilter.js": "return jQuery grep function elem i return !! qualifier call !==  Single element if qualifier nodeType return jQuery grep function elem return === !== if typeof === string if risSimple test return jQuery filter  Arraylike of elements (jQuery, arguments, Array) if typeof !== string return jQuery grep function elem return indexOf call > - 1 !== = jQuery filter  Simple selector that can be filtered directly, removing non-Elements if risSimple test return jQuery filter  Complex selector, compare the two sets, removing non-Elements = jQuery filter return jQuery grep function elem return indexOf call > - 1 !== && elem nodeType === 1 ", "test/unit/traversing.js": "assert deepEqual mixedContents not [id=a],*,[id=b] get not [id=a],*,[id=b] QUnit test not(arraylike) passes non-element nodes (gh-3226) function assert assert expect 5 var = jQuery <span id='nonnodesElement'>hi</span> there <!-- mon ami --> = mixedContents length = mixedContents first assert deepEqual mixedContents not get not everything assert deepEqual mixedContents not length - 1 not firstElement assert deepEqual mixedContents not 0 nextSibling length - 1 not textnode array assert deepEqual mixedContents not 0 nextSibling length - 1 not textnode assert deepEqual mixedContents not document body get mixedContents get not with unmatched element QUnit test has(Element) function assert assert expect 3 var ", "count": 2}},
{"dictionary": {"test/unit/css.js": "= jQuery <div></div> css position absolute css position fake value assert equal el css position absolute The old style is kept when setting an unrecognized value = jQuery <div></div> css position absolute css position   assert equal el css position absolute The old style is kept when setting to a space  Support: Edge 14  Edge collapses whitespace-only values when setting a style property and  there is no easy way for us to work around it. Just skip the test there  and hope for the better future. if   edge i test navigator userAgent assert ok true Skipped (Edge 14 handles whitespace-only values incorrectly) else assert equal el css position absolute The old style is kept when setting to a space QUnit test Reset the style if set to an empty string function assert ", "count": 1}},
{"dictionary": {"external/sizzle/dist/sizzle.js": "!  * Sizzle CSS Selector Engine v2.3.  * Sizzle CSS Selector Engine v2.3.  * https://sizzlejs.com/  *  * Copyright jQuery Foundation and other contributors = addCombinator function elem return elem disabled === true return elem disabled === true   &&  (   in  elem  ||     in  elem) : parentNode : legend ", "external/sizzle/dist/sizzle.min.js": "", "external/sizzle/dist/sizzle.min.map": "", "package.json": "qunitjs 1.23.1 requirejs 2.2.0 sinon 1.17.3 sizzle 2.3. sizzle 2.3. strip-json-comments 2.0.1 testswarm 1.1.0 ", "count": 4}},
{"dictionary": {"external/sizzle/dist/sizzle.js": "!  * Sizzle CSS Selector Engine v2.3.  * Sizzle CSS Selector Engine v2.3.  * https://sizzlejs.com/  *  * Copyright jQuery Foundation and other contributors  * Released under the MIT license  * http://jquery.org/license  *  * Date: 2016-  * Date: 2016-   function window  CSS string/identifier serialization  https://drafts.csswg.org/cssom/#common-serializing-idioms =   ( - ) - g =   ( - ) - g fcssescape = function ch asCodePoint if  *       true for :disabled; false for :enabled   function createDisabledPseudo disabled  Known :disabled false positives:  IE: *[disabled]:not(button, input, select, textarea, optgroup, option, menuitem, fieldset)  not IE: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable  Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable return function elem  Check form elements and option elements for explicit disabling return label in && elem disabled === || form in && elem disabled === ||  Only certain elements can match :enabled or :disabled  https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled  https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled if form in  Check for inherited disabledness on relevant non-disabled elements:  * listed form-associated elements in a disabled fieldset    https://html.spec.whatwg.org/multipage/forms.html#category-listed    https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled  * option elements in a disabled optgroup    https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled  All such elements have a \"form\" property. if elem parentNode && elem disabled === false  Option elements defer to a parent optgroup if present if label in if label in elem parentNode return elem parentNode disabled === else return elem disabled ===  Check non-disabled form elements for fieldset[disabled] ancestors form in && elem disabled === false &&  Support: IE6-11+  Ancestry is covered for us elem isDisabled === ||  Support: IE 6 - 11  Use the isDisabled shortcut property to check for disabled fieldset ancestors return elem isDisabled === ||  Otherwise, assume any non-<option> under fieldset[disabled] is disabled  jshint -W018  elem isDisabled !== ! && label in || ! disabledAncestor !==  Where there is no isDisabled, check manually  jshint -W018  elem isDisabled !== ! && disabledAncestor === return elem disabled ===  Try to winnow out elements that can't be disabled before trusting the disabled property.  Some victims get caught in our net (label, legend, menu, track), but it shouldn't  even exist on them, let alone have a boolean value. else if label in return elem disabled ===  Remaining elements are neither :enabled nor :disabled return false return ! document getElementsByName || ! document getElementsByName length  ID   and   ID   and  if support getById Expr find ID = function id context if typeof context getElementById !== undefined && var = context getElementById return ? : Expr filter ID = function id var = id replace return function elem return elem getAttribute id === Expr find ID = function id context if typeof context getElementById !== undefined && var = context getElementById return ? : else  Support: IE6/7  getElementById is not reliable as a find shortcut delete Expr find ID Expr filter ID = function id var = id replace return function elem return && node value ===  Support: IE 6 - 7 only  getElementById is not reliable as a find shortcut Expr find ID = function id context if typeof context getElementById !== undefined && var = context getElementById if  Verify the id attribute = elem getAttributeNode id if && node value === return  Fall back on getElementsByName = context getElementsByName = 0 while = ++ = elem getAttributeNode id if && node value === return return  Tag return matcher return false :  Check against all ancestor/preceding elements return false  Reduce context if the leading compound selector is an ID = 0 = 0 slice 0 if tokens length > 2 && = 0 type === ID && support getById && context nodeType === 9 && && Expr relative 1 type context nodeType === 9 && && Expr relative 1 type = Expr find ID token matches 0 replace || 0 if ! ", "count": 1}},
{"dictionary": {"src/ajax.js": "var =   %20 g =   # rts =   ( )_= rantiCache =   ( )_= =   ( ): ( ) mg  #7653, #8125, #8152: local protocol detection delete s data  Add anti-cache   if needed  Add  anti-cache   if needed if s cache === false = cacheURL replace rts = cacheURL replace rantiCache = rquery test ? & : ? + _= + ++ + ", "test/unit/ajax.js": "generic ajaxTest jQuery.ajax() - cache 12 function assert var =   _=( )(& ) g ajaxTest jQuery.ajax() - cache 28 function assert var =   _=( )(& ) g = data/text.php function request url title return : : false beforeSend : function var  URL sanity check assert equal this url indexOf 0 root url not mangled:  + this url assert equal   test this url false parameter delimiters in order while = re exec this url assert strictEqual undefined + : only one 'no-cache' parameter = 1 return request data/text.php no parameter no query request + ? empty query request ?pizza=true rootUrl  +   ?pizza=true 1 parameter request ?_=tobereplaced555 rootUrl  +   ?_=tobereplaced555 _= parameter request ?pizza=true&_=tobereplaced555 rootUrl  +   ?pizza=true&_=tobereplaced555 1 parameter and _= request ?_=tobereplaced555&tv=false rootUrl  +   ?_=tobereplaced555&tv=false _= and 1 parameter request ?name=David&_=tobereplaced555&washere=true rootUrl  +   ?name=David&_=tobereplaced555&washere=true 2 parameters surrounding _= ", "count": 2}},
{"dictionary": {"src/ajax.js": "define ./core ./var/document ./var/ ./var/ ./ajax/var/location ./ajax/var/nonce ./ajax/var/rquery ./event/trigger ./deferred ./serialize  jQuery.param function jQuery document rnotwhite location nonce rquery function jQuery document rnothtmlwhite location nonce rquery use strict var = 0 = dataTypeExpression toLowerCase match rnotwhite || = dataTypeExpression toLowerCase match rnothtmlwhite || if jQuery isFunction s type = options method || options type || s method || s type  Extract dataTypes list s dataTypes = s dataType || * toLowerCase match rnotwhite || s dataTypes = s dataType || * toLowerCase match rnothtmlwhite ||  A cross-domain request is in order when the origin doesn't match the current origin. if s crossDomain == null ", "src/ajax/load.js": "define ../core ../core/stripAndCollapse ../core/parseHTML ../ajax ../traversing ../manipulation ../selector function jQuery function jQuery ,  stripAndCollapse use strict = url indexOf   if > - 1 = jQuery . trim url slice = stripAndCollapse url slice = url slice 0 ", "src/attributes/attr.js": "../core ../core/access ./support ../var/ ../var/ ../selector function jQuery access support rnotwhite function jQuery access support rnothtmlwhite use strict removeAttr : function elem value var = 0 = && value match  Attribute names can contain non-HTML whitespace characters  https://html.spec.whatwg.org/multipage/syntax.html#attributes-2 = && value match if && elem nodeType === 1 while = ++ ", "src/attributes/classes.js": "define ../core ../var/rnotwhite ../core/stripAndCollapse ../var/rnothtmlwhite ../data/var/dataPriv ../core/init function jQuery rnotwhite dataPriv function jQuery stripAndCollapse ,  rnothtmlwhite dataPriv use strict var =   g function getClass elem return elem getAttribute && elem getAttribute class || if typeof === string && = value match rnotwhite || = value match rnothtmlwhite || while = this ++ = getClass = elem nodeType === 1 &&   + +   replace   = elem nodeType === 1 &&   + stripAndCollapse +   if = 0  Only assign if different to avoid unneeded rendering. = jQuery . trim = stripAndCollapse if !== elem setAttribute class if typeof === string && = value match rnotwhite || = value match rnothtmlwhite || while = this ++ = getClass  This expression is here for better compressibility (see addClass) = elem nodeType === 1 &&   + +   replace   = elem nodeType === 1 &&   + stripAndCollapse +   if = 0  Only assign if different to avoid unneeded rendering. = jQuery . trim = stripAndCollapse if !== elem setAttribute class  Toggle individual class names = 0 = jQuery this = value match rnotwhite || = value match rnothtmlwhite || while = ++ =   + +   while = this ++ if elem nodeType === 1 &&   + getClass +   replace   indexOf > - 1 return true   + stripAndCollapse getClass +   indexOf > - 1 return true ", "src/attributes/val.js": "define ../core ../core/stripAndCollapse ./support ../core/init function jQuery support function jQuery stripAndCollapse ,  support use strict var =   g =   g var =   g jQuery fn extend val : function value  option.text throws exceptions (#14686, #14858)  Strip and collapse whitespace  https://html.spec.whatwg.org/#strip-and-collapse-whitespace jQuery . trim jQuery text  ). replace ( rspaces,  stripAndCollapse jQuery text : ", "src/callbacks.js": "define ./core ./var/ function jQuery rnotwhite ./var/ function jQuery rnothtmlwhite use strict  Convert String-formatted options into Object-formatted ones function createOptions options var = jQuery each options match rnotwhite || function _ flag jQuery each options match rnothtmlwhite || function _ flag = true return ", "src/core/stripAndCollapse.js": "define function use strict  Strip and collapse whitespace according to HTML spec  https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace var =   g stripAndCollapse = function value return   + +   replace   slice 1 - 1 return ", "src/data/Data.js": "define ../core ../var/ ../var/ ./var/acceptData function jQuery rnotwhite acceptData function jQuery rnothtmlwhite acceptData use strict  Otherwise, create an array by matching non-whitespace = in ? : key match rnotwhite || key match rnothtmlwhite || = key length ", "src/effects.js": "./core ./var/document ./var/rcssNum ./var/ ./var/ ./css/var/cssExpand ./css/var/isHiddenWithinTree ./css/var/swap ./manipulation ./css ./effects/Tween function jQuery document rcssNum rnotwhite cssExpand isHiddenWithinTree swap function jQuery document rcssNum rnothtmlwhite cssExpand isHiddenWithinTree swap adjustCSS dataPriv showHide use strict = = * else = props match rnotwhite = props match rnothtmlwhite var ", "src/event.js": "./core ./var/document ./var/documentElement ./var/ ./var/ ./var/slice ./data/var/dataPriv ./core/init ./selector function jQuery document documentElement rnotwhite slice dataPriv function jQuery document documentElement rnothtmlwhite slice dataPriv use strict  Handle multiple events separated by a space = || match rnotwhite || = || match rnothtmlwhite || = types length while -- = rtypenamespace exec ||  Once for each type.namespace in types; type may be omitted = || match rnotwhite || = || match rnothtmlwhite || = types length while -- = rtypenamespace exec || ", "src/var/rnothtmlwhite.js": "define function use strict  Only count HTML whitespace  Other whitespace should count in values  https://html.spec.whatwg.org/multipage/infrastructure.html#space-character return   g ", "src/var/rnotwhite.js": "", "test/data/test3.html": "div class user div div class teacher div div id superuser div div id whitespace\\xA0 div ", "test/unit/ajax.js": " Selector should be trimmed to avoid leading spaces (#14773)  Selector should include any valid non-HTML whitespace (#3003) QUnit test jQuery.fn.load( URL_SELECTOR with non-HTML whitespace(#3003) ) function assert assert expect 1 var = assert async jQuery #first load data/test3.html   #whitespace xA0  function assert strictEqual jQuery this children div length 1 Verify that specific elements were injected done QUnit asyncTest jQuery.fn.load( String, Function ) - simple: inject text into DOM 2 function assert jQuery #first load url data/name.html function assert ok   ERROR test jQuery #first text Check if content was injected into the DOM ", "count": 14}},
{"dictionary": {"external/sizzle/dist/sizzle.js": "!  * Sizzle CSS Selector Engine v2.3.  * Sizzle CSS Selector Engine v2.3.  * https://sizzlejs.com/  *  * Copyright jQuery Foundation and other contributors ", "external/sizzle/dist/sizzle.min.js": "", "package.json": "qunitjs 1.23.1 requirejs 2.2.0 sinon 1.17.3 sizzle 2.3. sizzle 2.3. strip-json-comments 2.0.1 testswarm 1.1.0 ", "count": 3}},
{"dictionary": {".eslintrc \u2192 .eslintrc.json": "", "dist/.eslintrc \u2192 dist/.eslintrc.json": "extends : ../src/.eslintrc rules :  That is okay for the built version no-multiple-empty-lines : off ", "src/.eslintrc \u2192 src/.eslintrc.json": "", "src/core.js": " global Symbol   Defining this global in .eslintrc would create a danger of using the global  Defining this global in .eslintrc  would create a danger of using the global  unguarded in another place, it seems safer to define global only for this module define ", "test/.eslintrc \u2192 test/.eslintrc.json": "", "test/node_smoke_tests/.eslintrc \u2192 test/node_smoke_tests/.eslintrc.json": "env : es6 : true extends : ../../.eslintrc root : true ", "test/promises_aplus_adapters/.eslintrc": "", "test/promises_aplus_adapters/.eslintrc.json": "extends : ../../.eslintrc.json root : true ", "count": 8}},
{"dictionary": {"src/event.js": "handlers : function event handlers var matches handleObj var handleObj matchedHandlers, matchedSelectors = = handlers delegateCount = event target  Support: IE <=9  Find delegate handlers  Black-hole SVG <use> instance trees (#13180)  Support: Firefox <=42  Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343) if && cur nodeType && event type !== click || isNaN event button || event button < 1 if &&  Support: IE <=9  Black-hole SVG <use> instance trees (trac-13180) cur nodeType &&  Support: Firefox <=42  Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)  https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click  Support: IE 11 only  ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343) ! event type === click && event button >= 1 for !== this = cur parentNode || this  Don't check non-elements (#13208)  Don't process clicks on disabled elements (#6911, #8165, #11382, #11764) if cur nodeType === 1 && cur disabled !== true || event type !== click = if cur nodeType === 1 && ! event type === click && cur disabled === true = = for = 0 < ++ =  Don't conflict with Object.prototype properties (#13203) = handleObj selector +   if matches === undefined matches = handleObj needsContext ? if matchedSelectors === undefined matchedSelectors = handleObj needsContext ? jQuery this index > - 1 : jQuery find this null length if matches matches push if matchedSelectors matchedHandlers push if matches length handlerQueue push : : matches if matchedHandlers length handlerQueue push : : matchedHandlers  Add the remaining (directly-bound) handlers = this if < handlers length handlerQueue push : this : handlers slice handlerQueue push : cur : handlers slice return ", "count": 1}},
{"dictionary": {".mailmap": "", "count": 1}},
{"dictionary": {".gitignore": "* .json ", ".npmignore": ".json ", "Gruntfile.js": " See https://github.com/sindresorhus/grunt-eslint/issues/119 : true : dist/jquery.js : src/**/*.js Gruntfile.js test/**/*.js build/**/*.js  We have to explicitly declare \"src\" property otherwise \"newer\"  task wouldn't work properly :/ : : dist/jquery.js : : src/**/*.js Gruntfile.js test/**/*.js build/**/*.js : : : : <%= eslint.dev %> : <%= eslint.dev  %> : dev : grunt registerTask lint jsonlint runIfNewNode eslint:dev runIfNewNode eslint:dist runIfNewNode eslint grunt registerTask test_fast runIfNewNode node_smoke_tests grunt registerTask lint:newer newer:jsonlint runIfNewNode newer:eslint grunt registerTask test test_fast concat runIfNewNode promises_aplus_tests grunt registerTask test:fast runIfNewNode node_smoke_tests grunt registerTask test:slow runIfNewNode promises_aplus_tests grunt registerTask test test:fast test:slow  Short list as a high frequency watch task grunt registerTask dev \t build:*:* \t runIfNewNode newer:eslint:dev \t uglify \t remove_map_comment \t dist:* ] build:*:* runIfNewNode newer:eslint:dev uglify remove_map_comment dist:* , ]  grunt registerTask default dev runIfNewNode eslint:dev build:*:* uglify remove_map_comment dist:* runIfNewNode eslint:dist compare_size grunt registerTask precommit_lint newer:jsonlint runIfNewNode newer:eslint:dev runIfNewNode newer:eslint:dist ", "dist/.eslintrc": "the  ", "package.json": "scripts build npm install && grunt start grunt watch test grunt && grunt test precommit grunt  test grunt && grunt test precommit grunt  commitmsg node node_modules/commitplease commitplease ", "count": 5}},
{"dictionary": {"Gruntfile.js": " See https://github.com/sindresorhus/grunt-eslint/issues/119 : true : . : dist/jquery.js : src/**/*.js Gruntfile.js test/**/*.js build/**/*.js grunt registerTask lint jsonlint runIfNewNode eslint:all runIfNewNode eslint:dev runIfNewNode eslint:dist grunt registerTask test_fast runIfNewNode node_smoke_tests grunt registerTask precommit_lint newer:jsonlint runIfNewNode newer:eslint:all runIfNewNode newer:eslint:dev runIfNewNode newer:eslint:dist ", "count": 1}},
{"dictionary": {"package.json": "dependencies devDependencies babel-preset-es2015 6.6.0 commitplease 2. .1 commitplease 2. .1 core-js 2.2.2 cross-spawn 2.2.3 eslint-config-jquery 1.0.0 build npm install && grunt start grunt watch test grunt && grunt test precommit grunt precommit_lint precommit grunt precommit_lint commitmsg node node_modules/commitplease commitplease nohook true components Docs Tests Serialize Traversing Wrap markerPattern ^((clos|fix|resolv)(e[sd]|ing))|(refs?) ticketPattern ^((Closes|Fixes) ([a-zA-Z]{2,}-)[0-9]+)|(Refs? [^#]) ", "count": 1}},
{"dictionary": {"package.json": "grunt-compare-size 0.4.2 grunt-contrib-uglify 1.0.1 grunt-contrib-watch 1.0.0 grunt-eslint .0.0 grunt-eslint .0.0 grunt-git-authors 3.2.0 grunt-jsonlint 1.0.7 grunt-newer 1.2.0 ", "count": 1}},
{"dictionary": {"build/tasks/build.js": " Avoid breaking semicolons inserted by r.js : true : : 0 replace   eslint : 0 replace   eslint : globals replace \t\t\t\t\t ExcludeStart ExcludeEnd ig ", "src/wrapper.js": "eslint-disable no-unused-vars eslint-disable no-unused-vars !  * jQuery JavaScript Library v@VERSION  * https://jquery.com/ ", "count": 2}},
{"dictionary": {"Gruntfile.js": "var = require fs = require gzip-js =   v0 test process version  Skip jsdom-related tests in Node.js 0.10 & 0.12 = ! v0 test process version  Support: Node.js <4  Skip running tasks that dropped support for Node.js 0.10 & 0.12  in those Node versions. function runIfNewNode task return ? print_old_node_message: + : if ! grunt option filename grunt option filename jquery.js  Load grunt tasks from NPM packages require load-grunt-tasks  Support: Node.js <4  Don't load the eslint task in old Node.js, it won't parse. require load-grunt-tasks : ? grunt-* !grunt-eslint : grunt-*  Integrate jQuery specific tasks grunt loadTasks build/tasks grunt registerTask lint jsonlint eslint:all grunt registerTask print_old_node_message function var = slice call arguments join : grunt log writeln Old Node.js detected, running the task  + +  skipped...  Don't run Node-related tests in Node.js < 1.0.0 as they require an old  jsdom version that needs compiling, making it harder for people to compile  jQuery on Windows. (see gh-2519) grunt registerTask test_fast ? node_smoke_tests : grunt registerTask lint jsonlint runIfNewNode eslint:all grunt registerTask test_fast runIfNewNode node_smoke_tests grunt registerTask test test_fast concat runJsdomTests  ?  [  promises_aplus_tests ]  :  [ [  runIfNewNode (  promises_aplus_tests )   Short list as a high frequency watch task grunt registerTask dev build:*:* newer:eslint:dev runIfNewNode (  newer:eslint:dev  ) uglify remove_map_comment dist:* grunt registerTask default dev eslint:dist test_fast compare_size grunt registerTask precommit_lint newer:jsonlint newer:eslint:all grunt registerTask default dev runIfNewNode eslint:dist test_fast compare_size grunt registerTask precommit_lint newer:jsonlint runIfNewNode newer:eslint:all ", "count": 1}},
{"dictionary": {"package.json": "grunt-compare-size 0.4.2 grunt-contrib-uglify 1.0.1 grunt-contrib-watch 1.0.0 grunt-eslint .0.0 grunt-eslint .0.0 grunt-git-authors 3.2.0 grunt-jsonlint 1.0.7 grunt-newer 1.2.0 ", "count": 1}},
{"dictionary": {".eslintrc": "", "dist/.eslintrc": "", "package.json": "grunt-compare-size 0.4.2 grunt-contrib-uglify 1.0.1 grunt-contrib-watch 1.0.0 grunt-eslint .0 grunt-eslint .0 grunt-git-authors 3.2.0 grunt-jsonlint 1.0.7 grunt-newer 1.2.0 ", "src/attributes/prop.js": " on the option  The getter ensures a default option is selected  when in an optgroup  eslint rule \"no-unused-expressions\" is disabled for this code  since it considers such accessions noop if ! support optSelected jQuery propHooks selected = get : function elem  eslint no-unused-expressions: \"off\"  var = elem parentNode if && parent parentNode parent parentNode selectedIndex return null set : function elem  eslint no-unused-expressions: \"off\"  var = elem parentNode if parent selectedIndex ", "src/css/showHide.js": "return = doc body appendChild doc createElement , = doc body appendChild doc createElement ; = jQuery css display temp parentNode removeChild ", "test/unit/core.js": "= jQuery extend true foo : 4 foo : new MyNumber 5 assert ok parseInt ret foo 10 === 5 Wrapped numbers copy correctly = jQuery extend xnumber2 : null assert ok xnumber2 === null Check to make sure null values are copied ", "test/unit/manipulation.js": "assert strictEqual $el html replaceWith( + + ) $el html <b/> children replaceWith function return assert strictEqual $el html replaceWith(function returning  + + ) $el html <i/> children replaceWith function i i;  return $el html <i/> children replaceWith function i return assert strictEqual $el html replaceWith(other function returning  + + ) $el html <p/> children replaceWith function i return ? ", "count": 7}},
{"dictionary": {".eslintignore": "dist/jquery * ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.1. -pre version 3.1. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3. -pre version 3. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {".gitignore": "", "Gruntfile.js": ": true : . : dist/jquery.js : src/**/*.js Gruntfile.js test/**/*.js build/**/*.js : grunt registerTask default dev test_fast compare_size grunt registerTask default dev ,  test_fast compare_size grunt registerTask precommit_lint newer:jsonlint newer:eslint:all ", "package.json": "commitplease 2.3.1 core-js 2.2.2 cross-spawn 2.2.3 eslint-config-jquery 0.1. eslint-config-jquery 0.1. grunt 1.0.1 grunt-babel 6.0.0 grunt-cli 1.2.0 ", "count": 3}},
{"dictionary": {".eslintrc": "", "dist/.eslintrc": "", "package.json": "commitplease 2.3.1 core-js 2.2.2 cross-spawn 2.2.3 eslint-config-jquery eslint-config-jquery grunt 1.0.1 grunt-babel 6.0.0 grunt-cli 1.2.0 ", "src/attributes/prop.js": " Use proper attribute retrieval(#12072) var = jQuery find attr tabindex return ? parseInt 10 : if return parseInt 10 if rfocusable test elem nodeName || rclickable test elem nodeName && elem href ? 0 : - 1 rclickable test elem nodeName && elem href return 0 return - 1 ", "src/attributes/val.js": "= elem value return   typeof  ret  ===   string   ? \t ret . replace ( rreturn,   )  : string \t\t\t\t if  (  typeof  ret  ===    ) { return   ret . replace ( rreturn,   ); } \t  Handle cases where value is null/undef or number \t == null ? :  Handle cases where value is null/undef or number return   == null ? : return : get : function elem var var  i, = elem options = elem selectedIndex = elem type === select-one = ? null : = ? + 1 : options length = < 0 ? : ? : 0 = ? + 1 : options length if < 0 = else = ? : 0  Loop through all the selected options for < ++ ", "src/core.js": " Get the Nth element in the matched element set OR  Get the whole matched element set as a clean array get : function num return != null ?  Return just the one element from the set < 0 ? this + this length : this :  Return all the elements in a clean array if == null return slice call this \t  Return   the  \t slice . call (  this  )  Return   the  return  num  <   0   ?   this [ num  +   this . length  ]  :   this [ num ]  Take an array of elements and push it onto the stack ", "src/core/access.js": "return ? : if return  Gets if return fn call  Gets ? fn call : ? fn 0 : return ? fn 0 : return ", "src/css.js": "function augmentWidthOrHeight elem name extra isBorderBox styles var = === ? border : content ?  If we already have the right measurement, avoid augmentation 4 : var = 0  Otherwise initialize for horizontal or vertical properties === width ? 1 : 0  If we already have the right measurement, avoid augmentation if === ? border : content = 4 = 0  Otherwise initialize for horizontal or vertical properties else = === width ? 1 : 0 for < 4 += 2 ", "src/data.js": "var =   (?: ) =   g function getData data if === true return true if === false return false if === null return null  Only convert to a number if it doesn't change the string if === + + return + if rbrace test return JSON parse return function dataAttr elem key data var if typeof === string try = === true ? true : === false ? false : === null ? null :  Only convert to a number if it doesn't change the string + + === ? + : rbrace test ? JSON parse : = getData catch  Make sure we set the data so it isn't changed later ", "src/effects.js": "opt duration = 0 else opt duration = typeof opt duration === number ? opt duration : opt duration in jQuery fx speeds ? jQuery fx speeds opt duration : jQuery fx speeds _default if typeof opt duration !== number if opt duration in jQuery fx speeds opt duration = jQuery fx speeds opt duration else opt duration = jQuery fx speeds _default  Normalize opt.queue - true/undefined/null -> \"fx\" ", "src/event.js": " Add which for click: 1 === left; 2 === middle; 3 === right if ! event which && !== undefined && rmouseEvent test event type return & 1 ? 1 : & 2 ? 3 : & 4 ? 2 : 0 if & 1 return 1 if & 2 return 3 if & 4 return 2 return 0 return event which ", "src/manipulation/getAll.js": " Support: IE <=9 - 11 only  Use typeof to avoid zero-argument method invocation on host objects (#15151) var = typeof context getElementsByTagName !== undefined ? context getElementsByTagName || * : typeof context querySelectorAll !== undefined ? context querySelectorAll || * : return === undefined || && jQuery nodeName ? jQuery merge : var if typeof context getElementsByTagName !== undefined = context getElementsByTagName || * else if typeof context querySelectorAll !== undefined = context querySelectorAll || * else = if === undefined || && jQuery nodeName return jQuery merge return return ", "src/serialize.js": "map function i elem var = jQuery this val return == null ? null : jQuery isArray ? jQuery map function val return : elem name : val replace : : elem name : val replace if == null return null if jQuery isArray return jQuery map function val return : elem name : val replace return : elem name : val replace get ", "src/traversing/findFilter.js": "= :not( + + ) return elems length === 1 && elem nodeType === 1 ? jQuery find matchesSelector ? : : jQuery find matches jQuery grep function elem return elem nodeType === 1 if elems length === 1 && elem nodeType === 1 return jQuery find matchesSelector ? : return jQuery find matches jQuery grep function elem return elem nodeType === 1 jQuery fn extend ", "test/.eslintrc": "", "count": 15}},
{"dictionary": {"package.json": "name jquery title jQuery description JavaScript library for DOM operations version 3.0. -pre version 3.0. -pre main dist/jquery.js homepage https://jquery.com author ", "count": 1}},
{"dictionary": {"build/tasks/promises_aplus_tests.js": "var = require ./lib/spawn_test.js grunt registerTask promises_aplus_tests grunt registerTask function grunt registerTask function spawnTest this async ./node_modules/.bin/promises-aplus-tests test/ .js test/ .js grunt registerTask function grunt registerTask function spawnTest this async ./node_modules/.bin/promises-aplus-tests test/ .js test/ .js ", "test/node_smoke_tests/.eslintrc": "", "test/promises_aplus_adapters/.eslintrc": "", "test/promises_aplus_adapter_deferred.js \u2192 test/promises_aplus_adapters/deferred.js": " jshint node: true  use strict require jsdom env function errors window return var = require .. window var = require .. window exports deferred = function module . exports deferred = function var = jQuery Deferred return ", "test/promises_aplus_adapter_when.js \u2192 test/promises_aplus_adapters/when.js": " jshint node: true  use strict require jsdom env function errors window return var = require .. window var = require .. window exports deferred = function module . exports deferred = function var = resolve : function ", "count": 5}},
{"dictionary": {"src/event.js": ": true : true : true : true : true : true : true : true ", "count": 1}},
{"dictionary": {".eslintignore": "", ".eslintrc": "", ".gitignore": "/jquery* ", ".jshintignore": "", "Gruntfile.js": " Integrate jQuery specific tasks grunt loadTasks build/tasks grunt registerTask lint jsonlint grunt registerTask lint jsonlint ,   Don't run Node-related tests in Node.js < 1.0.0 as they require an old  jsdom version that needs compiling, making it harder for people to compile  Short list as a high frequency watch task grunt registerTask dev build:*:* newer:eslint:dev uglify remove_map_comment dist:* grunt registerTask default dev test_fast compare_size grunt registerTask precommit_lint newer:jsonlint grunt registerTask precommit_lint newer:jsonlint ,  ", "build/.eslintrc": "", "build/release.js": "Release define : true : github \t\t * Ensure the repo is in a proper state before release \t\t *      \t\t  checkRepoState : function callback ensureSizzle \t\t * Set the version in the src folder for distributing AMD \t\t  = contents replace   @VERSION g Release newVersion fs writeFileSync utf8 \t\t * Generates any release artifacts that should be included in the release. \t\t * The callback must be invoked with an array of files that should be Release _setSrcVersion callback \t\t * Acts as insertion point for restoring Release.dir.repo \t\t * It was changed to reuse npm publish code in jquery-release Release dir repo = Release dir origRepo || Release dir repo return npmTags \t\t * Publish to distribution repo and npm \t\t *      ", "build/tasks/build.js": " Avoid breaking semicolons inserted by r.js : true : : 0 replace       : 0 replace       : globals replace \t\t\t\t\t ExcludeStart ExcludeEnd ig  Convert var modules if   var test path replace process cwd = replace   define return var  +   var ( ) exec 1 +  = replace \t\t\t\t\t define return var  +   var ( ) exec 1 +  = replace  Sizzle treatment = = = grunt config pkg.version \t\t\t * Recursively calls the excluder to remove on all modules in the list \t\t\t *      \t\t\t * Adds the specified module to the excluded or included list, depending on the flag \t\t\t *       A module path relative to ", "build/tasks/lib/spawn_test.js": " jshint node: true  use strict  Run Node with provided parameters: the first one being the Grunt on close function code done === 0   ", "dist/.eslintrc": "", "package.json": "commitplease 2.3.1 core-js 2.2.2 cross-spawn 2.2.3 eslint-config-jquery 0.1.2 grunt 1.0.1 grunt-babel 6.0.0 grunt-cli 1.2.0 ", "src/.eslintrc": "", "src/ajax.js": ": true : true : application/x-www-form-urlencoded; charset=UTF-8 \t\ttimeout: 0, \t\tdata: null, ", "src/attributes/val.js": "while -- =  eslint-disable no-cond-assign  if option selected = jQuery inArray jQuery valHooks option get > - 1 = true  eslint-enable no-cond-assign   Force browsers to behave consistently when non-matching value is set ", "count": 14}},
{"dictionary": {"src/core/ready.js": "define ../core ../var/document ../core/readyException ../deferred function jQuery document jQuery fn ready = function fn readyList then then  Wrap jQuery.readyException in a function so that the lookup  happens at the time of error handling instead of callback  registration. catch function error jQuery readyException return this ", "src/core/readyException.js": "define ../core function jQuery use strict jQuery readyException = function error window setTimeout function throw ", "test/unit/core.js": "QUnit module core : QUnit module core setup : function this sandbox = sinon sandbox create teardown : function this sandbox restore return moduleTeardown apply this arguments QUnit test Basic requirements function assert assert expect 7 assert ok true The browser doesn't support Symbols jQuery Deferred ? test : skip jQuery.readyException (original) function assert assert expect 1 var this sandbox stub window setTimeout function fn try fn catch = error message jQuery function throw new Error Error in jQuery ready assert strictEqual Error in jQuery ready The error should have been thrown in a timeout jQuery Deferred ? test : skip jQuery.readyException (custom) function assert assert expect 1 var = assert async this sandbox stub readyException function error assert strictEqual error message Error in jQuery ready The custom jQuery.readyException should have been called done jQuery function throw new Error Error in jQuery ready ", "count": 3}},
{"dictionary": {".eslintignore": "", ".eslintrc": "", ".jscsrc": "", ".jshintrc": "", ".npmignore": "jshintignore jshintrc eslintignore eslintrc ", "Gruntfile.js": "var = require fs = require gzip-js = readOptionalJSON src/.jshintrc  Skip jsdom-related tests in Node.js 0.10 & 0.12 = ! v0 test process version : package.json : : : src/**/*.js Gruntfile.js test/**/*.js build/**/*.js : : true : :  See https://github.com/sindresorhus/grunt-eslint/issues/119 : true : : dist/jquery.js : : : src : Gruntfile.js  Check parts of tests that pass : test/data/testrunner.js test/unit/animation.js test/unit/basic.js test/unit/support.js test/unit/tween.js test/unit/wrap.js : build : . : src/**/*.js Gruntfile.js test/**/*.js build/**/*.js : : : : <%=   %> : <%=   %> : dev :  Integrate jQuery specific tasks grunt loadTasks build/tasks grunt registerTask lint jsonlint ,  ,  grunt registerTask lint jsonlint  Don't run Node-related tests in Node.js < 1.0.0 as they require an old  jsdom version that needs compiling, making it harder for people to compile  Short list as a high frequency watch task grunt registerTask dev build:*:* lint uglify remove_map_comment dist:* grunt registerTask dev build:*:* uglify remove_map_comment dist:* grunt registerTask default dev test_fast compare_size grunt registerTask precommit_lint newer:jsonlint ,  ,  grunt registerTask precommit_lint newer:jsonlint ", "build/.eslintrc": "", "package.json": "grunt-babel 6.0.0 grunt-cli 1.2.0 grunt-compare-size 0.4.2 grunt-contrib-jshint 1.0.0 grunt-contrib-uglify 1.0.1 grunt-contrib-watch 1.0.0 grunt-eslint 18.1.0 grunt-git-authors 3.2.0 grunt-jscs 2.8.0 grunt-jsonlint 1.0.7 grunt-newer 1.2.0 grunt-npmcopy 0.1.0 ", "src/.eslintrc": "", "src/.jshintrc": "", "count": 10}},
{"dictionary": {"src/deferred.js": "resolve resolve resolve deferred notify deferred notifyWith ", "test/unit/deferred.js": "QUnit test jQuery.Deferred - resolved to a notifying deferred function assert assert expect 2 var = jQuery Deferred = assert async 2 deferred resolve jQuery Deferred function notifyingDeferred notifyingDeferred notify foo bar notifyingDeferred resolve baz quux  Apply an empty then to force thenable unwrapping.  See https://github.com/jquery/jquery/issues/3000 for more info. deferred then then function assert deepEqual slice call arguments baz quux The fulfilled handler receives proper params done null function assert deepEqual slice call arguments foo bar The progress handler receives proper params done QUnit test jQuery.when(nonThenable) - like Promise.resolve function assert use strict ", "count": 2}},
{"dictionary": {"src/attributes/attr.js": "var = || jQuery find attr = function elem name isXML var var = name toLowerCase if !  Avoid an infinite loop by temporarily removing this function from the getter = name name = = lowercaseName lowercaseName = = getter != null ? name . toLowerCase () : lowercaseName : null name = lowercaseName = return ", "test/unit/attributes.js": "assert ok ! elem hasClass awesome SVG element ( + this + ) toggles the class off QUnit test non-lowercase boolean attribute getters should not crash function assert assert expect 3 var = jQuery <input checked required autofocus type='checkbox'> jQuery each : Checked : requiRed : AUTOFOCUS function lowercased original try assert strictEqual elem attr The ' + this + ' attribute getter should return the lowercased name catch assert ok false The ' + this + ' attribute getter threw ", "count": 2}},
{"dictionary": {"src/attributes/attr.js": "return jQuery prop    are lowercase    are  lowercase  Grab necessary hook if one is defined if !== 1 || ! jQuery isXMLDoc = jQuery attrHooks name toLowerCase || ", "count": 1}},
{"dictionary": {"test/unit/attributes.js": "QUnit test attr - extending the boolean attrHandle function assert assert expect 1 var = false = jQuery expr attrHandle checked || $ noop = checked in jQuery expr attrHandle = jQuery expr attrHandle checked = || $ noop jQuery expr attrHandle checked = function = true _handle apply this arguments = false jQuery #qunit-fixture input attr checked assert ok The boolean attrHandle does not drop custom attrHandles if jQuery expr attrHandle checked = else delete jQuery expr attrHandle checked QUnit test attr(String, Object) - Loaded via XML document function assert ", "count": 1}},
{"dictionary": {"src/event.js": " Create target properties  Support: Safari <=6 - 7 only  Target should not be a text node (#504, #13143) this target = src target nodeType === 3 ? this target = src target   &&   src . target nodeType === 3 ? src target parentNode : src target ", "test/unit/event.js": "QUnit test jQuery.Event( src ) does not require a target property function assert assert expect 2 var event = jQuery Event : offtarget assert equal event type offtarget correct type assert equal event target undefined no target QUnit test preventDefault() on focusin does not throw exception function assert assert expect 1 ", "count": 2}},
{"dictionary": {".travis.yml": "0.10 0.12 4 5 6 ", "count": 1}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {".github/ISSUE_TEMPLATE.md": "  *  Which browsers are affected?   Provide a *minimal* test case, see https://webkit.org/test-case-reduction/   Use the latest shipping version of jQuery in your test case!   We prefer test cases on  ://jsbin.com or  ://jsfiddle.net   We prefer test cases on  ://jsbin.com or  ://jsfiddle.net Frequently Reported Issues:   * Selectors with '#' break: See https://github.com/jquery/jquery/issues/2824 ", "count": 1}},
{"dictionary": {".github/ISSUE_TEMPLATE.md": "  * Selectors with '#' break: See https://github.com/jquery/jquery/issues/2824 ** ** Description ** ** Link to test case  ", "count": 1}},
{"dictionary": {"build/release/dist.js": " These files are included with the distribution = src external/sizzle LICENSE.txt AUTHORS.txt package.json function copy  Copy dist files var = Release dir dist + /dist var = Release dir dist + /dist = Release dir dist + /external shell mkdir -p files forEach function file shell cp -f Release dir repo + / +  Copy Sizzle shell mkdir -p shell cp -rf Release dir repo + /external/sizzle  Copy other files extras forEach function file shell cp -rf Release dir repo + / + Release dir dist ", "count": 1}},
{"dictionary": {"test/data/testsuite.css": "div .nowidth 0 div .noheight 0 div .noopacity ", "count": 1}},
{"dictionary": {"src/deferred/exceptionHook.js": " Support: IE 8 - 9 only  Console exists when dev tools are open, which can happen at any time if window console && window console warn && && rerrorNames test error name window console warn jQuery.Deferred exception:  + error message window console warn jQuery.Deferred exception:  + error message error . stack ,  ", "test/unit/deferred.js": "catch  Test fails in IE9 but is skipped there because console is not active window console ? test : skip jQuery.Deferred.exceptionHook function assert assert expect 1 assert expect 2 var = assert async = jQuery Deferred = window console warn window console warn = function   msg   window console warn = function  Support: Chrome <=41 only  Some Chrome versions newer than 30 but older than 42 display the \"undefined is  not a function\" error, not mentioning the function name. This has been fixed  in Chrome 42. Relax this test there.  This affects our Android 5.0 & Yandex.Browser testing. var = false var = Array prototype join call arguments   = false if   chrome i test navigator userAgent = parseInt navigator userAgent match   chrome ( ) i 1 10 < 42 if assert ok   (?:barf undefined) test Message:  + assert ok   (?:barf undefined) test Message :  + else assert ok   barf test Message:  +  Should NOT get an error throw new Error Make me a sandwich then null jQuery noop then function then function barf jQuery thisDiesToo then null function window console warn = done defer resolve  Test fails in IE9 but is skipped there because console is not active window console ? test : skip jQuery.Deferred.exceptionHook with stack hooks function assert assert expect 2 return NO STACK FOR YOU window console warn = function   msg ,  stack   window console warn = function  Support: Chrome <=41 only  Some Chrome versions newer than 30 but older than 42 display the \"undefined is  not a function\" error, not mentioning the function name. This has been fixed  in Chrome 42. Relax this test there.  This affects our Android 5.0 & Yandex.Browser testing. var = false var = Array prototype join call arguments   = false if   chrome i test navigator userAgent = parseInt navigator userAgent match   chrome ( ) i 1 10 < 42 if assert ok   (?:cough_up_hairball undefined) test Function mentioned:  + assert ok   (?:cough_up_hairball undefined) test Function mentioned (weak assertion):  + else assert ok   cough_up_hairball test Function mentioned:  + assert ok   NO STACK FOR YOU test stack Stack trace included:  + stack assert ok   NO STACK FOR YOU test msg Stack trace included:  + msg defer then function jQuery cough_up_hairball ", "count": 2}},
{"dictionary": {"src/event.js": ": true : true : true : true : true : true : true : true : true : true : true : true : true which : function event var = event button ", "count": 1}},
{"dictionary": {"src/deferred.js": " Single- and empty arguments are adopted like Promise.resolve if <= 1 adoptValue master resolve master reject adoptValue master done (  updateFunc ( i ) ). resolve master reject  Use .then() to unwrap secondary thenables (cf. gh-3000) return master then if master state === pending || jQuery isFunction && then return master then  Multiple arguments are aggregated like Promise.all array elements while -- adoptValue updateFunc master reject return master promise ", "test/unit/deferred.js": "QUnit test jQuery.when(thenable) - like Promise.resolve function assert use strict assert expect 56 var = slice var CASES = 16 = slice = : explicit = jQuery Deferred notify true = jQuery Deferred notify true = jQuery Deferred resolve = jQuery Deferred resolve = : Promise resolve true : Promise reject false : jQuery Deferred resolve true : : jQuery Deferred resolve : : jQuery Deferred notify true : jQuery Deferred resolve foo bar : jQuery Deferred resolveWith true : jQuery Deferred resolveWith foo bar : jQuery Deferred reject false : : jQuery Deferred resolve : : jQuery Deferred notify true : jQuery Deferred reject baz quux : jQuery Deferred rejectWith false : jQuery Deferred rejectWith baz quux : true : true : true : true : foo bar : true : foo bar : false : false : false : false : baz quux : false : baz quux  Strict mode functions invoked without .call/.apply get global-object context = function getDefaultContext return this call = assert async 28 = assert async CASES * 2 assert expect CASES * 4 jQuery each function message value var = jQuery.when(  + +  ) setTimeout function eventuallyFulfilled resolve true eventuallyRejected reject false inputs eventuallySecondaryFulfilled resolve inputs eventuallySecondaryRejected resolve 50 assert ok false Error on resolve QUnit test jQuery.when(...) - opportunistically synchronous function assert assert expect 5 var = before = jQuery Deferred resolve true = jQuery Deferred reject false validate = function label return function assert equal before = assert async 5 jQuery when done validate jQuery.when() always jQuery when done validate jQuery.when(nonThenable) always jQuery when done validate jQuery.when(alreadyFulfilled) always jQuery when fail validate jQuery.when(alreadyRejected) always jQuery when always validate jQuery.when(alreadyFulfilled, alreadyRejected) always = after ", "count": 2}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {"src/event.js": "function var = this originalEvent this isDefaultPrevented = if if &&   ! this . isSimulated   e preventDefault this isPropagationStopped = if if &&   ! this . isSimulated   e stopPropagation this isImmediatePropagationStopped = if if &&   ! this . isSimulated   e stopImmediatePropagation ", "src/event/trigger.js": " Piggyback on a donor event to simulate a different one  Used only for `focus(in | out)` events simulate : function type elem event var = jQuery extend new jQuery.Event event : : true  Previously, `originalEvent: {}` was set here, so stopPropagation call  would not be triggered on donor event, since in our own  jQuery.event.stopPropagation function we had a check for existence of  originalEvent.stopPropagation method, so, consequently it would be a noop.  But now, this \"simulate\" function is used only for events  for which stopPropagation() is noop, so there is no need for that anymore.  For the compat branch though, guard for \"click\" and \"submit\"  events is still used, but was moved to jQuery.event.stopPropagation function  because `originalEvent` should point to the original event for the constancy  with other events and for more focused logic jQuery event trigger null if e isDefaultPrevented event preventDefault ", "test/unit/event.js": "jQuery #donor-input 0 click QUnit test native stop(Immediate)Propagation/preventDefault methods shouldn't be called function assert var = window navigator userAgent if !   firefox i test ||   safari i test assert expect 1 assert ok true Assertions should run only in Chrome, Safari, Fx & Edge return assert expect 3 var = var = <div id='donor-outer'> + <form id='donor-form'> + <input id='donor-input' type='radio' /> + </form> + </div> jQuery #qunit-fixture append var = jQuery #donor-outer on focusin function event checker prevent = sinon stub event originalEvent preventDefault event preventDefault on focusin function event checker simple = sinon stub event originalEvent stopPropagation event stopPropagation on focusin function event checker immediate = sinon stub event originalEvent stopImmediatePropagation event stopImmediatePropagation jQuery #donor-input trigger focus assert strictEqual checker simple called false assert strictEqual checker immediate called false assert strictEqual checker prevent called false  We need to \"off\" it, since yes QUnit always update the fixtures  but \"focus\" event listener is attached to document for focus(in | out)  event and document doesn't get cleared obviously :) outer off focusin QUnit test isSimulated property always exist on event object function assert var = window navigator userAgent if !   firefox i test ||   safari i test assert expect 1 assert ok true Assertions should run only in Chrome, Safari, Fx & Edge return assert expect 1 var = jQuery <input/> jQuery #qunit-fixture append element on focus function event assert notOk event isSimulated element trigger focus QUnit test originalEvent property for Chrome, Safari, Fx & Edge of simulated event function assert var = window navigator userAgent assert expect 4 var = assert async var = <div id='donor-outer'> + <form id='donor-form'> + </div> jQuery #qunit-fixture append var = jQuery #donor-outer jQuery #donor-outer on focusin function event assert ok true focusin bubbled to outer div assert equal event originalEvent type focus make sure originalEvent type is correct assert equal event type focusin make sure type is correct on focusin function event assert ok true focusin bubbled to outer div assert equal event originalEvent type focus make sure originalEvent type is correct assert equal event type focusin make sure type is correct jQuery #donor-input on focus function assert ok true got a focus event from the input done jQuery #donor-input trigger focus  We need to \"off\" it, since yes QUnit always update the fixtures  but \"focus\" event listener is attached to document for focus(in | out)  event and document doesn't get cleared obviously :) outer off focusin jQuery fn click ? test : skip trigger() shortcuts function assert assert expect 5 ", "count": 3}},
{"dictionary": {"src/event.js": "define ./core ./var/document ./var/documentElement ./var/rnotwhite ./var/slice ./data/var/dataPriv ./core/init ./selector function jQuery document rnotwhite slice dataPriv function jQuery document documentElement ,  rnotwhite slice dataPriv use strict = handleObjIn selector  If the selector is invalid, throw any exceptions at attach time  Ensure that invalid selectors throw exceptions at attach time  Evaluate against documentElement in case elem is a non-element node (e.g., document) if jQuery find ( selector, elem jQuery find . matchesSelector ( documentElement, selector  Make sure that the handler has a unique ID, used to find/remove it later ", "test/unit/event.js": "jQuery #qunit-fixture off click QUnit test Delegated events with malformed selectors ( 3071) function assert assert expect 2 QUnit test Delegated events with malformed selectors ( 3071) function assert assert expect 3 assert throws function   jQuery # on click :not function     null ,  malformed selector throws on attach assert throws function jQuery # on click :not function malformed selector throws on attach jQuery #qunit-fixture click assert ok true malformed selector does not throw on event assert throws function jQuery #foo on click nonexistent:not function short-circuitable malformed selector throws on attach jQuery #qunit-fixture off click jQuery #foo > :first-child click assert ok true malformed selector does not throw on event QUnit test Delegated events in forms (#10844; #11145; #8165; #11382, #11764) function assert ", "count": 2}},
{"dictionary": {"src/event.js": "= handleObjIn selector  If the selector is invalid, throw any exceptions at attach time if jQuery find  Make sure that the handler has a unique ID, used to find/remove it later if ! handler guid handler guid = jQuery guid ++ ", "test/unit/event.js": "jQuery #qunit-fixture off click QUnit test Delegated events with malformed selectors (#3071) function assert assert expect 2 assert throws function jQuery #qunit-fixture on click div:not function null malformed selector throws on attach jQuery #qunit-fixture click assert ok true malformed selector does not throw on event jQuery #qunit-fixture off click QUnit test Delegated events in forms (#10844; #11145; #8165; #11382, #11764) function assert assert expect 5 ", "count": 2}},
{"dictionary": {"src/event.js": ": true : true : true : true : true : true : true char : true return event which pageX : function event var  Calculate pageX if missing and clientX available if event pageX == null && event clientX != null = event target ownerDocument || document = eventDoc documentElement = eventDoc body return event clientX + && doc scrollLeft || && body scrollLeft || 0 - && doc clientLeft || && body clientLeft || 0 return event pageX pageY : function event var  Calculate pageY if missing and clientY available if event pageY == null && event clientY != null = event target ownerDocument || document = eventDoc documentElement = eventDoc body return event clientY + && doc scrollTop || && body scrollTop || 0 - && doc clientTop || && body clientTop || 0 return event pageY jQuery event addProp ", "count": 1}},
{"dictionary": {"build/release.js": "module exports dependencies = archiver@0.14.2 shelljs@0. shelljs@0. npm@2.3.0 chalk@1.1.1 ", "build/release/dist.js": " Copy dist files var = Release dir dist + /dist = Release dir dist + /external = Release dir dist + /external = concat README.md node_modules map function file return Release dir dist + / + shell config globOptions = :  Remove extraneous files before copy shell rm -rf Release dir dist + /**/* shell mkdir -p files forEach function file ", "count": 2}},
{"dictionary": {"test/unit/support.js": "radioValue : true reliableMarginLeft : true else if   (  safari i test else if   (  safari i test = ajax : true boxSizingReliable : true ", "count": 1}},
{"dictionary": {"Gruntfile.js": "grunt registerTask default dev test_fast compare_size grunt registerTask precommit_lint newer:jsonlint newer:jshint newer:jscs grunt registerTask precommit_lint newer:jsonlint newer:jshint newer:jscs ", "count": 1}},
{"dictionary": {"src/effects/Tween.js": "Tween propHooks _default get this run : function percent var = Tween propHooks this prop var = Tween propHooks this prop this pos = this options duration ? jQuery easing this easing : this now = this end - this start * this pos + this start if this options duration this pos = = jQuery easing this easing this options duration * 0 1 this options duration else this pos = = this now = this end - this start * + this start if this options step this options step call this elem this now this ", "test/unit/tween.js": "assert equal tween now 90 Calculated tween assert ok easingSpy calledWith 0.1 ...using jQuery.easing.linear assert ok easingSpy calledWith 0.1 0.1 * testOptions duration 0 1 testOptions duration ...using jQuery.easing.linear with back-compat arguments assert equal testObject test 90 Set value tween run 1 = 100 - jQuery easing swing 0.1 * 100 assert equal tween now Calculated tween assert ok easingSpy calledWith 0.1 ...using jQuery.easing.linear assert ok easingSpy calledWith 0.1 0.1 * testOptions duration 0 1 testOptions duration ...using jQuery.easing.linear with back-compat arguments assert equal parseFloat testElement style height toFixed 2 eased toFixed 2 Set value ", "count": 2}},
{"dictionary": {"test/unit/support.js": "radioValue : true reliableMarginLeft : true else if   9 ( ) safari i test else if   9( ) safari i test = ajax : true boxSizingReliable : true ", "count": 1}},
{"dictionary": {"src/event.js": "return  Includes some event props shared by KeyEvent and MouseEvent : altKey bubbles cancelable ctrlKey currentTarget detail eventPhase  + metaKey relatedTarget shiftKey target timeStamp view which split   : : : char charCode key keyCode split   filter : function event original  Add which for key events if event which == null event which = original charCode != null ? original charCode : original keyCode addProp : function name hook Object defineProperty jQuery Event prototype : true : true : jQuery isFunction ? function if this originalEvent return hook this originalEvent : function if this originalEvent return this originalEvent set : function value Object defineProperty this : true : true : true : return event : : button buttons clientX clientY offsetX offsetY pageX pageY  + screenX screenY toElement split   filter : function event original var = original button  Calculate pageX/Y if missing and clientX/Y available if event pageX == null && original clientX != null = event target ownerDocument || document = eventDoc documentElement = eventDoc body event pageX = original clientX + && doc scrollLeft || && body scrollLeft || 0 - && doc clientLeft || && body clientLeft || 0 event pageY = original clientY + && doc scrollTop || && body scrollTop || 0 - && doc clientTop || && body clientTop || 0  Add which for click: 1 === left; 2 === middle; 3 === right  Note: button is not normalized, so don't use it if ! event which && !== undefined event which = & 1 ? 1 : & 2 ? 3 : & 4 ? 2 : 0 return event fix : function event if event jQuery expando return event  Create a writable copy of the event object and normalize some properties var = event type = event = this fixHooks if ! this fixHooks = = rmouseEvent test ? this mouseHooks : rkeyEvent test ? this keyHooks : = fixHook props ? this props concat fixHook props : this props event = new jQuery.Event = copy length while -- = event =  Support: Safari <=6 - 7 only  Target should not be a text node (#504, #13143) if event target nodeType === 3 event target = event target parentNode return fixHook filter ? fixHook filter event : event fix : function originalEvent return jQuery expando ? : new jQuery.Event : :  Create target properties  Support: Safari <=6 - 7 only  Target should not be a text node (#504, #13143) this target = src target nodeType === 3 ? src target parentNode : src target this currentTarget = src currentTarget this relatedTarget = src relatedTarget  Event type else this type =  Includes all common event props including KeyEvent and MouseEvent specific props jQuery each : true : true : true : true : true : true : true : true : true char : true : true : true : true : true : true : true : true : true : true : true : true : true which : function event var = event button  Add which for key events if event which == null && rkeyEvent test event type return event charCode != null ? event charCode : event keyCode  Add which for click: 1 === left; 2 === middle; 3 === right if ! event which && !== undefined && rmouseEvent test event type return & 1 ? 1 : & 2 ? 3 : & 4 ? 2 : 0 return event which pageX : function event var  Calculate pageX if missing and clientX available if event pageX == null && event clientX != null = event target ownerDocument || document = eventDoc documentElement = eventDoc body return event clientX + && doc scrollLeft || && body scrollLeft || 0 - && doc clientLeft || && body clientLeft || 0 return event pageX pageY : function event var  Calculate pageY if missing and clientY available if event pageY == null && event clientY != null = event target ownerDocument || document = eventDoc documentElement = eventDoc body return event clientY + && doc scrollTop || && body scrollTop || 0 - && doc clientTop || && body clientTop || 0 return event pageY jQuery event addProp  Create mouseenter/leave events using mouseover/out and event-time checks  so that event delegation works in jQuery.  Do the same for pointerenter/pointerleave and pointerover/pointerout ", "test/unit/event.js": "$link off click remove QUnit test  extensions function assert QUnit test  extensions function assert assert expect 2  IE requires focusable elements to be visible, so append to body var = jQuery <input type='text' id='hook-fixture' /> appendTo body = jQuery event fixHooks click var = jQuery <div> appendTo #qunit-fixture  Ensure the property doesn't exist $fixture on click function event assert ok ! in event event.  does not exist assert ok ! in event event.  does not exist fireNative 0 click $fixture off click jQuery event fixHooks click = filter : function event event blurrinessLevel = 42 return event jQuery event addProp testProperty function return 42  Trigger a native click and ensure the property is set $fixture on click function event assert equal event blurrinessLevel 42 event. was  assert equal event testProperty 42 event. was  fireNative 0 click $fixture off click delete jQuery event fixHooks click $fixture off click remove jQuery event fixHooks click = $fixture remove QUnit test drag/drop events copy mouse-related event properties (gh-1925, gh-2009) function assert ", "count": 2}},
{"dictionary": {"src/ajax.js": "s type = options method || options type || s method || s type  Extract dataTypes list s dataTypes = jQuery . trim s dataType || * toLowerCase match || s dataTypes = s dataType || * toLowerCase match ||  A cross-domain request is in order when the origin doesn't match the current origin. if s crossDomain == null ", "count": 1}},
{"dictionary": {".github/ISSUE_TEMPLATE.md": "  Provide a *minimal* test case, see https://webkit.org/test-case-reduction/   Use the latest shipping version of jQuery in your test case!   We prefer test cases on http://jsbin.com or http://jsfiddle.net Frequently Reported Issues:   * Selectors with '#' break: See https://github.com/jquery/jquery/issues/2824 ", "count": 1}},
{"dictionary": {"build/tasks/promises_aplus_tests.js": "var = require ./lib/spawn_test.js grunt registerTask promises_aplus_tests function grunt registerTask promises_aplus_tests promises_aplus_tests_deferred promises_aplus_tests_when grunt registerTask promises_aplus_tests_deferred function spawnTest this async ./node_modules/.bin/promises-aplus-tests test/promises_aplus_adapter_deferred.js grunt registerTask promises_aplus_tests_when function spawnTest this async ./node_modules/.bin/promises-aplus-tests test/ .js test/ .js ", "src/deferred.js": "throw function adoptValue value resolve reject var try  Check for promise aspect first to privilege synchronous behavior if && jQuery isFunction = value promise method call done fail  Other thenables else if && jQuery isFunction = value then method call  Other non-thenables else  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context resolve call undefined  For Promises/A+, convert exceptions into rejections  Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in  Deferred#then to conditionally suppress rejection. catch jshint -W002   Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context reject call undefined jQuery extend Deferred : function func  Deferred helper when : function var  method, resolveContexts, \t\t\ti  =   0 , resolveValues  =   slice . call (  arguments  ), length = resolveValues length when : function   singleValue   var remaining = arguments length  the count of uncompleted subordinates =  count of unprocessed arguments =  subordinate fulfillment data = Array = slice call arguments  the master Deferred  the master Deferred = jQuery Deferred     updateFunc = function i return function value = this = arguments length > 1 ? slice call arguments : if ! -- master resolveWith resolveContexts length === 1 ? 0 : master resolveWith  Add listeners to promise-like subordinates; treat others as resolved if > 0 = new Array for < ++  jQuery.Deferred - treated specially to get resolve-sync behavior if && jQuery isFunction = promise method call done updateFunc fail master reject  Other thenables else if && jQuery isFunction = then method call updateFunc master reject else  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context updateFunc call undefined  Single- and empty arguments are adopted like Promise.resolve if <= 1 adoptValue master resolve master reject  If we're not waiting on anything, resolve the master else master resolveWith  Use .then() to unwrap secondary thenables (cf. gh-3000) return master then  Multiple arguments are aggregated like Promise.all array elements while -- adoptValue updateFunc master reject return master promise ", "test/promises_aplus_adapter.js \u2192 test/promises_aplus_adapter_deferred.js": "", "test/promises_aplus_adapter_when.js": " jshint node: true  use strict require jsdom env function errors window if console error return var = require .. window exports deferred = function var = resolve : function if ! = jQuery when apply arguments if adopted then promised resolve promised reject return reject : function value if ! = jQuery when jQuery Deferred reject if adopted then promised resolve promised reject return  A manually-constructed thenable that works even if calls precede resolve/reject : then : function if ! if ! = jQuery Deferred return promised then apply arguments return adopted then apply arguments return ", "count": 4}},
{"dictionary": {"build/tasks/build.js": ": true : : 0 replace   jshint    : + 1 : globals replace \t\t\t\t\t ExcludeStart ExcludeEnd ig + 1 : : ", "src/exports/global.js": " ExcludeStart   This file is included in a different way from all the others  so the \"use strict\" pragma is not needed.  jshint strict: false   ExcludeEnd  var  Map over jQuery in case of overwrite ", "count": 2}},
{"dictionary": {"test/unit/ajax.js": "ajaxTest jQuery.ajax() - traditional param encoding 4 function assert return : / : true : devo : hat answer : 42 quux : a space beforeSend : function xhr settings assert equal settings url /?devo=hat&answer=42&quux=a%20space Simple case return false : true : / : true : a : 1 2 3 b[] : b1 b2 beforeSend : function xhr settings assert equal settings url /?a=1&a=2&a=3&b%5B%5D=b1&b%5B%5D=b2 Arrays return false : true : / : true : a : 1 2 3 4 5 beforeSend : function xhr settings assert equal settings url /?a=1%2C2&a=3%2C4&a=5 Nested arrays return false : true : / : true : a : w x y z : false beforeSend : function xhr settings var = settings url replace   assert equal /?a=w&a=x%2Cy%2Cz&_= Cache-buster return false : true ajaxTest jQuery.ajax() - cross-domain detection 8 function assert function request url title crossDomainOrOptions return jQuery extend ", "test/unit/serialize.js": "QUnit module serialize : QUnit test jQuery.param() function assert assert expect 24 assert expect 23 var assert equal jQuery param true a=1&a=2&b=%5Bobject%20Object%5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy%20hat%3F huge structure = a : 0 1 2 3 4 5 6 b : 7 8 9 c : 10 : 11 12 13 e : f : g : 14 15 16 17 assert equal jQuery param true a=0&a=1%2C2&a=3%2C4%2C5%2C6&a=%5Bobject%20Object%5D&a=17 nested arrays (not possible when  traditional == true) assert equal jQuery param true a=0&a=1%2C2&a=3%2C4%2C5%2C6&a=%5Bobject%20Object%5D&a=17 nested arrays (not possible when traditional == true) = : 1 2 : : 3 : 4 5 : : 6 : 7 : 8 9 : true : false : undefined : 10 11 : true : false : undefined 0 : cowboy hat? assert equal decodeURIComponent jQuery param a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure, forced not traditional assert equal jQuery param test%5B%5D=1&test%5B%5D=2&test%5B%5D= object with array property with null value QUnit test jQuery.param() not affected by ajaxSettings function assert assert expect 1 var = jQuery ajaxSettings traditional jQuery ajaxSettings traditional = true assert equal jQuery param foo : a b c foo%5B%5D=a&foo%5B%5D=b&foo%5B%5D=c ajaxSettings.traditional is ignored jQuery ajaxSettings traditional = QUnit test jQuery.param() Constructed prop values function assert assert expect 4 ", "count": 2}},
{"dictionary": {"src/event.js": "dispatch : function event dispatch : function nativeEvent  Make a writable jQuery.Event from the native event object event = jQuery event fix event var   event = jQuery event fix nativeEvent var = = slice call arguments var = new Array arguments length = dataPriv get this events || event type || = jQuery event special event type ||  Use the fix-ed jQuery.Event rather than the (read-only) native event 0 = event for = 1 < arguments length ++ = arguments event delegateTarget = this  Call the preDispatch hook for the mapped type, and let it bail if desired ", "count": 1}},
{"dictionary": {"src/deferred.js": "master reject else updateFunc  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context updateFunc call undefined ", "test/unit/deferred.js": ": true = 49 = function use strict return this  Support: Android 4.0 only  Strict mode functions invoked without .call/.apply get global-object context = function use strict return this call QUnit stop ", "count": 2}},
{"dictionary": {"src/serialize.js": "encodeURIComponent == null ? :  Set traditional to true for jQuery <= 1.3.2 behavior. if === undefined = jQuery ajaxSettings && jQuery ajaxSettings traditional  If an array was passed in, assume that it is an array of form elements. if jQuery isArray || a jquery && ! jQuery isPlainObject ", "test/unit/serialize.js": "QUnit test jQuery.param() function assert assert expect 24 var assert equal ! jQuery ajaxSettings && jQuery ajaxSettings traditional true traditional flag, falsy by default var = foo : bar baz : 42 quux : All your base are belong to us assert equal jQuery param foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us simple  #7945 assert equal jQuery param jquery : 1.4.2 jquery=1.4.2 Check that object with a jQuery property get serialized correctly = : true if jQuery ajaxSettings jQuery ajaxSetup else jQuery ajaxSettings = = foo : bar baz : 42 quux : All your base are belong to us assert equal jQuery param foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us simple assert equal jQuery param ,  true foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us simple = someName : 1 2 3 regularThing : blah assert equal jQuery param someName=1&someName=2&someName=3&regularThing=blah with array assert equal jQuery param ,  true someName=1&someName=2&someName=3&regularThing=blah with array = foo : a b c assert equal jQuery param foo=a&foo=b&foo=c with array of strings assert equal jQuery param ,  true foo=a&foo=b&foo=c with array of strings = foo[] : baz 42 All your base are belong to us assert equal jQuery param foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us more array assert equal jQuery param ,  true foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us more array = foo[bar] : baz foo[beep] : 42 foo[quux] : All your base are belong to us assert equal jQuery param foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us even more arrays assert equal jQuery param ,  true foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us even more arrays = : 1 2 : : 3 : 4 5 : : 6 : 7 : 8 9 : true : false : undefined : 10 11 : true : false : undefined 0 : cowboy hat? assert equal jQuery param a=1&a=2&b=%5Bobject%20Object%5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy%20hat%3F huge structure assert equal jQuery param ,  true a=1&a=2&b=%5Bobject%20Object%5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy%20hat%3F huge structure = a : 0 1 2 3 4 5 6 b : 7 8 9 c : 10 : 11 12 13 e : f : g : 14 15 16 17 assert equal jQuery param a=0&a=1%2C2&a=3%2C4%2C5%2C6&a=%5Bobject%20Object%5D&a=17 nested arrays (not possible when jQuery.param.traditional == true) assert equal jQuery param ,  true a=0&a=1%2C2&a=3%2C4%2C5%2C6&a=%5Bobject%20Object%5D&a=17 nested arrays (not possible when jQuery.param.traditional == true) = : 1 2 : : 3 : 4 5 : : 6 : 7 : 8 9 : true : false : undefined : 10 11 : true : false : undefined 0 : cowboy hat? assert equal decodeURIComponent jQuery param ,  false a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure, forced not traditional assert equal decodeURIComponent jQuery param a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure, forced not traditional = param1 : null assert equal jQuery param ,  false param1= Make sure that null params aren't traversed. assert equal jQuery param param1= Make sure that null params aren't traversed. = : function : function return null assert equal jQuery param false param1=&param2= object with function property that returns null value = test : length : 3 foo : bar assert equal jQuery param ,  false test%5Blength%5D=3&test%5Bfoo%5D=bar Sub-object with a length property assert equal jQuery param test%5Blength%5D=3&test%5Bfoo%5D=bar Sub-object with a length property = test : 1 2 null assert equal jQuery param false test%5B%5D=1&test%5B%5D=2&test%5B%5D= object with array property with null value if jQuery ajaxSettings === delete jQuery ajaxSettings else jQuery ajaxSetup : false assert equal jQuery param test%5B%5D=1&test%5B%5D=2&test%5B%5D= object with array property with null value QUnit test jQuery.param() Constructed prop values function assert ", "count": 2}},
{"dictionary": {".travis.yml": "0.12 4 5 6 ", "count": 1}},
{"dictionary": {"src/css.js": "= elem getBoundingClientRect  Support: IE 11 only  In IE 11 fullscreen elements inside of an iframe have  100x too small dimensions (gh-1764). if document msFullscreenElement && window top !== window *= 100  Some non-html elements return undefined for offsetWidth, so check for null/undefined  svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285  MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668 ", "count": 1}},
{"dictionary": {"build/tasks/build.js": " Remove define wrappers, closure ends, and empty declarations = replace   define { replace   define { replace  Remove anything wrapped with ", "count": 1}},
{"dictionary": {"package.json": "grunt 1.0.1 grunt-babel 6.0.0 grunt-cli 1.2.0 grunt-compare-size 0.4. grunt-compare-size 0.4. grunt-contrib-jshint 1.0.0 grunt-contrib-uglify 1.0.1 grunt-contrib-watch 1.0.0 ", "count": 1}},
{"dictionary": {"package.json": "commitplease 2.3.1 core-js 2.2.2 cross-spawn 2.2.3 grunt grunt grunt-babel 6.0.0 grunt-cli 1.2.0 grunt-compare-size 0.4. grunt-compare-size 0.4. grunt-contrib-jshint 1.0.0 grunt-contrib-uglify 1.0.1 grunt-contrib-watch 1.0.0 ", "count": 1}},
{"dictionary": {"package.json": "commitplease 2.3.1 core-js 2.2.2 cross-spawn 2.2.3 grunt grunt grunt-babel 6.0.0 grunt-cli 1.2.0 grunt-compare-size 0.4.0 ", "count": 1}},
{"dictionary": {"Gruntfile.js": ": /*! jQuery v<%= pkg.version %> |  + (c) jQuery Foundation | jquery.org/license */ : if_return : false hoist_funs : false : false : false ", "src/css/support.js": "function jQuery document documentElement support function var = document createElement div = document createElement div  Finish early in limited (non-browser) environments if ! div style return  Support: IE <=9 - 11 only  Style of cloned element affects source element cloned (#8908) div style backgroundClip = content-box div cloneNode true style backgroundClip = support clearCloneStyle = div style backgroundClip === content-box container style cssText = border:0;width:8px;height:0;top:0;left:-9999px; + padding:0;margin-top:1px;position:absolute container appendChild  Executing both pixelPosition & boxSizingReliable tests require only one layout  so they're executed at the same time to save the second computation. = null var = document createElement div = document createElement div  Finish early in limited (non-browser) environments if ! div style return  Support: IE <=9 - 11 only  Style of cloned element affects source element cloned (#8908) div style backgroundClip = content-box div cloneNode true style backgroundClip = support clearCloneStyle = div style backgroundClip === content-box container style cssText = border:0;width:8px;height:0;top:0;left:-9999px; + padding:0;margin-top:1px;position:absolute container appendChild jQuery extend pixelPosition : function computeStyleTests ", "count": 2}},
{"dictionary": {"test/unit/ready.js": "function var = jQuery when jQuery ready = Promise resolve jQuery ready = =  Bind to the ready event in every possible way. jQuery makeHandler a jQuery document ready makeHandler b jQuery ready then makeHandler c  Throw in   Throw in  jQuery function throwError 1  Throw two errors in a row jQuery function throwError 2 jQuery when jQuery ready done makeHandler c     jQuery makeHandler d jQuery document ready makeHandler e jQuery when (  jQuery . ready  ). done makeHandler f jQuery ready . then makeHandler f = order length === 0  This assumes that QUnit tests are run on DOM ready! QUnit test jQuery ready function assert assert expect 8 assert expect 10 assert ok Handlers bound to DOM ready should not execute before DOM ready  Ensure execution order. assert deepEqual a b c d e f Bound DOM ready handlers should execute in  order Bound DOM ready handlers should execute in  order  Ensure handler argument is correct. assert equal args a var = assert async jQuery makeHandler g jQuery document ready makeHandler h jQuery ready then makeHandler i window setTimeout function assert equal order shift g Event handler should execute immediately, but async assert equal args g Argument passed to fn in jQuery( fn ) should be jQuery assert equal order shift g Event handler should execute immediately, but async assert equal args g Argument passed to fn in jQuery( fn ) should be jQuery assert equal order shift h Event handler should execute immediately, but async assert equal order shift h Event handler should execute immediately, but async assert equal args h Argument passed to fn in jQuery(document).ready( fn ) should be jQuery assert equal order shift i Event handler should execute immediately, but async assert equal args h Argument passed to fn in jQuery.ready.then( fn ) should be jQuery done QUnit test jQuery.when(jQuery.ready) function assert assert expect 2 var = jQuery map new Array 2 function return assert async whenified then function assert ok jQuery isReady jQuery.when Deferred resolved done pop jQuery when jQuery ready then function assert ok jQuery isReady jQuery.when Deferred resolved done pop QUnit test Promise.resolve(jQuery.ready) function assert assert expect 2 var = jQuery map new Array 2 function return assert async ", "count": 1}},
{"dictionary": {"package.json": "license MIT dependencies devDependencies babel-preset-es2015 6. commitplease 2.3. core-js 2. cross-spawn 2. grunt babel-preset-es2015 6. commitplease 2.3. core-js 2. cross-spawn 2. grunt grunt-babel 6.0.0 grunt-cli grunt-cli grunt-compare-size 0.4.0 grunt-contrib-jshint 1.0.0 grunt-contrib-uglify grunt-contrib-watch grunt-git-authors 3. .0 grunt-contrib-uglify grunt-contrib-watch grunt-git-authors 3. .0 grunt-jscs 2.8.0 grunt-jsonlint 1.0.7 grunt-newer 1. grunt-newer 1. grunt-npmcopy 0.1.0 gzip-js 0.3.2 husky 0.11. insight 0. husky 0.11. insight 0. jsdom 5.6.1 load-grunt-tasks 3. .0 load-grunt-tasks 3. .0 native-promise-only 0.8.1 promises-aplus-tests 2.1.1 q 1.4.1 qunit-assert-step 1.0.3 qunitjs 1. requirejs 2. qunitjs 1. requirejs 2. sinon 1.17.3 sizzle 2.3.0 strip-json-comments 2.0. strip-json-comments 2.0. testswarm 1.1.0 scripts ", "count": 1}},
{"dictionary": {"Gruntfile.js": ": /*! jQuery v<%= pkg.version %> |  + (c) jQuery Foundation | jquery.org/license */ : if_return : false hoist_funs : false : false : false ", "count": 1}},
{"dictionary": {"src/offset.js": " Add offsetParent borders parentOffset top += jQuery css 0 borderTopWidth true parentOffset left += jQuery css 0 borderLeftWidth true = : parentOffset top + jQuery css 0 borderTopWidth true : parentOffset left + jQuery css 0 borderLeftWidth true  Subtract parent offsets and element margins ", "count": 1}},
{"dictionary": {".github/ISSUE_TEMPLATE.md": "Feature Requests:   Please read https://github.com/jquery/jquery/wiki/Adding-new-features   Most features should start as plugins outside of jQuery. Bug Reports:   Note that we only can fix bugs in the latest (1.x, 2.x, 3.x) versions of jQuery.   Briefly describe the issue you've encountered   *  What do you expect to happen?   *  What acually happens?   *  Which browsers are affected?   Provide a *minimal* test case, see https://webkit.org/test-case-reduction/   Use the latest shipping version of jQuery in your test case!   We prefer test cases on http://jsbin.com or http://jsfiddle.net ", ".github/PULL_REQUEST_TEMPLATE.md": "Summary ### Describe what this PR does. All but trivial changes (e.g. typos) should start with an issue. Mention the issue number here. Checklist ### `[x]` * * * * ", "count": 2}},
{"dictionary": {"README.md": "``` Load tests in an iframe ### `\"./data/\" + fileName + \".html\"` ```js ( fileName, testName, callback ); ``` Load tests in an iframe (window.iframeCallback) ### ```js ( jQueryFromIFrame, iFrameWindow, iFrameDocument ); ( testName, fileName,      (  ,  ,     ) { \t   } ); ``` Load tests in an iframe (window.iframeCallback) ### `\"./data/\" + fileName + \".html\"` `window.parent.iframeCallback` `window.parent.iframeCallback` `assert` `QUnit.test()` `jQuery` `window` `document` ```js ( testName, fileName, callback ); ``` ---------- ", "test/data/dimensions/documentLarge.html": "body div script src ../../jquery.js script script \t\t\t (  () { \t\t\t\t . . ( jQuery,  ,   ); \t\t\t} ); \t\t script div body html ", "test/data/offset/absolute.html": "\t\t\t\t\t ( ). ({ top   . , left   .  }); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/offset/body.html": "\t\t\t\t\t ( ). (  ( ). () ); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/offset/fixed.html": "\t\t\t\t\t ( ). (  ( ). () ); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/offset/relative.html": "\t\t\t\t\t ( ). ({ position   , top   . , left   .  }); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/offset/scroll.html": "\t\t\t\t\t ( ). (  ( ). () ); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/offset/static.html": "\t\t\t\t\t ( ). ({ position   , top   . , left   .  }); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/offset/table.html": "\t\t\t\t\t ( ). (  ( ). () ); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t . . ( jQuery,  ,   ); \t\t\t}); \t\t script head ", "test/data/selector/html5_selector.html": "\t\t . ( ); \t\t . ( ); \t\t . ( ); \t\t (  () { \t\t\t . . ( jQuery,  ,   ); \t\t} ); \t script head body ", "test/data/selector/sizzle_cache.html": "div class test a href # id collision a div script \t\t (  () { \t\t\t . . ( jQuery,  ,   ); \t\t} ); \t script body html ", "test/data/testinit.js": "this testIframe = function fileName name fn QUnit test function assert var = assert async  load fixture in iframe var = loadFixture = iframe contentWindow = setInterval function if && win jQuery && win jQuery isReady clearInterval  call actual tests passing the correct jQuery instance to use fn call this win jQuery win document done document body removeChild = null 15 function loadFixture var = url ./data/ + + .html = jQuery <iframe /> appendTo body 0 iframe style cssText = width: 500px; height: 500px; position: absolute;  + top: -600px; left: -600px; visibility: hidden; iframe contentWindow location = return this testIframeWithCallback = function title fileName func QUnit test 1 function assert var ", "test/unit/dimensions.js": "testIframe dimensions/documentLarge testIframeWithCallback window vs. large document dimensions/documentLarge.html function jQuery window document assert assert expect 2 ", "test/unit/offset.js": "forceScroll detach : \tClosure-compiler will roll static methods off of the jQuery object and so they will \tnot be passed with the jQuery object across the windows. To differentiate this, the \ttestIframe callbacks use the \"$\" symbol to refer to the jQuery object passed from \tthe iframe window and the \"jQuery\" symbol is used to access any static methods. QUnit test empty set function assert assert expect 2 assert strictEqual jQuery offset undefined offset() returns undefined for empty set (#11962) assert equal result left 0 Retrieving offset on hidden elements returns zeros (gh-2310) testIframe absolute absolute function $ iframe document assert testIframeWithCallback absolute absolute function $ iframe document assert assert expect 4 var = iframe document testIframe absolute absolute function $ window document assert testIframeWithCallback absolute absolute function $ window document assert assert expect 178 var testIframe relative relative function $ window document assert testIframeWithCallback relative relative function $ window document assert assert expect 64  get offset testIframe static static function $ window document assert testIframeWithCallback static static function $ window document assert assert expect 80  get offset testIframe fixed fixed function $ window document assert testIframeWithCallback fixed fixed function $ window document assert assert expect 34 var testIframe table table function $ window document assert testIframeWithCallback table table function $ window document assert assert expect 4 assert equal $ #table-1 offset top 6 jQuery('#table-1').offset().top assert equal $ #th-1 offset left 10 jQuery('#th-1').offset().left testIframe scroll scroll function $ win doc assert testIframeWithCallback scroll scroll function $ win doc assert assert expect 26 assert equal $ #scroll-1 offset top 7 jQuery('#scroll-1').offset().top assert strictEqual $ scrollLeft undefined jQuery().scrollLeft() testing getter on empty jquery object testIframe body body function $ window document assert testIframeWithCallback body body function $ window document assert assert expect 4 assert equal $ body offset top 1 jQuery('#body').offset().top ", "test/unit/selector.js": "assert equal $opt is :selected true selected option testIframe selector/html5_selector testIframeWithCallback attributes - jQuery.attr selector/html5_selector.html function jQuery window document assert assert expect 38 assert strictEqual jQuery unique jQuery uniqueSort jQuery.unique() is an alias for jQuery.uniqueSort() testIframe selector/sizzle_cache testIframeWithCallback Sizzle cache collides with multiple Sizzles on a page selector/sizzle_cache.html function jQuery window document assert var = window $cached ", "count": 15}},
{"dictionary": {"src/css/showHide.js": "elem style display = if elem style display === && jQuery css display === none &&  Support: Firefox 43+  Don't set inline display on disconnected elements with computed display: none jQuery contains elem ownerDocument if elem style display === && isHiddenWithinTree = getDefaultDisplay else ", "src/css/var/isHiddenWithinTree.js": " css is assumed function jQuery  This function differs from the :hidden selector  in that it intentionally ignores hidden ancestors (gh-2404)  isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or  through the CSS cascade), which is useful in deciding whether or not to make it visible.  It differs from the :hidden selector (jQuery.expr.pseudos.hidden) in two important ways:  * A hidden ancestor does not force an element to be classified as hidden.  * Being disconnected from the document does not force an element to be classified as hidden.  These differences improve the behavior of .toggle() et al. when applied to elements that are  detached or contained within hidden ancestors (gh-2404, gh-2863). return function elem el  isHiddenWithinTree might be called from jQuery#filter function;  in that case, element will be second argument = || return jQuery css display === none || ! jQuery contains elem ownerDocument  Inline style trumps all return elem style display === none || elem style display === &&  Otherwise, check computed style  Support: Firefox <=43 - 45  Disconnected elements can have computed display: none, so first confirm that elem is  in the document. jQuery contains elem ownerDocument && jQuery css display === none ", "test/unit/css.js": "jQuery fn hide = jQuery find compile && jQuery fn toggle ? test : skip detached toggle() function assert assert expect 6 var = jQuery <p><a/><p> find * addBack = jQuery <p><a/></p> find * addBack css display none = jQuery <p><a/></p> find * addBack addClass hidden detached toggle detached appendTo #qunit-fixture assert equal 0 style display none detached element assert equal 1 style display none element in detached tree hiddenDetached toggle hiddenDetached appendTo #qunit-fixture assert equal 0 style display detached, hidden element assert equal 1 style display hidden element in detached tree cascadeHiddenDetached toggle cascadeHiddenDetached appendTo #qunit-fixture assert equal 0 style display none detached, cascade-hidden element assert equal 1 style display none cascade-hidden element in detached tree QUnit test jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) function assert assert expect 4 ", "test/unit/effects.js": "assert expect 20 var = this = : 1 : = : : fast 0.5 : fast : 1 : : show = : 1 : = jQuery <div/> = jQuery <div>test</div> = jQuery <div style='display: none;'/> assert expectJqData 0 olddisplay jQuery each methods function name opt jQuery each showMethods function name opt jQuery fn apply jQuery <div/> opt concat function assert strictEqual jQuery this css display . + +  block with null parentNode . + +  block under fragment jQuery each function name opt jQuery fn apply jQuery <div/> opt concat function assert strictEqual jQuery this css display none . + +  block with null parentNode jQuery fn apply jQuery <div>test</div> opt concat function assert strictEqual jQuery this css display none . + +  block under fragment clock tick 400 ", "count": 4}},
{"dictionary": {"src/.jshintrc": "immed : true noarg : true quotmark : double strict : true undef : true unused : true ", "src/ajax.js": "./serialize  jQuery.param function jQuery document rnotwhite location nonce rquery use strict var =   %20 g =   # ", "src/ajax/jsonp.js": "../ajax function jQuery nonce rquery use strict var = =   (=) (?=& ) ", "src/ajax/load.js": "../selector function jQuery use strict  * Load a url into a page   ", "src/ajax/parseXML.js": "../core function jQuery use strict  Cross-browser xml parsing jQuery parseXML = function data var ", "src/ajax/script.js": "../ajax function jQuery document use strict  Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432) jQuery ajaxPrefilter function s if s crossDomain ", "src/ajax/var/location.js": "define function use strict return window location ", "src/ajax/var/nonce.js": "define ../../core function jQuery use strict return jQuery now ", "src/ajax/var/rquery.js": "define function use strict return   ", "src/ajax/xhr.js": "../ajax function jQuery support use strict jQuery ajaxSettings xhr = function try return new window.XMLHttpRequest ", "src/attributes.js": "./attributes/val function jQuery use strict  Return jQuery for attributes-only inclusion return ", "src/attributes/attr.js": "../selector function jQuery access support rnotwhite use strict var = jQuery expr attrHandle ", "src/attributes/classes.js": "../core/init function jQuery rnotwhite dataPriv use strict var =   g function getClass elem ", "src/attributes/prop.js": "../selector function jQuery access support use strict var =   (?:input select textarea button) i =   (?:a area) i ", "src/attributes/support.js": "../var/support function document support use strict function var = document createElement input = document createElement select ", "src/attributes/val.js": "../core/init function jQuery support use strict var =   g =   g ", "src/callbacks.js": "./var/rnotwhite function jQuery rnotwhite use strict  Convert String-formatted options into Object-formatted ones function createOptions options var = ", "src/core.js": "class2type toString hasOwn fnToString ObjectFunctionString support DOMEval use strict var = @VERSION ", "src/core/DOMEval.js": "define ../var/document function document use strict function DOMEval code doc = || document ", "src/core/access.js": "../core function jQuery use strict  Multifunctional method to get and set values of a collection  The value/s can optionally be executed if it's a function var access = function elems fn key value chainable emptyGet raw ", "src/core/init.js": "../traversing/findFilter function jQuery document rsingleTag use strict  A central reference to the root jQuery(document) var ", "src/core/parseHTML.js": "./support function jQuery document rsingleTag buildFragment support use strict  Argument \"data\" should be string of html  context (optional): If specified, the fragment will be created in this context,  defaults to document ", "src/core/ready-no-deferred.js": "../var/document function jQuery document use strict var = = false whenReady = function fn ", "src/core/ready.js": "../deferred function jQuery document use strict  The deferred used on DOM ready var = jQuery Deferred ", "src/core/support.js": "../var/support function document support use strict  Support: Safari 8 only  In Safari 8 documents created via document.implementation.createHTMLDocument  collapse sibling forms: the second one becomes a child of the first one. ", "src/core/var/rsingleTag.js": "define function use strict  Match a standalone tag return   <( ) >(?:< > ) i ", "src/css.js": "function jQuery pnum access rmargin document rcssNum rnumnonpx cssExpand getStyles swap curCSS adjustCSS addGetHookIf support use strict var  Swappable if display is none or starts with table ", "src/css/addGetHookIf.js": "define function use strict function addGetHookIf conditionFn hookFn  Define the hook, we'll check on the first run if it's really needed. ", "src/css/adjustCSS.js": "../var/rcssNum function jQuery rcssNum use strict function adjustCSS elem prop valueParts tween var = 1 ", "src/css/curCSS.js": "../selector  Get jQuery.contains function jQuery rnumnonpx rmargin getStyles support use strict function curCSS elem name computed var = elem style ", "src/css/hiddenVisibleSelectors.js": "../selector function jQuery use strict jQuery expr pseudos hidden = function elem return ! jQuery expr pseudos visible ", "src/css/showHide.js": "../css/var/isHiddenWithinTree function jQuery dataPriv isHiddenWithinTree use strict var = function getDefaultDisplay elem ", "src/css/support.js": "../var/support function jQuery document documentElement support use strict function  Executing both pixelPosition & boxSizingReliable tests require only one layout ", "src/css/var/cssExpand.js": "define function use strict return Top Right Bottom Left ", "src/css/var/getStyles.js": "define function use strict return function elem  Support: IE <=11 only, Firefox <=30 (#15098, #14150) ", "src/css/var/isHiddenWithinTree.js": " css is assumed function jQuery use strict  isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or  through the CSS cascade), which is useful in deciding whether or not to make it visible. ", "src/css/var/rmargin.js": "define function use strict return   margin ", "src/css/var/rnumnonpx.js": "define ../../var/pnum function pnum use strict return new RegExp ^( + + )(?!px)[a-z%]+$ i ", "src/css/var/swap.js": "define function use strict  A method for quickly swapping in/out CSS properties to get correct calculations. return function elem options callback args var ", "src/data.js": "./data/var/dataUser function jQuery access dataPriv dataUser use strict \tImplementation Summary \t1. Enforce API surface and semantic compatibility with 1.9.x branch ", "src/data/Data.js": "./var/acceptData function jQuery rnotwhite acceptData use strict function Data this expando = jQuery expando + Data uid ++ ", "src/data/var/acceptData.js": "define function use strict  * Determines whether an object can have data   ", "src/data/var/dataPriv.js": "define ../Data function Data use strict return new Data ", "src/data/var/dataUser.js": "define ../Data function Data use strict return new Data ", "src/deferred/exceptionHook.js": "../deferred function jQuery use strict  These usually indicate a programmer mistake during development,  warn about them ASAP rather than swallowing them by default. var =   (Eval Internal Range Reference Syntax Type URI)Error ", "src/deprecated.js": "./core function jQuery use strict jQuery fn extend bind : function types data fn ", "src/dimensions.js": "./css function jQuery access use strict  Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods jQuery each : height : width function name type jQuery each : inner + : : outer + ", "count": 47}},
{"dictionary": {"test/unit/core.js": "assert equal jQuery isPlainObject Object Symbol false Symbol inside an object QUnit test isPlainObject(localStorage) function assert assert expect 1 assert equal jQuery isPlainObject false assign in Object ? test : skip isPlainObject(Object.assign(...)) function assert assert expect 1 ", "count": 1}},
{"dictionary": {"README.md": "``` Load tests in an iframe (window.iframeCallback) ### Run tests in an iframe ### ```js ( testName, fileName,      (  ,  ,     ) { ( testName, fileName,      (        ,  ,  ,  , \t  [     ] ) { \t   } ); ``` `\"./data/\" + fileName + \".html\"` `window.parent.iframeCallback` `window.parent.iframeCallback` `assert` `QUnit.test()` `jQuery` `window` `document` `\"./data/\" + fileName` `startIframeTest( [ additional args ] )` `window.onload` `testCallback` `assert` `testIframe` `jQuery` `window` `document` `startIframeTest` `document` ", "test/data/ajax/onunload.html": "meta http-equiv Content-type content text/html; charset=utf-8 title title script src ../../jquery.js script script src ../iframeTest.js script head body form id navigate action ../iframe.html form \t\t\t\t\tajaxStatus   status; \t\t\t\t} \t\t\t}); \t\t\t ( ajaxStatus ); \t\t\t ( ajaxStatus ); \t\t}); \t\t ( () { ", "test/data/ajax/unreleasedXHR.html": "meta http-equiv content-type content text/html; charset=utf-8 title title script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript .     () {}; ( () { \t ( () { \t\t  parent    . ; \t\t . ( ); \t\t (); \t\t (); \t},   ); \t  number    ; \t ( number  ) { ", "test/data/core/aliased.html": "\t\t}; \t script script src ../../jquery.js script script src ../iframeTest.js script head body form input type text id nodeName form script \t\t ( () { \t\t\t ( errors ); \t\t}); \t\t ( () { \t\t\t ( errors ); \t\t} ); \t script body html ", "test/data/core/cc_on.html": "\t\t}; \t script script src ../../jquery.js script script src ../iframeTest.js script head body script \t\t ( cc_on, errors  ); \t\t ( cc_on, errors ); \t script body html ", "test/data/core/dynamic_ready.html": "meta charset utf-8 script src ../../jquery.js script script  $j    . (); script script src ../iframeTest.js script head body iframe id dont_return src dont_return.php iframe \t\t\t (  () { \t\t\t\t ( timeoutId ); \t\t\t\t  (  timeoutFired ) { \t\t\t\t\t (   ); \t\t\t\t\t (   ); \t\t\t\t} \t\t\t}); \t\t}); \t\ttimeoutId    (  () { \t\t\ttimeoutFired    ; \t\t\t (   ); \t\t\t (   ); \t\t},  ); \t}); script ", "test/data/core/onready.html": "\t\t .     () { error    ; }; \t script script src ../../jquery.js script script src ../iframeTest.js script head body form script \t\t ( () { \t\t\t (  () { \t\t\t\t ( error ); \t\t\t\t ( error ); \t\t\t}); \t\t}); \t script ", "test/data/css/cssWidthBeforeDocReady.html": "body div id test div script src ../../jquery.js script script src ../iframeTest.js script script \t (  (   ). (   ) ); \t (  (   ). (   ) ); script body html ", "test/data/data/dataAttrs.html": "meta http-equiv Content-Type content text/html; charset=utf-8 title title script src ../../jquery.js script script src ../iframeTest.js script script \t\t ( (){ \t\t\t (  (   ). ().  ); \t\t\t (  (   ). ().  ); \t\t}); \t script head ", "test/data/dimensions/documentLarge.html": "\t\t\t :  ; \t\t} \t style script src ../iframeTest.js script head body div script src ../../jquery.js script script \t\t\t (  () { \t\t\t\t . . ( jQuery,  ,   ); \t\t\t} ); \t\t\t ( startIframeTest ); \t\t script div body ", "test/data/event/focusElem.html": "title title script src ../../jquery.js script script src ../iframeTest.js script head body a href # id frame-link a script \t\t (   ). (   ); \t\t (   ); \t\t (   ); \t script body html ", "test/data/event/focusinCrossFrame.html": "title title script src ../../jquery.js script script src ../iframeTest.js script head body input type text id frame-input script \t\t \t\t (   ). (  ,  () { \t\t\t ); \t\t\t ); \t\t}); \t script body ", "test/data/event/interactiveReady.html": "meta http-equiv content-type content text/html; charset=utf-8 title title script src ../../jquery.js script script src ../iframeTest.js script head body script type text/javascript (   () { \t (  ( ).      ); }); (   () { \t (  ( ).      ); } ); script  external resources that come before elements trick ", "test/data/event/promiseReady.html": "meta http-equiv content-type content text/html; charset=utf-8 title title script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript . (  .  ). ( () { \t ( ). ( ); \t (  ( ). ()     ); \t (  ( ). ()     ); }); script head ", "test/data/event/syncReady.html": "meta http-equiv content-type content text/html; charset=utf-8 title title script src ../../jquery.js script script src ../iframeTest.js script head body script type text/javascript (   ). (  () { \t (  ( ).      ); \t (  ( ).      ); }); script ", "test/data/event/triggerunload.html": "html script src ../../jquery.js script script src ../iframeTest.js script script \t\t  called    , \t\t\terror    ; \t\t\t   ; \t\t}). (  ,  (   ) { \t\t\t (   ). (   ); \t\t\t ( called    error ); \t\t\t ( called    error ); \t\t}); \t script html ", "test/data/iframeTest.js": "window startIframeTest = function var = Array prototype slice call arguments  Note: jQuery may be undefined if page did not load it args unshift window jQuery window document window parent iframeCallback apply null ", "test/data/manipulation/iframe-denied.html": "body div id qunit-fixture div script src ../../jquery.js script script src ../iframeTest.js script script \t\t\t  script    . (   )[   ], \t\t\t\tdiv    . (   ), \t\t\t\t\terror   e; \t\t\t\t} \t\t\t\t ({ \t\t\t\t ({ \t\t\t\t\tstatus  success, \t\t\t\t\tdescription     \t\t\t\t\t\t( error       error     ) ", "test/data/manipulation/scripts-context.html": "body div id qunit-fixture div script src ../../jquery.js script script src ../iframeTest.js script script \t\t\t . . ( \t\t\t\t , \t\t\t\t . , \t\t\t\t \t\t\t); \t\t\t (); \t\t script body html ", "test/data/offset/absolute.html": "\t\t\t  {  :  ; } \t\t style script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript charset utf-8 \t\t\t ( ( ) { \t\t\t\t ( ). ( () { \t\t\t\t\t ( ). ({ top   . , left   .  }); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t ); \t\t\t\t ); \t\t\t}); \t\t script head ", "test/data/offset/body.html": "\t\t\t  {  :  ;  :  ;  :  ; } \t\t style script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript charset utf-8 \t\t\t ( ( ) { \t\t\t\t ( ). ( () { \t\t\t\t\t ( ). (  ( ). () ); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t ); \t\t\t\t ); \t\t\t}); \t\t script head ", "test/data/offset/fixed.html": "\t\t\t  {  :  ;  :      ;  :  ;  :  ;  :  ; } \t\t style script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript charset utf-8 \t\t\t ( ( ) { \t\t\t\t . ( , ); \t\t\t\t ( ). ( () { \t\t\t\t\t ( ). (  ( ). () ); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t ); \t\t\t\t ); \t\t\t}); \t\t script head ", "test/data/offset/relative.html": "\t\t\t  {  :  ;  :      ;  :  ;  :  ;  :  ; } \t\t style script src ../../jquery.js script script src ../iframeTest.js script script type text/javascript charset utf-8 \t\t\t ( ( ) { \t\t\t\t ( ). ( () { \t\t\t\t\t ( ). ({ position   , top   . , left   .  }); \t\t\t\t\t   ; \t\t\t\t}); \t\t\t\t ); \t\t\t\t ); \t\t\t}); \t\t script head ", "count": 23}},
{"dictionary": {"src/serialize.js": "add = function key value  If value is a function, invoke it and return its value = jQuery isFunction ? value : == null ? : = jQuery isFunction ? value : if == null = s length = encodeURIComponent + = + encodeURIComponent ", "test/unit/serialize.js": "QUnit module serialize : QUnit test jQuery.param() function assert assert expect 23 assert expect 24 var = param1 : null assert equal jQuery param false param1= Make sure that null params aren't traversed. = : function : function return null assert equal jQuery param false param1=&param2= object with function property that returns null value = test : length : 3 foo : bar assert equal jQuery param false test%5Blength%5D=3&test%5Bfoo%5D=bar Sub-object with a length property ", "count": 2}},
{"dictionary": {"src/ajax/load.js": " If it fails, this function gets \"jqXHR\", \"status\", \"error\" always && function jqXHR status self each function callback apply self || jqXHR responseText callback apply this || jqXHR responseText ", "test/unit/ajax.js": "QUnit test jQuery#load() - should resolve with correct context 2 function assert var = assert async var = jQuery <p></p><p></p> var = 0 ps appendTo #qunit-fixture ps load data/ajax/method.php function assert strictEqual this ++ if === 2 done QUnit test #11402 - jQuery.domManip() - script in comments are properly evaluated 2 function assert ", "count": 2}},
{"dictionary": {"src/serialize.js": "jQuery param = function a traditional var = add = function key value add = function key valueOrFunction  If value is a function, invoke it and return its value = jQuery isFunction ? value : if == null = s length = encodeURIComponent + = + encodeURIComponent  If value is a function, invoke it and use its return value var = jQuery isFunction ? valueOrFunction : s length = encodeURIComponent + = + encodeURIComponent == null ? :  Set traditional to true for jQuery <= 1.3.2 behavior. ", "count": 1}},
{"dictionary": {"test/data/testinit.js": " Tests are always loaded async QUnit config autostart = false this loadTests = function  Leverage QUnit URL parsing to detect testSwarm environment and \"basic\" testing mode var  loadSwarm  = QUnit urlParams swarmURL + indexOf http === 0 , \t = QUnit urlParams module + === basic QUnit . isSwarm   = QUnit urlParams swarmURL + indexOf http === 0 ; QUnit . basicTests = QUnit urlParams module + === basic  Get testSubproject from testrunner first require data/testrunner.js function var = ++ if if ! || === 1 if ! QUnit . basicTests || === 1 require  Support: Android 2.3 only  Load the TestSwarm listener if swarmURL is in the address. if loadSwarm if QUnit . isSwarm require http://swarm.jquery.org/js/inject.js? + new Date getTime function QUnit start ", "test/unit/effects.js": "this clock tick 100 QUnit test stop() - several in queue function assert assert expect 5  In IE9 inside testswarm this test doesn't work properly function var = test var = jQuery #foo if QUnit isSwarm &&   msie 9 0 i test window navigator userAgent = skip $foo . hide (). css (  ,  800 QUnit[ type ](  ,  function (  assert  ) { \t assert . expect (  5 $foo animate width : show 400 linear $foo animate width : hide $foo animate width : show var = jQuery #foo this clock tick 1  default duration is 400ms, so 800px ensures we aren't 0 or 1 after 1ms $foo hide css width 800 jQuery fx tick assert equal $foo queue length 3 3 in the queue $foo animate width : show 400 linear $foo animate width : hide $foo animate width : show = $foo css width assert notEqual parseFloat 1 An animation occurred  + $foo stop this clock tick 1 assert equal $foo queue length 2 2 in the queue = $foo css width assert notEqual parseFloat 1 Stop didn't reset the animation  + jQuery fx tick assert equal $foo queue length 3 3 in the queue $foo stop true = $foo css width assert notEqual parseFloat 1 An animation occurred  + $foo stop assert equal $foo queue length 0 0 in the queue assert equal $foo queue length 2 2 in the queue = $foo css width assert notEqual parseFloat 1 Stop didn't reset the animation  + $foo stop true assert equal $foo queue length 0 0 in the queue QUnit test stop(clearQueue) function assert assert expect 4 ", "count": 2}},
{"dictionary": {"src/core/parseHTML.js": "= false  Stop scripts or inline event handlers from being executed immediately  by using document.implementation = || support createHTMLDocument ? document implementation createHTMLDocument : document var = rsingleTag exec = ! && var if !  Stop scripts or inline event handlers from being executed immediately  by using document.implementation if support createHTMLDocument = document implementation createHTMLDocument  Set the base href for the created document  so any parsed elements with URLs  are based on the document's URL (gh-2965) = context createElement base base href = document location href context head appendChild else = document = rsingleTag exec = ! &&  Single tag if ", "test/unit/core.js": "assert ok jQuery parseHTML <#if><tr><p>This is a test.</p></tr><#/if> || true Garbage input should not cause error QUnit test jQuery.parseHTML(<a href>) - gh-2965 function assert assert expect 1 var = <a href='test.html'></a> = jQuery parseHTML 0 href assert ok   test html test href is not lost after parsing anchor if jQuery support createHTMLDocument QUnit asyncTest jQuery.parseHTML function assert assert expect 1 ", "count": 2}},
{"dictionary": {"src/core.js": "define ./var/arr ./var/document ./var/getProto ./var/slice ./var/concat ./var/push ./var/indexOf ./var/class2type ./var/toString ./var/hasOwn ./var/fnToString ./var/ObjectFunctionString ./var/support ./core/DOMEval function arr document slice concat push indexOf class2type toString hasOwn support DOMEval function arr document getProto slice concat push indexOf class2type toString hasOwn fnToString ObjectFunctionString support DOMEval var = @VERSION isPlainObject : function obj var key var proto, Ctor  Not plain objects:  - Any object or value whose internal [[Class]] property is not \"[object Object]\"  - DOM nodes  - window if jQuery type !== object || obj nodeType || jQuery isWindow  Detect obvious negatives  Use toString instead of jQuery.type to catch host objects if ! || toString call !== [object Object] return false  Not own constructor property must be Object if obj constructor && ! hasOwn call constructor && ! hasOwn call obj constructor prototype || isPrototypeOf return false = getProto  Own properties are enumerated firstly, so to speed up,  if last one is own, then all properties are own for in  Objects with no prototype (e.g., `Object.create( null )`) are plain if ! return true return === undefined || hasOwn call  Objects with prototype are plain iff they were constructed by a global Object function = hasOwn call constructor && proto constructor return typeof === function && fnToString call === isEmptyObject : function obj ", "src/var/ObjectFunctionString.js": "define ./fnToString function fnToString return fnToString call Object ", "src/var/fnToString.js": "define ./hasOwn function hasOwn return hasOwn toString ", "src/var/getProto.js": "define function return Object getPrototypeOf ", "test/unit/core.js": "QUnit asyncTest isPlainObject function assert assert expect 22 assert expect 23 var fn = function constructor  foo :     = Object create assert ok ! jQuery isPlainObject isPlainObject(Object.create({})) assert ok ! jQuery isPlainObject Object.create({}) parentObj foo = bar assert ok ! jQuery isPlainObject Object.create({...}) childObj bar = foo assert ok ! jQuery isPlainObject (Object.create({ ) assert ok ! jQuery isPlainObject (Object.create({ )  Not objects shouldn't be matched assert ok ! jQuery isPlainObject string ", "count": 5}},
{"dictionary": {"Gruntfile.js": ": deferred : effects dimensions offset css/showHide : effects : : ajax effects queue core/ready : core/ready-no-deferred : css/hiddenVisibleSelectors effects/animatedSelector ", "build/tasks/build.js": "\t\t\t *  whether it should included or excluded \t\t\t  excluder = function flag var =   ( )( ) exec var =   ( )( ) exec = 1 === - module = 2 = module  Check removeWith list excludeList module if excludeList additional remove || if additional include = included concat additional include grunt log writeln + + additional include else grunt log error Module  + module +  is a minimum requirement. if module === selector ", "src/core/ready-no-deferred.js": "define ../core ../var/document function jQuery document var = = false whenReady = function fn readyCallbacks push executeReady = function fn  Prevent errors from freezing future callback execution (gh-1823)  Not backwards-compatible as this does not execute sync window setTimeout function fn call document jQuery fn ready = function fn whenReady return this jQuery extend  Is the DOM ready to be used? Set to true once it occurs. : false  A counter to track how many items to wait for before  the ready event fires. See #6781 : 1  Hold (or release) the ready event holdReady : function hold if jQuery readyWait ++ else jQuery ready true ready : function wait  Abort if there are pending holds or we're already ready if === true ? -- jQuery readyWait : jQuery isReady return  Remember that the DOM is ready jQuery isReady = true  If a normal DOM Ready event fired, decrement, and wait if need be if !== true && -- jQuery readyWait > 0 return whenReady = function fn readyCallbacks push if ! = true while readyCallbacks length = readyCallbacks shift if jQuery isFunction executeReady = false whenReady  Make jQuery.ready Promise consumable (gh-1778) jQuery ready then = jQuery fn ready  * The ready event handler and self cleanup method   function completed document removeEventListener DOMContentLoaded window removeEventListener load jQuery ready  Catch cases where $(document).ready() is called  after the browser event has already occurred.  Support: IE9-10 only  Older IE sometimes signals \"interactive\" too soon if document readyState === complete || document readyState !== loading && ! document documentElement doScroll  Handle it asynchronously to allow scripts the opportunity to delay ready window setTimeout jQuery ready else  Use the handy event callback document addEventListener DOMContentLoaded  A fallback to window.onload, that will always work window addEventListener load ", "src/core/ready.js": "function jQuery document  The deferred used on DOM ready var var   =   jQuery . Deferred () jQuery fn ready = function fn  Add the callback jQuery ready promise done readyList then return this  * The ready event handler and self cleanup method jQuery . ready . then   =   readyList . then ; function completed document removeEventListener DOMContentLoaded window removeEventListener load jQuery ready jQuery ready promise = function obj if ! = jQuery Deferred  Catch cases where $(document).ready() is called  after the browser event has already occurred.  Support: IE <=9 - 10 only  Older IE sometimes signals \"interactive\" too soon if document readyState === complete || document readyState !== loading && ! document documentElement doScroll  Catch cases where $(document).ready() is called  after the browser event has already occurred.  Support: IE <=9 - 10 only  Older IE sometimes signals \"interactive\" too soon if document readyState === complete || document readyState !== loading && ! document documentElement doScroll  Handle it asynchronously to allow scripts the opportunity to delay ready window setTimeout jQuery ready  Handle it asynchronously to allow scripts the opportunity to delay ready window setTimeout jQuery ready else else  Use the handy event callback document addEventListener DOMContentLoaded  Use the handy event callback document addEventListener DOMContentLoaded  A fallback to window.onload, that will always work window addEventListener load return readyList promise  Kick off the DOM ready check even if the user does not jQuery ready promise  A fallback to window.onload, that will always work window addEventListener load ", "test/unit/ready.js": "function var = Promise resolve jQuery ready = = function throwError num  Not a global QUnit failure var = window onerror window onerror = function window onerror = throw new Error Ready error  +  Bind to the ready event in every possible way. jQuery makeHandler a jQuery document ready makeHandler b  Throw in an error to ensure other callbacks are called jQuery function throwError 1  Throw two errors in a row jQuery function throwError 2 jQuery when jQuery ready done makeHandler c  Do it twice, just to be sure. jQuery makeHandler c jQuery document ready makeHandler d jQuery makeHandler d jQuery document ready makeHandler e jQuery when jQuery ready done makeHandler f = order length === 0 Handlers bound to DOM ready should not execute before DOM ready  Ensure execution order. assert deepEqual a b c d assert deepEqual a b c d ,  ,  Bound DOM ready handlers should execute in on-order  Ensure handler argument is correct. =  Now that the ready event has fired, again bind to the ready event  in every possible way. These event handlers should execute immediately.  Now that the ready event has fired, again bind to the ready event.  These ready handlers should execute asynchronously. var = assert async jQuery makeHandler g assert equal order pop g Event handler should execute immediately assert equal args g Argument passed to fn in jQuery( fn ) should be jQuery jQuery document ready makeHandler h assert equal order pop h Event handler should execute immediately assert equal args h Argument passed to fn in jQuery(document).ready( fn ) should be jQuery window setTimeout function assert equal order shift g Event handler should execute immediately, but async assert equal args g Argument passed to fn in jQuery( fn ) should be jQuery assert equal order shift h Event handler should execute immediately, but async assert equal args h Argument passed to fn in jQuery(document).ready( fn ) should be jQuery done QUnit test Promise.resolve(jQuery.ready) function assert assert expect 2 var = jQuery map new Array 2 function return assert async promisified then function assert ok jQuery isReady Native promised resolved done pop Promise resolve jQuery ready then function assert ok jQuery isReady Native promised resolved done pop QUnit test Error in ready callback does not halt all future executions (gh-1823) function assert assert expect 1 var = assert async jQuery function throwError 3 jQuery function assert ok true Subsequent handler called done ", "count": 5}},
{"dictionary": {"src/ajax.js": "if s crossDomain == null = document createElement a  Support: IE8-11+  IE throws exception if url is malformed, e.g. http://example.com:80x/  Support: IE <=8 - 11, Edge 12 - 13  IE throws exception on accessing the href property if url is malformed,  e.g. http://example.com:80x/ try urlAnchor href = s url  Support:   Support:   Anchor's host property isn't correctly set when s.url is relative urlAnchor href = urlAnchor href s crossDomain = originAnchor protocol + // + originAnchor host !== ", "src/attributes/support.js": " Default value for a checkbox should be \"on\" support checkOn = input value !==  Support: IE<=11  Support: IE <=11  Must access selectedIndex to make default options select support optSelected = opt selected  Support: IE<=11  Support: IE <=11  An input loses its value after becoming a radio = document createElement input input value = t ", "src/attributes/val.js": "return != null ? :  Support:   Support:   option.text throws exceptions (#14686, #14858)  Strip and collapse whitespace  https://html.spec.whatwg.org/#strip-and-collapse-whitespace ", "src/core.js": " Convert dashed to camelCase; used by the css and data modules  Support:   Support:   Microsoft forgot to hump their vendor prefix (#9572) camelCase : function string return string replace ms- replace ", "src/data.js": "= attrs length while --  Support:   Support:   The attrs elements can be null (#14894) if = name ", "src/effects.js": " Restrict \"overflow\" and \"display\" styles during box animations if && elem nodeType === 1  Support: IE 9 - 11  Support: IE  9 - 11  Record all 3 overflow attributes because IE does not infer the shorthand  from identically-valued overflowX and overflowY opts overflow = style overflow style overflowX style overflowY ", "src/manipulation.js": "var =   <(?!area br col embed hr img input link meta param)(( ) ) > gi  Support: IE  11, Edge   Support: IE  11, Edge   In IE/Edge using regex groups here causes severe slowdowns.  See https://connect.microsoft.com/IE/feedback/details/1736512/ =   <script <style <link i ", "src/offset.js": "return  Support: IE<=11  Support: IE <=11  Running getBoundingClientRect on a  disconnected node in IE throws an error if ! elem getClientRects length ", "count": 8}},
{"dictionary": {"build/tasks/build.js": ": src : jquery  Allow strict mode : true  We have multiple minify steps : none ", "src/deferred.js": "./callbacks function jQuery slice use strict function Identity v return fail newDefer reject else 0 + With this   ===  promise  ?   newDefer . promise ()  :   this this ? : arguments var = 0 function resolve depth deferred handler special return function var = this   ===  promise  ?   undefined   :   this var = this = arguments mightThrow = function var  Process the value(s)  Default process is resolve || deferred resolveWith || deferred promise || deferred resolveWith = deferred rejectWith || deferred promise deferred rejectWith  deferred.resolve = function() { deferred.resolveWith(...) }  deferred.reject = function() { deferred.rejectWith(...) } 0 = function 0 + With this === ? promise : this arguments 0 + With this === ? undefined : this arguments return this ", "src/wrapper.js": " Pass this if window is not defined yet typeof window !== undefined ? window : this function window noGlobal   Firefox    strict  ASP.NET    arguments.caller   \"use strict\";   Firefox    strict  ASP.NET   arguments. caller   use strict  @CODE  build.js inserts compiled jQuery here ", "test/unit/deferred.js": "assert ok jQuery isFunction defer pipe defer.pipe is a function createDeferred () resolve done function defer resolve done function assert ok true Success on resolve assert strictEqual this state resolved Deferred is resolved (state) assert strictEqual defer state resolved Deferred is resolved (state) fail function assert ok false Error on resolve always function assert ok true Always callback on resolve createDeferred reject done function = createDeferred defer reject done function assert ok false Success on reject fail function assert ok true Error on reject assert strictEqual this state rejected Deferred is rejected (state) assert strictEqual defer state rejected Deferred is rejected (state) always function assert ok true Always callback on reject QUnit test jQuery.Deferred.then - context function assert assert expect 7 assert expect 11 var = = jQuery map new Array 4 function return assert async =  custom :   true   = jQuery map new Array 5 function return assert async jQuery Deferred resolveWith 2 then function value assert strictEqual this custom context received by .then handler return * 3 done function value assert notStrictEqual this custom context not propagated through .then assert notStrictEqual this custom context not propagated through .then handler assert strictEqual 6 proper value received done pop call jQuery Deferred resolveWith 2 then done function value assert strictEqual this custom context propagated through .then without handler assert strictEqual 2 proper value received done pop call jQuery Deferred resolve then function assert strictEqual this window default context in .then handler return jQuery Deferred resolveWith done function assert strictEqual this defer resolve 2 piped done function value assert strictEqual this default context gets updated to latest promise in the chain assert strictEqual this window .then handler does not introduce context assert strictEqual 6 proper value received done pop call defer2 resolve 2 piped2 done function value assert strictEqual this default context updated to latest promise in the chain (without passing function) assert strictEqual this window .then without handler does not introduce context assert strictEqual 2 proper value received (without passing function) done pop call QUnit test [PIPE ONLY] jQuery.Deferred.pipe - context function assert assert expect 7 assert expect 11 var = = jQuery map new Array 4 function return assert async =  custom :   true   = jQuery map new Array 5 function return assert async jQuery Deferred resolveWith 2 pipe function value assert strictEqual this custom context received by .pipe handler return * 3 done function value assert strictEqual this [PIPE ONLY] custom context correctly propagated assert strictEqual this [PIPE ONLY] custom context propagated through .pipe handler assert strictEqual 6 proper value received done pop call jQuery Deferred resolveWith 2 pipe done function value assert strictEqual this [PIPE ONLY] custom context propagated through .pipe without handler assert strictEqual 2 proper value received done pop call jQuery Deferred resolve pipe function assert strictEqual this window default context in .pipe handler return jQuery Deferred resolveWith done function assert strictEqual this defer resolve 2 piped done function value assert strictEqual this default context gets updated to latest promise in the chain assert strictEqual this window .pipe handler does not introduce context assert strictEqual 6 proper value received done pop call defer2 resolve 2 piped2 done function value assert strictEqual this default context updated to latest promise in the chain (without passing function) assert strictEqual this window .pipe without handler does not introduce context assert strictEqual 2 proper value received (without passing function) done pop call : true : true = 49 = 49 = function use strict return this QUnit stop var = && = || = ? 1 1 : 0 undefined = jQuery.when(  + + ,  + +  ) = && jQuery isFunction defer1 promise ? defer1 promise : window = && jQuery isFunction defer2 promise ? defer2 promise : window = jQuery.when(  + + ,  + +  ) jQuery when done function a b if assert deepEqual +  => resolve assert strictEqual this 0 context1 +  =>  context OK assert strictEqual this 1 context2 +  =>  context OK assert strictEqual this 0 expectedContext +  => context  OK assert strictEqual this 1 expectedContext +  => context  OK else assert ok false +  => resolve ", "count": 4}},
{"dictionary": {"src/css/support.js": " Executing both pixelPosition & boxSizingReliable tests require only one layout  so they're executed at the same time to save the second computation. function computeStyleTests  This is a singleton, we need to execute it only once if ! return div style cssText = box-sizing:border-box; + position:relative;display:block; + var = window getComputedStyle = divStyle top !== 1%  Support: Android 4.0 - 4.3 only, Firefox <=3 - 44+ = divStyle marginLeft === 2px = divStyle width === 4px = divStyle marginRight === 4px documentElement removeChild  Nullify the div so it wouldn't be stored in the memory and  it will also be a sign that checks already performed = null jQuery extend pixelPosition : function  This test is executed only once but we still do memoizing  since we can use the boxSizingReliable pre-computing.  No need to check if the test was already performed, though. computeStyleTests return boxSizingReliable : function if == null computeStyleTests computeStyleTests return pixelMarginRight : function  Support: Android 4.0 - 4.3 only  We're checking for boxSizingReliableVal here instead of pixelMarginRightVal  since that compresses better and they're computed together anyway. if == null computeStyleTests computeStyleTests return reliableMarginLeft : function  Support: Android 4.0 - 4.3 only, Firefox <=3 - 44+ if == null computeStyleTests computeStyleTests return ", "count": 1}},
{"dictionary": {"src/attributes/val.js": "for < ++ =  Support: IE <=9 only  IE8-9 doesn't update selected after form reset (#2551) if option selected || === && ", "test/data/css/cssWidthBeforeDocReady.html": "meta charset utf-8 style \t\t  { \t\t\t :  ; \t\t\t :  ; \t\t\t :  ; \t\t\t :  ; ", "test/unit/css.js": "jQuery #foo css opacity : assert equal jQuery #foo css opacity 1 Assert opacity is 1 when set to an empty String assert equal jQuery #empty css opacity 0 Assert opacity is accessible assert equal jQuery #empty css opacity 0 Assert opacity is accessible jQuery #empty css opacity : 1 assert equal jQuery #empty css opacity 1 Assert opacity is taken from style attribute when set assert equal jQuery #empty css opacity 1 Assert opacity is taken from style attribute when set = jQuery #nothiddendiv = jQuery #nothiddendivchild assert expect 18 var old,  var = jQuery div.hidden assert equal jQuery css 0 display none hiddendiv is display: none <div id='show-tests'> + <div><p><a href='#'></a></p><code></code><pre></pre><span></span></div> + <table><thead><tr><th></th></tr></thead><tbody><tr><td></td></tr></tbody></table> + <ul><li></li></ul></div> + <table id='test-table'></table> <ul><li></li></ul></div> appendTo #qunit-fixture find * css display none = jQuery #test-table show css display !== table jQuery #test-table remove = div : block p : block a : inline code : inline pre : block span : inline table : old  ?     :   table thead : old  ?     :   table-header-group tbody : old  ?     :   table-row-group tr : old  ?     :   table-row th : old  ?     :   table-cell td : old  ?     :   table-cell table : table thead : table-header-group tbody : table-row-group tr : table-row th : table-cell td : table-cell ul : block li : old  ?     :   list-item li : list-item jQuery each function selector expected QUnit test css opacity consistency across browsers (#12685) function assert assert expect 4 assert expect 3 var = jQuery #qunit-fixture  Append style element jQuery <style>.  { opacity: 0.1 ; }</style> appendTo jQuery <style>.  { opacity: 0.1; }</style> appendTo = jQuery <div class=' '></div> appendTo = jQuery <div class=' '></div> appendTo assert equal Math round el css opacity * 100 10 opacity from style sheet (filter:alpha with spaces) el removeClass opacityWithSpaces_t12685 addClass opacityNoSpaces_t12685 assert equal Math round el css opacity * 100 20 opacity from style sheet (filter:alpha without spaces) assert equal Math round el css opacity * 100 10 opacity from style sheet el css opacity 0.3 assert equal Math round el css opacity * 100 30 override opacity el css opacity assert equal Math round el css opacity * 100 20 remove opacity override assert equal Math round el css opacity * 100 10 remove opacity override jQuery find compile ? test : skip :visible/:hidden selectors function assert ", "test/unit/effects.js": "QUnit test show() function assert assert expect 27 var old,  var = jQuery div.hidden assert equal jQuery css 0 display none hiddendiv is display: none <div id='show-tests'> + <div><p><a href='#'></a></p><code></code><pre></pre><span></span></div> + <table><thead><tr><th></th></tr></thead><tbody><tr><td></td></tr></tbody></table> + <ul><li></li></ul></div> + <table id='test-table'></table> <ul><li></li></ul></div> appendTo #qunit-fixture find * css display none = jQuery #test-table show css display !== table jQuery #test-table remove = div : block p : block a : inline code : inline pre : block span : inline table : old  ?     :   table thead : old  ?     :   table-header-group tbody : old  ?     :   table-row-group tr : old  ?     :   table-row th : old  ?     :   table-cell td : old  ?     :   table-cell table : table thead : table-header-group tbody : table-row-group tr : table-row th : table-cell td : table-cell ul : block li : old  ?     :   list-item li : list-item jQuery each function selector expected <div><p><a href='#'></a></p><code></code><pre></pre><span></span></div> + <table><thead><tr><th></th></tr></thead><tbody><tr><td></td></tr></tbody> + </table> + <ul><li></li></ul></div> + <table id='test-table'></table> <ul><li></li></ul></div> appendTo #qunit-fixture find * each var = jQuery #test-table show css display !== table jQuery #test-table remove  Note: inline elements are expected to be inline-block  because we're showing width/height  Can't animate width/height inline  See #14344 = var   = div : block p : block a : inline code : inline pre : block span : inline table : old  ?     :   table thead : old  ?     :   table-header-group tbody : old  ?     :   table-row-group tr : old  ?     :   table-row th : old  ?     :   table-cell td : old  ?     :   table-cell table : table thead : table-header-group tbody : table-row-group tr : table-row th : table-cell td : table-cell ul : block li : old  ?     :   list-item li : list-item jQuery each function selector QUnit test animate table width/height function assert assert expect 1 var = jQuery #table css display !== table ? block : table jQuery #table animate : 42 : 42 100 function assert equal jQuery this css display displayMode display mode is correct assert equal jQuery this css display display mode is correct this clock tick 100 ", "test/unit/event.js": "= jQuery #text1 = jQuery #radio1 trigger focus  Support: IE <=10 only  IE8-10 fire focus/blur events asynchronously; this is the resulting mess.  IE's browser window must be topmost for this to work properly!! QUnit stop ", "test/unit/wrap.js": "j wrap val <i></i> assert equal jQuery #nonnodes > i length jQuery (   )[  0  ]. childNodes . length jQuery #nonnodes > i length 3 Check node,textnode,comment wraps ok assert equal ", "count": 6}},
{"dictionary": {"build/tasks/build.js": "var = require fs = require requirejs = require insight = require ../../package.json = __dirname + /../../src/ =   ; read = function fileName    grunt build:*:*:+ajax:-dimensions:-effects:-offset grunt registerTask custom function var = this args = args length ? 0 replace   , g : : = args length ? 0 replace   , g : : = this async = new Insight : UA-1076265-4 : function exec trackingAllowed var = args length ? 0 split , : var = build custom = tracks map function track return track replace   g + if  Track individuals tracks forEach function module var = defaultPath concat individual module insight track apply  Track full command insight track apply defaultPath concat full grunt task run build:*:* + ? : + : uglify dist done grunt log writeln Creating custom build... grunt task run build:*:* + ? : + : uglify dist  Ask for permission the first time if insight optOut === undefined insight askPermission null function error result exec else exec ! insight optOut ", "package.json": "grunt-npmcopy 0.1.0 gzip-js 0.3.2 husky 0.11.3 insight 0.7.0 jsdom 5.6.1 load-grunt-tasks 3.4.0 native-promise-only 0.8.1 ", "count": 2}},
{"dictionary": {"package.json": "Docs Tests Build Support Release Core Ajax ", "count": 1}},
{"dictionary": {"src/.jshintrc": "sub : true  Support: IE < , Android <  Support: IE < , Android <  The above browsers are failing a lot of tests in the ES5  test suite at http://test262.ecmascript.org. es3 : true ", "src/ajax/parseXML.js": "return null  Support: IE 9 11 only  Support: IE 9 11 only  IE throws on parseFromString with invalid input. try = new window.DOMParser parseFromString text/xml ", "src/ajax/xhr.js": " File protocol always yields status code 0, assume 200 0 : 200  Support:   only  Support:   only  #1450: sometimes IE returns 1223 when it should be 204 1223 : 204 xhr abort else if === error  Support:   only  Support:   only  On a manual native abort, IE9 throws  errors on any property access that is not readyState if typeof xhr status !== number xhr status || xhr status xhr statusText  Support:   only  Support:   only  IE9 has no XHR2 but throws on binary (trac-11426)  For XHR2 non-text, let the caller handle it (gh-2498) xhr responseType || text !== text || xhr onload = callback = xhr onerror = callback error  Support:   only  Support:   only  Use onreadystatechange to replace onabort  to handle uncaught aborts if xhr onabort !== undefined ", "src/attributes/prop.js": ": get : function elem  Support: IE  11 only  Support: IE  11 only  elem.tabIndex doesn't always return the  correct value when it hasn't been explicitly set  https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/ ", "src/attributes/support.js": "input type = checkbox  Support: Android  Support: Android  Default value for a checkbox should be \"on\" support checkOn = input value !== ", "src/core.js": "return new jQuery.fn.init  Support: Android  Support: Android  Make sure we trim BOM and NBSP =   g return +  Support: Android  (functionish RegExp)  Support: Android  (functionish RegExp) return typeof === object || typeof === function ? toString call || object : typeof return  Support: Android  Support: Android trim : function text return == null ? : return == null ? - 1 : indexOf call  Support: Android , PhantomJS  Support: Android , PhantomJS  push.apply(_, arraylike) throws on ancient WebKit merge : function first second var = + second length function isArrayLike obj  Support: iOS 8.2 (not reproducible in simulator)  Support:  iOS 8.2  (not reproducible in simulator)  `in` check used to prevent JIT error (gh-2145)  hasOwn isn't used here due to false negatives  regarding Nodelist length in IE ", "src/core/ready.js": " Catch cases where $(document).ready() is called  after the browser event has already occurred.  Support:  10 only  Support:  10 only  Older IE sometimes signals \"interactive\" too soon if document readyState === complete || document readyState !== loading && ! document documentElement doScroll ", "src/css.js": "= getStyles = jQuery css boxSizing false === border-box  Support: IE <= 11 only  Support: IE <=11 only  Running getBoundingClientRect on a disconnected node  in IE throws an error. if elem getClientRects length = elem getBoundingClientRect  Support:   only  Support:   only  In IE 11 fullscreen elements inside of an iframe have  100x too small dimensions (gh-1764). if document msFullscreenElement && window top !== window += && 3 || jQuery cssNumber ? : px  Support: IE9-11+  background-* props affect original clone's values if ! support clearCloneStyle && === && name indexOf background === 0 = inherit  Support: Safari 8+  Table columns in Safari have non-zero offsetWidth & zero  getBoundingClientRect().width unless display is changed.  Support: IE <= 11 only  Support: IE <=11 only  Running getBoundingClientRect on a disconnected node  in IE throws an error. ! elem getClientRects length || ! elem getBoundingClientRect width ? ", "src/css/curCSS.js": "= || getStyles  Support:   only  Support:   only  getPropertyValue is only needed for .css('filter') (#12537) if = computed getPropertyValue || return !== undefined ?  Support:  11 only  Support:  11 only  IE returns zIndex value as an integer. + : ", "src/css/support.js": "return  Support:  11 only  Support:  11 only  Style of cloned element affects source element cloned (#8908) div style backgroundClip = content-box div cloneNode true style backgroundClip = var = window getComputedStyle = divStyle top !== 1%  Support: Android 4.0 - 4.3 only, Firefox <=3 - 44  Support: Android 4.0 - 4.3 only, Firefox <=3 - 44 = divStyle marginLeft === 2px = divStyle width === 4px ", "src/css/var/getStyles.js": "define function return function elem  Support: IE<=11 only, Firefox<=30  (#15098, #14150)  Support: IE <=11 only, Firefox <=30 (#15098, #14150)  IE throws on elements created in popups  FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\" var = elem ownerDocument defaultView ", "src/data/Data.js": " Remove the expando if there's no more data if === undefined || jQuery isEmptyObject  Support: Chrome <=  Support: Chrome <=  Webkit & Blink performance suffers when deleting properties  from DOM nodes, so set to undefined instead  https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted) ", "src/deferred/exceptionHook.js": "jQuery Deferred exceptionHook = function error stack  Support:   only  Support:   only  Console exists when dev tools are open, which can happen at any time if window console && window console warn && && rerrorNames test error name window console warn jQuery.Deferred exception:  + error message ", "src/effects.js": "var = || createFxNow = Math max 0 animation startTime + animation duration -  Support: Android 2.3  Support: Android 2.3  Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497) = / animation duration || 0 = 1 - ", "src/effects/Tween.js": " Support:   only  Support:   only  Panic based approach to setting things on disconnected nodes Tween propHooks scrollTop = Tween propHooks scrollLeft = set : function tween jQuery fx = Tween prototype init  Back   <1.8 extension point  Back   <1.8 extension point jQuery fx step = ", "src/event.js": "return false  Support:   only  Support:   only  See #13393 for more info function safeActiveElement try = handlers delegateCount = event target  Support  Support  Find delegate handlers  Black-hole SVG <use> instance trees (#13180)  Support: Firefox<=42  Support: Firefox <=42  Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343) if && cur nodeType && event type !== click || isNaN event button || event button < 1 event =  Support: Safari   Support: Safari   Target should not be a text node (#504, #13143) if event target nodeType === 3 event target = event target parentNode this isDefaultPrevented = src defaultPrevented || src defaultPrevented === undefined &&  Support: Android  Support: Android src returnValue === false ? : ", "src/event/focusin.js": "./trigger function jQuery dataPriv support  Support: Firefox   Support: Firefox   Firefox doesn't have focus(in | out) events  Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787  Support: Chrome  , Safari 9.0  Support: Chrome  , Safari  9.0  focus(in | out) events fire after focus & blur events,  which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order  Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857 ", "src/manipulation.js": " Keep references to cloned scripts for later restoration if  Support: Android , PhantomJS  Support: Android , PhantomJS  push.apply(_, arraylike) throws on ancient WebKit jQuery merge getAll script  Support: Chrome <= 45+  Support: Chrome <= 45+  Assign undefined instead of using delete, see Data#remove dataPriv expando = undefined if dataUser expando  Support: Chrome <= 45+  Support: Chrome <= 45+  Assign undefined instead of using delete, see Data#remove dataUser expando = undefined = === ? this : this clone true jQuery  Support: Android , PhantomJS  Support: Android , PhantomJS  .get() because push.apply(_, arraylike) throws on ancient WebKit push apply elems get ", "src/manipulation/buildFragment.js": " Add nodes directly if jQuery type === object  Support: Android , PhantomJS  Support: Android , PhantomJS  push.apply(_, arraylike) throws on ancient WebKit jQuery merge elem nodeType ? : = tmp lastChild  Support: Android , PhantomJS  Support: Android , PhantomJS  push.apply(_, arraylike) throws on ancient WebKit jQuery merge tmp childNodes ", "src/manipulation/getAll.js": "function getAll context tag  Support:  11 only  Support:  11 only  Use typeof to avoid zero-argument method invocation on host objects (#15151) var = typeof context getElementsByTagName !== undefined ? context getElementsByTagName || * : ", "src/manipulation/support.js": "div appendChild  Support: Android  Support: Android  Older WebKit doesn't clone checked state correctly in fragments support checkClone = div cloneNode true cloneNode true lastChild checked  Support: IE<=11 only  Support: IE <=11 only  Make sure textarea (and checkbox) defaultValue is properly cloned div innerHTML = <textarea>x</textarea> support noCloneChecked = !! div cloneNode true lastChild defaultValue ", "src/manipulation/wrapMap.js": " We have to close these tags to support XHTML (#13200) var =  Support:   Support:  : 1 <select multiple='multiple'> </select>  XHTML parsers do not magically insert elements in the : 0  Support:   Support:  wrapMap optgroup = wrapMap option wrapMap tbody = wrapMap tfoot = wrapMap colgroup = wrapMap caption = wrapMap thead ", "count": 22}},
{"dictionary": {"src/attributes/val.js": "../core/init function jQuery support var =   g var =   g =   g jQuery fn extend val : function value : get : function elem  Support: IE<11  option.value not trimmed (#14858) return jQuery trim elem value var = jQuery find attr value return != null ? :  Support: IE10-11+  option.text throws exceptions (#14686, #14858)  Strip and collapse whitespace  https://html.spec.whatwg.org/#strip-and-collapse-whitespace jQuery trim jQuery text replace   : while -- = if option selected = \t jQuery inArray jQuery valHooks option get > - 1 jQuery inArray jQuery valHooks option get > - 1 = true ", "test/unit/attributes.js": "jQuery #kk remove QUnit test select.val(space characters) (gh-2978) function assert assert expect 35 var = jQuery <select/> appendTo #qunit-fixture = t : : &#09; : n : : &#10; : r : : &#13; : f : space :   u00a0 : u1680 : = jQuery each function key obj var = obj html || += <option value='attr + + '></option> += <option value='at + + tr'></option> += <option value=' + + attr'></option> $select html jQuery each function key obj var = obj val || $select val attr + assert equal $select val attr + Value ending with space character ( + + ) selected (attr) $select val at + + tr assert equal $select val at + + tr Value with space character ( + + ) in the middle selected (attr) $select val + attr assert equal $select val + attr Value starting with space character ( + + ) selected (attr) jQuery each function key obj var = obj html || = obj val || = += <option>text + + </option> += <option>te + + xt</option> += <option> + + text</option> $select html $select val text assert equal $select val text Value with space character at beginning or end is stripped ( + + ) selected (text) if   u test $select val te + + xt assert equal $select val te + + xt Value with non-space whitespace character ( + + ) in the middle selected (text) else $select val te xt assert equal $select val te xt Value with space character ( + + ) in the middle selected (text) var testAddClass = function valueObj assert assert expect 9 assert equal jQuery <select><option> 2</option></select> val 2 val 2 QUnit test Insignificant white space returned for $(option).val() (#14858) function assert assert expect 3 QUnit test Insignificant white space returned for $(option).val() (#14858 ) function assert assert expect 16 var = jQuery <option></option> val assert equal val length 0 Empty option should have no value = jQuery <option>  </option> val assert equal val length 0 insignificant white-space returned for value jQuery each   function i character var = jQuery <option> + + </option> val assert equal val length 0 insignificant white-space returned for value = jQuery <option> + + test + + </option> val assert equal val length 4 insignificant white-space returned for value = jQuery <option>  test  </option> val assert equal val length 4 insignificant white-space returned for value = jQuery <option>te + + st</option> val assert equal te st Whitespace is collapsed in values QUnit test SVG class manipulation (gh-2199) function assert ", "count": 2}},
{"dictionary": {"build/release.js": "var = require fs module exports = function Release dist/jquery.min.map dist/jquery.slim.js dist/jquery.slim.min.js dist/jquery.slim.min.map dist/jquery.slim.min.map src/core.js = require ./release/cdn = require ./release/dist checkRepoState : function callback ensureSizzle \t\t * Set the version in the src folder for distributing AMD \t\t  _setSrcVersion : function var = __dirname + /../src/core.js = fs readFileSync utf8 = contents replace   @VERSION g Release newVersion fs writeFileSync utf8 \t\t * Generates any release artifacts that should be included in the release. \t\t * The callback must be invoked with an array of files that should be Grunt custom failed cdn makeReleaseCopies Release _setSrcVersion callback ", "build/release/dist.js": "shell cp -rf Release dir repo + / + Release dir dist  Remove the wrapper from the dist repo shell rm -f Release dir dist + /src/wrapper.js  Write generated bower file fs writeFileSync Release dir dist + /bower.json generateBower ", "count": 2}},
{"dictionary": {"src/core.js": "return false  Not own constructor property must be Object if obj constructor && ! hasOwn call obj constructor prototype isPrototypeOf ! hasOwn call constructor && ! hasOwn call obj constructor prototype || isPrototypeOf return false ", "test/unit/core.js": "QUnit asyncTest isPlainObject function assert assert expect 19 assert expect 22 var fn = function  The use case that we want to match assert ok jQuery isPlainObject {} assert ok jQuery isPlainObject new window.Object new Object assert ok jQuery isPlainObject constructor constructor : bar = Object create  Again, instantiated objects shouldn't be matched assert ok ! jQuery isPlainObject new fn new fn  Instantiated objects with primitive constructors shouldn't be matched fn prototype constructor = foo assert ok ! jQuery isPlainObject new fn new fn with primitive constructor  Deep object = foo : baz : true foo2 : document assert ok jQuery isPlainObject Object with objects is still plain ", "count": 2}},
{"dictionary": {"test/unit/core.js": "typeof Symbol === function ? test : skip isPlainObject(Symbol) function assert assert expect 2 assert equal jQuery isPlainObject Symbol false Symbol assert equal jQuery isPlainObject Object Symbol false Symbol inside an object assign in Object ? test : skip isPlainObject(Object.assign(...)) function assert assert expect 1 var = : bar var = Object assign Object create : foo assert ok ! jQuery isPlainObject isPlainObject(Object.assign(...)) QUnit test isFunction function assert assert expect 19 ", "count": 1}},
{"dictionary": {"test/data/testinit.js": " * Asserts that a select matches the given IDs  *       - Assertion name  *       - Sizzle selector  *       - Array of ids to construct what is expected  *   * @ foo bar  *       - Assertion name  *       - Sizzle selector  *       - Array of ids to construct what is expected  *   *    QUnit . assert . t   =   function (  a ,  b ,  c var = jQuery b get function   match (  message ,  selector ,  expectedIds ,  context var = jQuery selector, context get = = 0 for < f length ++ += && , + \" + id + \" this deepEqual q apply +  ( + + ) this deepEqual q apply +  ( + + )  * Asserts that a select matches the given IDs.  * The select is not bound by a context.  *       - Assertion name  *       - Sizzle selector  *       - Array of ids to construct what is expected  *      QUnit assert t = function message selector expectedIds match undefined  * Asserts that a select matches the given IDs.  * The select is performed within the `#qunit-fixture` context.  *       - Assertion name  *       - Sizzle selector  *       - Array of ids to construct what is expected  *      QUnit assert selectInFixture = function message selector expectedIds match #qunit-fixture this createDashboardXML = function ", "test/unit/selector.js": "assert t Child p>a simon1 google groups mark yahoo simon assert t Child w/ Class p > a.blog mark simon assert t All Children code > * anchor1 anchor2 assert t All Grandchildren p > * > * anchor1 anchor2 assert selectInFixture All Grandchildren p > * > * anchor1 anchor2 assert t Adjacent p + p ap en sap assert t Adjacent p#firstp + p ap assert t Adjacent p[lang=en] + p sap ", "count": 2}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {".jscsrc": " and https://github.com/jscs-dev/node-jscs/issues/1686 requireCapitalizedComments : null excludeFiles : external   ,  , excludeFiles : external test/node_smoke_tests/lib/ensure_iterability.js node_modules ", ".jshintignore": "", "build/tasks/build.js": "= require requirejs = __dirname + /../../src/ =   ; read = function fileName return grunt file read + = read exports/global.js = read wrapper.js split     CODE = : src : jquery  Avoid breaking semicolons inserted by r.js : true : startFile :   endFile :  [  ,  start :  wrapper[  0  ]. replace ( ,   ) end :  globals  +  wrapper[  1 : : ", "src/outro.js": "", "src/intro.js \u2192 src/wrapper.js": "jshint unused:false  !  * jQuery JavaScript Library v@VERSION  * https://jquery.com/  *  * Date: @DATE   function global factory function global factory if typeof module === object && typeof module exports === object  For CommonJS and CommonJS-like environments where a proper `window`  is present, execute the factory and get jQuery.  For environments that do not have a `window` with a `document`  Pass this if window is not defined yet typeof window !== undefined ? window : this function window noGlobal   typeof window !== undefined ? window : this function window noGlobal  Support: Firefox 18+  Can't be in strict mode, several libs including ASP.NET trace  the stack via arguments.caller.callee and Firefox dies if  you try to trace through \"use strict\" call chains. (#13335) \"use strict\";  @CODE  build.js inserts compiled jQuery here return ", "count": 5}},
{"dictionary": {"src/attributes/prop.js": "if parent selectedIndex if   &&   parent parentNode if parent parentNode parent parentNode selectedIndex ", "count": 1}},
{"dictionary": {"src/css/hiddenVisibleSelectors.js": "../selector function jQuery jQuery expr filters hidden = function elem return ! jQuery expr filters visible jQuery expr pseudos hidden = function elem return ! jQuery expr pseudos visible jQuery expr filters visible = function elem jQuery expr pseudos visible = function elem return !! elem offsetWidth || elem offsetHeight || elem getClientRects length ", "src/effects/animatedSelector.js": "../effects function jQuery jQuery expr filters animated = function elem jQuery expr pseudos animated = function elem return jQuery grep jQuery timers function fn return === fn elem length ", "src/selector-sizzle.js": "jQuery find = jQuery expr = Sizzle selectors  Deprecated jQuery expr : = jQuery expr pseudos jQuery uniqueSort = jQuery unique = Sizzle uniqueSort jQuery text = Sizzle getText ", "count": 3}},
{"dictionary": {"package.json": "grunt-newer 1.1.1 grunt-npmcopy 0.1.0 gzip-js 0.3.2 husky 0. husky 0. jsdom 5.6.1 load-grunt-tasks 3.4.0 native-promise-only 0.8.1 ", "count": 1}},
{"dictionary": {"package.json": "grunt-babel 6.0.0 grunt-cli 0.1.13 grunt-compare-size 0.4.0 grunt-contrib-jshint .0 grunt-contrib-jshint .0 grunt-contrib-uglify 0.11.0 grunt-contrib-watch 0.6.1 grunt-git-authors 3.1.0 grunt-jscs 2. .0 grunt-jscs 2. .0 grunt-jsonlint 1.0.7 grunt-newer 1.1.1 grunt-npmcopy 0.1.0 ", "count": 1}},
{"dictionary": {"src/core.js": "isPlainObject : function obj var  Not plain objects:  - Any object or value whose internal [[Class]] property is not \"[object Object]\" return false  If the function hasn't returned already, we're confident that  |obj| is a plain object, created by {} or constructed with new Object return true  Own properties are enumerated firstly, so to speed up,  if last one is own, then all properties are own for in return === undefined || hasOwn call isEmptyObject : function obj ", "test/unit/core.js": "QUnit asyncTest isPlainObject function assert assert expect 15 assert expect 19 var var  parentObj, childObj, deep, fn = function  The use case that we want to match assert ok jQuery isPlainObject {} assert ok jQuery isPlainObject new window.Object new Object = : bar = Object create assert ok ! jQuery isPlainObject isPlainObject(Object.create({})) childObj bar = foo assert ok ! jQuery isPlainObject isPlainObject(Object.create({}))  Not objects shouldn't be matched assert ok ! jQuery isPlainObject string  Again, instantiated objects shouldn't be matched assert ok ! jQuery isPlainObject new fn new fn  Deep object = foo : baz : true foo2 : document assert ok jQuery isPlainObject Object with objects is still plain  DOM Element assert ok ! jQuery isPlainObject document createElement div DOM Element ", "count": 2}},
{"dictionary": {"src/ajax/parseXML.js": "return null  Support: IE9  Support: IE 9-11 only  IE throws on parseFromString with invalid input. try = new window.DOMParser parseFromString text/xml catch ", "src/ajax/xhr.js": " File protocol always yields status code 0, assume 200 0 : 200  Support: IE9  Support: IE9  #1450: sometimes IE returns 1223 when it should be 204 1223 : 204 xhr abort else if === error  Support: IE9  Support: IE9  On a manual native abort, IE9 throws  errors on any property access that is not readyState if typeof xhr status !== number xhr onload = callback = xhr onerror = callback error  Support: IE9  Support: IE9  Use onreadystatechange to replace onabort  to handle uncaught aborts if xhr onabort !== undefined ", "src/core/support.js": "../var/support function document support  Support: Safari 8  Support: Safari 8  In Safari 8 documents created via document.implementation.createHTMLDocument  collapse sibling forms: the second one becomes a child of the first one.  Because of that, this security measure has to be disabled in Safari 8. ", "src/css/curCSS.js": "= || getStyles  Support: IE9  Support: IE9  getPropertyValue is only needed for .css('filter') (#12537) if = computed getPropertyValue || return !== undefined ?  Support: IE9-11  Support: IE9-11  IE returns zIndex value as an integer. + : ", "src/css/showHide.js": "if elem style display === && jQuery css display === none &&  Support: Firefox   Support: Firefox   Don't set inline display on disconnected elements with computed display: none jQuery contains elem ownerDocument ", "src/css/support.js": "return  Support: IE9-11  Support: IE9-11  Style of cloned element affects source element cloned (#8908) div style backgroundClip = content-box div cloneNode true style backgroundClip = pixelMarginRight : function  Support: Android 4.0 4.3  Support: Android 4.0 4.3  We're checking for boxSizingReliableVal here instead of pixelMarginRightVal  since that compresses better and they're computed together anyway. if == null reliableMarginLeft : function  Support:  Android 4.0 - 4.3 only, Firefox <=3 -   Support: Android 4.0 - 4.3 only, Firefox <=3 -  if == null computeStyleTests ", "src/css/var/getStyles.js": "define function return function elem  Support: IE<=11 , Firefox<=30+ (#15098, #14150)  Support: IE<=11 , Firefox<=30+ (#15098, #14150)  IE throws on elements created in popups  FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\" var = elem ownerDocument defaultView ", "src/data/Data.js": " Support: Chrome <= 35-45+  Webkit & Blink performance suffers when deleting properties  from DOM nodes, so set to undefined instead  https:// /p/chromium/issues/detail?id=378607  https:// /p/chromium/issues/detail?id=378607 if owner nodeType this expando = undefined else ", "src/deferred/exceptionHook.js": "jQuery Deferred exceptionHook = function error stack  Support: IE9  Support: IE9  Console exists when dev tools are open, which can happen at any time if window console && window console warn && && rerrorNames test error name window console warn jQuery.Deferred exception:  + error message ", "src/effects/Tween.js": " Support: IE9  Support: IE9  Panic based approach to setting things on disconnected nodes Tween propHooks scrollTop = Tween propHooks scrollLeft = set : function tween ", "src/event.js": "return false  Support: IE9  Support: IE9  See #13393 for more info function safeActiveElement try  Support: Safari 7 only  Safari sends mouseenter too often; see:  https:// /p/chromium/issues/detail?id=470258  https:// /p/chromium/issues/detail?id=470258  for the description of the bug (it existed in older Chrome versions as well). jQuery each : mouseover ", "src/event/focusin.js": "./trigger function jQuery dataPriv support  Support: Firefox  Support: Firefox  Firefox doesn't have focus(in | out) events  Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787  Support: Chrome, Safari  Support: Chrome , Safari  focus(in | out) events fire after focus & blur events,  which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order  Related ticket - https:// /p/chromium/issues/detail?id=449857  Related ticket - https:// /p/chromium/issues/detail?id=449857 if ! support focusin jQuery each : focusin : focusout function orig fix ", "src/manipulation/getAll.js": "function getAll context tag  Support: IE9-11  Support: IE9-11  Use typeof to avoid zero-argument method invocation on host objects (#15151) var = typeof context getElementsByTagName !== undefined ? context getElementsByTagName || * : ", "src/manipulation/support.js": "= fragment appendChild document createElement div = document createElement input  Support: Android 4.0 4.3  Support: Android 4.0 4.3  Check state lost if the name is set (#11217)  Support: Windows Web Apps (WWA)  `name` and `type` must use .setAttribute for WWA (#14901)  Older WebKit doesn't clone checked state correctly in fragments support checkClone = div cloneNode true cloneNode true lastChild checked  Support: IE<=11  Support: IE<=11  Make sure textarea (and checkbox) defaultValue is properly cloned div innerHTML = <textarea>x</textarea> support noCloneChecked = !! div cloneNode true lastChild defaultValue ", "src/offset.js": " Support: Safari<7- +, Chrome<37- +  Support: Safari<7- +, Chrome<37- +  Add the top/left cssHooks using jQuery.fn.position  Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084  Blink bug: https:// /p/chromium/issues/detail?id=  Blink bug: https:// /p/chromium/issues/detail?id=  getComputedStyle returns percent when specified for top/left/bottom/right;  rather than make the css module depend on the offset module, just check for it here jQuery each top left function i prop ", "test/unit/ajax.js": "Nullable : null undefined : undefined  Support:   Support:   Not all browsers allow empty-string headers  https://bugzilla.mozilla.org/show_bug.cgi?id=815299 \"Empty\": \"\" success : function data _ xhr QUnit asyncTest #11743 - jQuery.ajax() - script, throws exception 1 function assert  Support: Android 2.3 only  Android 2.3 doesn't fire the window.onerror handler, just accept the reality there. if   android 2 3 i test navigator userAgent assert ok true Test skipped, Android 2.3 doesn't fire window.onerror for  + errors in dynamically included scripts QUnit start return var = window onerror window onerror = function assert ok true Exception thrown var = jQuery jQuery parseXML <tab title= Added >blibli</tab> find tab = jQuery try  Android 2.3 doesn't automatically adopt nodes from foreign documents.  (see the comment in test/manipulation.js)  Support: Android 2.3 if   android 2 3 i test navigator userAgent = jQuery 0 adoptNode 0 ajaxXML find infowindowtab append catch assert strictEqual undefined error ", "test/unit/basic.js": "assert strictEqual elem1 text foo text foo .html getter/setter assert strictEqual  Support: IE 8 only  IE 8 prints tag names in upper case. elem1 html <span/> html toLowerCase elem1 html <span/> html <span></span> .html getter/setter child before <b/> assert strictEqual  Support: IE 8 only  IE 8 prints tag names in upper case. elem1 html toLowerCase elem1 html <div></div><b></b><span></span><a></a> .after/.before elem find b wrap <span> assert strictEqual  Support: IE 8 only  IE 8 prints tag names in upper case. elem html toLowerCase elem html <a><span><b></b></span></a><a></a> .wrap elem find span wrapInner <em> assert strictEqual  Support: IE 8 only  IE 8 prints tag names in upper case. elem html toLowerCase elem html <a><span><em><b></b></em></span></a><a></a> .wrapInner elem find a wrapAll <i> assert strictEqual  Support: IE 8 only  IE 8 prints tag names in upper case. elem html toLowerCase elem html <i><a><span><em><b></b></em></span></a><a></a></i> .wrapAll ", "test/unit/css.js": "$div css fill-opacity 1  Support: Android 2.3 (no support for fill-opacity) if $div css fill-opacity !== undefined assert equal $div css fill-opacity 1 Do not append px to 'fill-opacity' else assert ok true No support for fill-opacity CSS property assert equal $div css fill-opacity 1 Do not append px to 'fill-opacity' $div css column-count 1 if $div css column-count !== undefined QUnit test css('width') and css('height') should respect box-sizing, see #11004 function assert assert expect 4  Support: Android 2.3 (-webkit-box-sizing). var = jQuery <div style='width:300px;height:300px;margin:2px;padding:2px;-webkit-box-sizing:border-box;box-sizing:border-box;'>test</div> var = jQuery <div style='width:300px;height:300px;margin:2px;padding:2px;box-sizing:border-box;'>test</div> = el_dis clone appendTo #qunit-fixture assert equal el css width el css width el css width css width css('width') is not respecting box-sizing, see #11004 assert equal typeof el css fontWeight string .css() returns a string  only run this test in IE9  Support: IE 9 only  Only run this test in IE9 if document documentMode === 9 QUnit test .css('filter') returns a string in IE9, see #12537 function assert assert expect 1 ", "test/unit/dimensions.js": "assert equal $divChild outerWidth $divNormal outerWidth child of a hidden element outerWidth() is wrong see #9441 assert equal $divChild outerWidth true $divNormal outerWidth true child of a hidden element outerWidth( true ) is wrong see #9300  Support: IE 10 11, Edge  Support: IE 10 11, Edge  Child height is not always decimal assert equal $divChild height toFixed 3 $divNormal height toFixed 3 child of a hidden element height() is wrong see #9441 assert equal $divChild innerHeight toFixed 3 $divNormal innerHeight toFixed 3 child of a hidden element innerHeight() is wrong see #9441 assert equal $divUnconnected outerWidth $divNormal outerWidth unconnected element outerWidth() is wrong see #9441 assert equal $divUnconnected outerWidth true $divNormal outerWidth true unconnected element outerWidth( true ) is wrong see #9300  Support: IE 10 11, Edge  Support: IE 10 11, Edge  Child height is not always decimal assert equal $divUnconnected height toFixed 3 $divNormal height toFixed 3 unconnected element height() is wrong see #9441 assert equal $divUnconnected innerHeight toFixed 3 $divNormal innerHeight toFixed 3 unconnected element innerHeight() is wrong see #9441 assert equal $divChild outerWidth $divNormal outerWidth child of a hidden element outerWidth() is wrong see #10413 assert equal $divChild outerWidth true $divNormal outerWidth true child of a hidden element outerWidth( true ) is wrong see #10413  Support: IE 10 11, Edge  Support: IE 10 11, Edge  Child height is not always decimal assert equal $divChild height toFixed 3 $divNormal height toFixed 3 child of a hidden element height() is wrong see #10413 assert equal $divChild innerHeight toFixed 3 $divNormal innerHeight toFixed 3 child of a hidden element innerHeight() is wrong see #10413 assert equal $divUnconnected outerWidth $divNormal outerWidth unconnected element outerWidth() is wrong see #10413 assert equal $divUnconnected outerWidth true $divNormal outerWidth true unconnected element outerWidth( true ) is wrong see #10413  Support: IE 10 11, Edge  Support: IE 10 11, Edge  Child height is not always decimal assert equal $divUnconnected height toFixed 3 $divNormal height toFixed 3 unconnected element height() is wrong see #10413 assert equal $divUnconnected innerHeight toFixed 3 $divNormal innerHeight toFixed 3 unconnected element innerHeight() is wrong see #10413 ", "test/unit/effects.js": "var = jQuery <div> appendTo #qunit-fixture $div css fill-opacity 0 animate fill-opacity : 1.0 0 function  Support: Android 2.3 (no support for fill-opacity) if jQuery this css fill-opacity assert equal jQuery this css fill-opacity 1 Do not append px to 'fill-opacity' else assert ok true No support for fill-opacity CSS property assert equal jQuery this css fill-opacity 1 Do not append px to 'fill-opacity' $div remove ", "count": 20}},
{"dictionary": {"src/ajax.js": "./ajax/var/rquery ./core/init ./ajax/parseJSON ./ajax/parseXML ./event/trigger ./deferred text html : true  Evaluate text as a json expression text json : jQuery . parseJSON text json : JSON . parse  Parse text as xml text xml : jQuery parseXML ", "src/ajax/parseJSON.js": "", "src/data.js": " Only convert to a number if it doesn't change the string + + === ? + : rbrace test ? jQuery . parseJSON : rbrace test ? JSON . parse : catch ", "src/deprecated.js": "jQuery parseJSON = JSON parse ", "test/unit/ajax.js": "success : function text assert strictEqual typeof string json wasn't auto-determined var = jQuery . parseJSON var = JSON . parse assert ok json length >= 2 Check length assert strictEqual 0 name John Check JSON: first, name assert strictEqual 0 age 21 Check JSON: first, age ", "test/unit/basic.js": "QUnit test core function assert assert expect 28 assert expect 27 var = jQuery <div></div><span></span> assert strictEqual jQuery parseHTML <div></div><span></span> length 2 jQuery.parseHTML assert deepEqual jQuery parseJSON { a : 2} : 2 jQuery.parseJON QUnit test data function assert ", "test/unit/core.js": "QUnit test jQuery.parseJSON function assert assert expect 20 assert strictEqual jQuery parseJSON null null primitive null assert strictEqual jQuery parseJSON 0.88 0.88 Number assert strictEqual jQuery parseJSON       /  b  f  n  r  t  u007E  u263a       /           ~    String escapes assert deepEqual jQuery parseJSON {} Empty object assert deepEqual jQuery parseJSON { test :1} test : 1 Plain object assert deepEqual jQuery parseJSON [0] 0 Simple array assert deepEqual jQuery parseJSON [  string , -4.2, 2.7180e0, 3.14E-1, {}, [], true, false, null ] string - 4.2 2.718 0.314 true false null Array of all data types assert deepEqual jQuery parseJSON {  string :  ,  number : 4.2e+1,  object : {}, + array : [[]],  boolean : [ true, false ],  null : null } : : 42 : : boolean : true false null : null Dictionary of all data types assert deepEqual jQuery parseJSON { test :1} test : 1 Leading and trailing whitespace are ignored assert throws function jQuery parseJSON null Undefined raises an error assert throws function jQuery parseJSON null Empty string raises an error assert throws function jQuery parseJSON '' null Single-quoted string raises an error \t// Broken on IE8 \tassert.throws(function() { \t\tjQuery.parseJSON(\"\\\" \\\\a \\\"\"); \t}, null, \"Invalid string escape raises an error\" ); \t// Broken on IE8, Safari 5.1 Windows \tassert.throws(function() { \t\tjQuery.parseJSON(\"\\\"\\t\\\"\"); \t}, null, \"Unescaped control character raises an error\" ); \t// Broken on IE8 \tassert.throws(function() { \t\tjQuery.parseJSON(\".123\"); \t}, null, \"Number with no integer component raises an error\" ); \t assert throws function var = jQuery parseJSON 0101  Support: IE9+  Ensure base-10 interpretation on browsers that erroneously accept leading-zero numbers if === 101 throw new Error close enough null Leading-zero number raises an error or is parsed as decimal assert throws function jQuery parseJSON {a:1} null Unquoted property raises an error assert throws function jQuery parseJSON {'a':1} null Single-quoted property raises an error assert throws function jQuery parseJSON [,] null Array element elision raises an error assert throws function jQuery parseJSON {},[] null Comma expression raises an error assert throws function jQuery parseJSON [] ,{} null Newline-containing comma expression raises an error assert throws function jQuery parseJSON null Automatic semicolon insertion raises an error assert strictEqual jQuery parseJSON 0 0 Input cast to string QUnit test jQuery.parseXML function assert assert expect 8 ", "test/unit/data.js": "var = jQuery . parseJSON = JSON . parse = jQuery <div> = jQuery <div data-myobj='old data' data-ignored= DOM  data-other='test' data-foo-42='boosh'></div> = jQuery <div data-myobj='old data' data-ignored= DOM  data-other='test' data-foo-42='boosh'></div>  attribute parsing = 0 jQuery . parseJSON = function JSON . parse = function ++ return parseJSON apply this arguments assert strictEqual child data string test Typical string read from attribute assert equal 2 Correct number of JSON parse attempts when reading from attributes jQuery . parseJSON = JSON . parse = child remove  tests from metadata plugin ", "test/unit/deprecated.js": "end undelegate b click remove QUnit test jQuery.parseJSON function assert assert expect 20 assert strictEqual jQuery parseJSON null null primitive null assert strictEqual jQuery parseJSON 0.88 0.88 Number assert strictEqual jQuery parseJSON       /  b  f  n  r  t  u007E  u263a       /           ~    String escapes assert deepEqual jQuery parseJSON {} Empty object assert deepEqual jQuery parseJSON { test :1} test : 1 Plain object assert deepEqual jQuery parseJSON [0] 0 Simple array assert deepEqual jQuery parseJSON [  string , -4.2, 2.7180e0, 3.14E-1, {}, [], true, false, null ] string - 4.2 2.718 0.314 true false null Array of all data types assert deepEqual jQuery parseJSON {  string :  ,  number : 4.2e+1,  object : {}, + array : [[]],  boolean : [ true, false ],  null : null } : : 42 : : boolean : true false null : null Dictionary of all data types assert deepEqual jQuery parseJSON { test :1} test : 1 Leading and trailing whitespace are ignored assert throws function jQuery parseJSON null Undefined raises an error assert throws function jQuery parseJSON null Empty string raises an error assert throws function jQuery parseJSON '' null Single-quoted string raises an error assert throws function var = jQuery parseJSON 0101  Support: IE9+  Ensure base-10 interpretation on browsers that erroneously accept leading-zero numbers if === 101 throw new Error close enough null Leading-zero number raises an error or is parsed as decimal assert throws function jQuery parseJSON {a:1} null Unquoted property raises an error assert throws function jQuery parseJSON {'a':1} null Single-quoted property raises an error assert throws function jQuery parseJSON [,] null Array element elision raises an error assert throws function jQuery parseJSON {},[] null Comma expression raises an error assert throws function jQuery parseJSON [] ,{} null Newline-containing comma expression raises an error assert throws function jQuery parseJSON null Automatic semicolon insertion raises an error assert strictEqual jQuery parseJSON 0 0 Input cast to string ", "count": 9}},
{"dictionary": {"build/release/dist.js": " These files are included with the distribution = src external/sizzle LICENSE.txt AUTHORS.txt package.json ", "count": 1}},
{"dictionary": {"test/unit/dimensions.js": "QUnit test setters with and without box-sizing:border-box function assert assert expect 60 assert expect 120 var = jQuery #foo css : 200px : 200px font-size : 16px = jQuery <div style='margin:5px;padding:1px;border:2px solid black;box-sizing:border-box;'></div> appendTo = jQuery <div style='margin:5px;padding:1px;border:2px solid black;'></div> appendTo = jQuery <div style='margin:5px;padding:1px;border:2px solid black;'></div> appendTo = jQuery <div style='margin:5px; padding:0px; border:0px solid green;box-sizing:border-box;'></div> appendTo = jQuery <div style='margin:5px; padding:0px; border:0px solid green;'></div> appendTo jQuery each number : : 100 : 100 assert equal el_bb innerWidth values set width values expected - 2 test border-box innerWidth( + + ) by roundtripping assert equal el_bb outerWidth values set width values expected - 6 test border-box outerWidth( + + ) by roundtripping assert equal el_bb outerWidth values set false width values expected - 6 test border-box outerWidth( + + , false) by roundtripping assert equal el_bb outerWidth values set true width values expected - 16 test border-box  ( + + , true) by roundtripping assert equal el_bb outerWidth values set true width values expected - 16 test border-box  ( + + , true) by roundtripping assert equal el_bb height values set height values expected test border-box height( + + ) by roundtripping assert equal el_bb innerHeight values set height values expected - 2 test border-box innerHeight( + + ) by roundtripping assert equal el_bb outerHeight values set height values expected - 6 test border-box outerHeight( + + ) by roundtripping assert equal el_bb outerHeight values set false height values expected - 6 test border-box outerHeight( + + , false) by roundtripping assert equal el_bb outerHeight values set true height values expected - 16 test border-box  ( + + , true) by roundtripping assert equal el_bb outerHeight values set true height values expected - 16 test border-box  ( + + , true) by roundtripping assert equal el width values set width values expected test non-border-box width( + + ) by roundtripping assert equal el innerWidth values set width values expected - 2 test non-border-box innerWidth( + + ) by roundtripping assert equal el outerWidth values set width values expected - 6 test non-border-box outerWidth( + + ) by roundtripping assert equal el outerWidth values set false width values expected - 6 test non-border-box outerWidth( + + , false) by roundtripping assert equal el outerWidth values set true width values expected - 16 test non-border-box  ( + + , true) by roundtripping assert equal el outerWidth values set true width values expected - 16 test non-border-box  ( + + , true) by roundtripping assert equal el height values set height values expected test non-border-box height( + + ) by roundtripping assert equal el innerHeight values set height values expected - 2 test non-border-box innerHeight( + + ) by roundtripping assert equal el outerHeight values set height values expected - 6 test non-border-box outerHeight( + + ) by roundtripping assert equal el outerHeight values set false height values expected - 6 test non-border-box outerHeight( + + , false) by roundtripping assert equal el outerHeight values set true height values expected - 16 test non-border-box innerHeight( + + , true) by roundtripping assert equal el outerHeight values set true height values expected - 16 test non-border-box outerHeight( + + , true) by roundtripping assert equal el_bb_np width values set width values expected test border-box width and negative padding( + + ) by roundtripping assert equal el_bb_np innerWidth values set width values expected test border-box innerWidth and negative padding( + + ) by roundtripping assert equal el_bb_np outerWidth values set width values expected test border-box outerWidth and negative padding( + + ) by roundtripping assert equal el_bb_np outerWidth values set false width values expected test border-box outerWidth and negative padding( + + , false) by roundtripping assert equal el_bb_np outerWidth values set true width values expected - 10 test border-box outerWidth and negative padding( + + , true) by roundtripping assert equal el_bb_np height values set height values expected test border-box height  and negative padding( + + ) by roundtripping assert equal el_bb_np innerHeight values set height values expected test border-box innerHeight and negative padding( + + ) by roundtripping assert equal el_bb_np outerHeight values set height values expected test border-box outerHeight and negative padding( + + ) by roundtripping assert equal el_bb_np outerHeight values set false height values expected test border-box outerHeight and negative padding( + + , false) by roundtripping assert equal el_bb_np outerHeight values set true height values expected - 10 test border-box outerHeight and negative padding( + + , true) by roundtripping assert equal el_np width values set width values expected test non-border-box width  and negative padding( + + ) by roundtripping assert equal el_np innerWidth values set width values expected test non-border-box innerWidth and negative padding( + + ) by roundtripping assert equal el_np outerWidth values set width values expected test non-border-box outerWidth and negative padding( + + ) by roundtripping assert equal el_np outerWidth values set false width values expected test non-border-box outerWidth and negative padding( + + , false) by roundtripping assert equal el_np outerWidth values set true width values expected - 10 test non-border-box outerWidth and negative padding( + + , true) by roundtripping assert equal el_np height values set height values expected test non-border-box height and negative padding( + + ) by roundtripping assert equal el_np innerHeight values set height values expected test non-border-box innerHeight and negative padding( + + ) by roundtripping assert equal el_np outerHeight values set height values expected test non-border-box outerHeight and negative padding( + + ) by roundtripping assert equal el_np outerHeight values set false height values expected test non-border-box outerHeight and negative padding( + + , false) by roundtripping assert equal el_np outerHeight values set true height values expected - 10 test non-border-box outerHeight and negative padding( + + , true) by roundtripping ", "count": 1}},
{"dictionary": {".gitignore": "", "count": 1}},
{"dictionary": {"src/attributes/attr.js": "function jQuery access support rnotwhite var = jQuery expr attrHandle  Exclusively lowercase A-Z in attribute names (gh-2730)  https://dom.spec.whatwg.org/#converted-to-ascii-lowercase =   g lowercase = function ch return ch toLowerCase = jQuery expr attrHandle jQuery fn extend attr : function name value  All attributes are lowercase  Grab necessary hook if one is defined if !== 1 || ! jQuery isXMLDoc = name replace = jQuery attrHooks || = jQuery attrHooks name toLowerCase || jQuery expr match bool test ? : undefined ", "count": 1}},
{"dictionary": {"npm-debug.log": "", "count": 1}},
{"dictionary": {"test/unit/attributes.js": "QUnit test attr(Hash) function assert assert expect 3 var = true jQuery div attr jQuery #qunit-fixture div attr foo : baz zoo : ping each function = jQuery div attr foo bar = jQuery div attr foo bar = 0 = false = true _handle apply this arguments jQuery input attr checked jQuery input attr checked = false jQuery input attr checked jQuery input attr checked assert ok The boolean attrHandle does not drop custom attrHandles QUnit test val(Array of Numbers) (Bug #7123) function assert assert expect 4 jQuery #form append <input type='checkbox' name='arrayTest' value='1' /><input type='checkbox' name='arrayTest' value='2' /><input type='checkbox' name='arrayTest' value='3' checked='checked' /><input type='checkbox' name='arrayTest' value='4' /> var = jQuery input[name=arrayTest] val 1 2 var = jQuery input[name=arrayTest] val 1 2 assert ok 0 checked First element was checked assert ok 1 checked Second element was checked assert ok ! 2 checked Third element was unchecked ", "count": 1}},
{"dictionary": {"test/unit/attributes.js": "assert equal jQuery prop selected true Make sure that a single option is selected, even when in an optgroup. = jQuery <img style='display:none' width='215' height='53' src='data/1x1.jpg'/> appendTo body assert equal $img attr width 215 Retrieve width attribute   an element with display:none. assert equal $img attr height 53 Retrieve height attribute   an element with display:none. assert equal $img attr width 215 Retrieve width attribute   an element with display:none. assert equal $img attr height 53 Retrieve height attribute   an element with display:none.  Check for style support = jQuery <div/> appendTo #qunit-fixture css ", "test/unit/core.js": " If \"copyIsArray\" doesn't get reset to false, the check  will evaluate true and enter the array copy block  instead of the object copy block. Since the ternary in the  \"copyIsArray\" block will  evaluate to false  \"copyIsArray\" block will evaluate to false  (check if operating on an array with ), this will be  replaced by an empty array. : ", "count": 2}},
{"dictionary": {"npm-debug.log": "", "test/unit/dimensions.js": "join = assert async = $ = jQuery parent appendTo #qunit-fixture parent one scroll function ", "count": 2}},
{"dictionary": {".editorconfig": "root [*] indent_style end_of_line charset trim_trailing_whitespace insert_final_newline  Tabs in JS unless otherwise specified [**.js] indent_style [test/**.xml] indent_style [test/**.php] indent_style [package.json] indent_style indent_size [test/**.html] indent_style [test/**.css] indent_style ", "count": 1}},
{"dictionary": {"test/data/testsuite.css": ".inline inline .list-item list-item .hidden .none none #div-gh-2836 relative auto 100 #div-gh-2836 div relative 100 0 0 ", "test/unit/dimensions.js": "coordinates are modified (got offset.top:  + + ) QUnit test outside view position (gh-2836) function assert  This test ported from gh-2836 example assert expect 1 var = <div id=div-gh-2836> <div></div> <div></div> <div></div> <div></div> <div></div> </div> join = assert async = $ parent appendTo #qunit-fixture parent one scroll function var = parent find div eq 3 position assert strictEqual pos top - 100 stop parent scrollTop 400 ", "count": 2}},
{"dictionary": {"test/unit/offset.js": "testIframe offset/scroll scroll function $ win doc assert assert expect 24 assert expect 26 assert equal $ #scroll-1 offset top 7 jQuery('#scroll-1').offset().top assert equal $ #scroll-1 offset left 7 jQuery('#scroll-1').offset().left ", "count": 1}},
{"dictionary": {"Gruntfile.js": " The concatenated file won't pass onevar  But our modules can delete srcHintOptions onevar if ! grunt option filename grunt option filename jquery.js ", "count": 1}},
{"dictionary": {"Gruntfile.js": "var = require fs = require gzip-js = readOptionalJSON src/.jshintrc = ! v0 test process version  Allow to skip jsdom-related tests in Node.js < 1.0.0 = || function try require jsdom return true catch return false  Skip jsdom-related tests in Node.js 0.10 & 0.12 = ! v0 test process version if ! grunt option filename grunt option filename jquery.js ", "build/tasks/install_old_jsdom.js": "", "count": 2}},
{"dictionary": {"Gruntfile.js": "use strict function readOptionalJSON filepath var = var = require strip-json-comments = try = JSON parse stripJSONComments fs readFileSync : utf8 var = require fs = require strip-json-comments = require gzip-js = readOptionalJSON src/.jshintrc = ! v0 test process version ", "count": 1}},
{"dictionary": {"build/tasks/build.js": ": src/intro.js : src/exports/global.js src/outro.js : : ../external/sizzle/dist/sizzle : : replace  Sizzle treatment else if   sizzle test else if   sizzle test = var Sizzle = +  Remove EXPOSE lines from Sizzle ", "src/selector-sizzle.js": "define ./core sizzle sizzle function jQuery Sizzle jQuery find = ", "test/jquery.js": " This detection allows AMD tests to be run in an iframe if QUnit urlParams amd && window QUnit require config : : : external/sizzle/dist/sizzle : = src/jquery ", "count": 3}},
{"dictionary": {"src/offset.js": " Add offsetParent borders  Subtract offsetParent scroll positions parentOffset top += jQuery css 0 borderTopWidth true - offsetParent scrollTop parentOffset left += jQuery css 0 borderLeftWidth true - offsetParent scrollLeft parentOffset top += jQuery css 0 borderTopWidth true parentOffset left += jQuery css 0 borderLeftWidth true  Subtract parent offsets and element margins ", "test/unit/offset.js": "testIframe offset/scroll scroll function $ win doc assert assert expect 30 assert expect 24 assert equal $ #scroll-1 offset top 7 jQuery('#scroll-1').offset().top assert equal $ #scroll-1 offset left 7 jQuery('#scroll-1').offset().left assert notEqual $ scrollLeft null null jQuery().scrollLeft(null) testing setter on empty jquery object assert strictEqual $ scrollTop undefined jQuery().scrollTop() testing getter on empty jquery object assert strictEqual $ scrollLeft undefined jQuery().scrollLeft() testing getter on empty jquery object  Tests position after parent scrolling (#15239) $ #scroll-1 scrollTop 0 $ #scroll-1 scrollLeft 0 assert equal $ #scroll-1-1 position top 6 jQuery('#scroll-1-1').position().top unaffected by parent scrolling assert equal $ #scroll-1-1 position left 6 jQuery('#scroll-1-1').position().left unaffected by parent scrolling $ #scroll-1 scrollTop 5 $ #scroll-1 scrollLeft 5 assert equal $ #scroll-1-1 position top 6 jQuery('#scroll-1-1').position().top unaffected by parent scrolling assert equal $ #scroll-1-1 position left 6 jQuery('#scroll-1-1').position().left unaffected by parent scrolling testIframe offset/body body function $ window document assert QUnit test chaining function assert assert expect 3 var = top : 1 left : 1 assert equal jQuery #absolute-1 offset jquery jQuery fn jquery offset(coords) returns jQuery object assert equal jQuery #non-existent offset jquery jQuery fn jquery offset(coords) with empty jQuery set returns jQuery object ", "count": 2}},
{"dictionary": {"src/attributes/prop.js": ": get : function elem  Support: IE 9-11 only  elem.tabIndex doesn't always return the  correct value when it hasn't been explicitly set  http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/   http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/  Use proper attribute retrieval(#12072) var = jQuery find attr tabindex ", "count": 1}},
{"dictionary": {"test/unit/traversing.js": "QUnit test not(jQuery) function assert assert expect 1 assert deepEqual jQuery p not jQuery #ap, #sndp, .result get q firstp en sap first not(jQuery) assert deepEqual jQuery #qunit-fixture p not jQuery #ap, #sndp, .result get q firstp en sap first not(jQuery) QUnit test not(Selector) excludes non-element nodes (gh-2808) function assert ", "count": 1}},
{"dictionary": {"external/qunit/qunit.css": "!  * QUnit 1. .0  * QUnit 1. .0  * http://qunitjs.com/  *  * Copyright jQuery Foundation and other contributors  * Released under the MIT license  * http://jquery.org/license  *  * Date: 2015-  * Date: 2015-   * Font Family and Sizes  #qunit-tests #qunit-header #qunit-banner #qunit-testrunner-toolbar #qunit-userAgent #qunit-testresult #qunit-tests #qunit-header #qunit-banner #qunit-testrunner-toolbar #qunit- ,  userAgent #qunit-testresult Helvetica Neue Light HelveticaNeue-Light Helvetica Neue Helvetica Arial sans-serif #qunit-testrunner-toolbar #qunit-userAgent #qunit-testresult #qunit-tests li small #qunit-testrunner-toolbar #qunit- ,  userAgent #qunit-testresult #qunit-tests li small #qunit-tests smaller * Resets  #qunit-tests #qunit-header #qunit-banner #qunit-userAgent #qunit-testresult #qunit-modulefilter #qunit-tests #qunit-header #qunit-banner #qunit- ,  userAgent #qunit-testresult #qunit-modulefilter 0 0 hidden #qunit-filteredTest 0.5 1 0.5 1 #F4FF77 #366097 #qunit-userAgent 0.5 1 0.5 1 #2B81AF #qunit-tests .hidepass li .pass hidden absolute 0 0 0 0 0 5 .qunit-source 0.6 0 0.3 .qunit-collapsed none ", "count": 1}},
{"dictionary": {"package.json": "scripts build npm install && grunt start grunt watch test grunt && grunt test test grunt && grunt test precommit grunt precommit_lint commitplease components ", "count": 1}},
{"dictionary": {"Gruntfile.js": "grunt registerTask dev build:*:* lint uglify remove_map_comment dist:* grunt registerTask default dev test_fast compare_size grunt registerTask precommit_lint newer:jsonlint newer:jshint newer:jscs ", "package.json": "grunt-git-authors 3.1.0 grunt-jscs 2.6.0 grunt-jsonlint 1.0.7 grunt-newer 1.1.1 grunt-npmcopy 0.1.0 gzip-js 0.3.2 husky 0.10.2 jsdom 5.6.1 load-grunt-tasks 3.4.0 native-promise-only 0.8.1 ", "count": 2}},
{"dictionary": {"src/selector-native.js": "documentElement webkitMatchesSelector || documentElement mozMatchesSelector || documentElement oMatchesSelector || documentElement msMatchesSelector documentElement msMatchesSelector  CSS string/identifier serialization  https://drafts.csswg.org/cssom/#common-serializing-idioms =   ( - ) - g fcssescape = function ch asCodePoint if  U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER if === return  Control characters and (dependent upon position) numbers get escaped as code points return ch slice 0 - 1 + + ch charCodeAt ch length - 1 toString 16 +    Other potentially-special ASCII characters get backslash-escaped return + function sortOrder a b return function escape sel return + replace jQuery extend : : : find : function selector context results seed var = 0 return : : text : function elem var = ", "src/selector-sizzle.js": "jQuery text = Sizzle getText jQuery isXMLDoc = Sizzle isXML jQuery contains = Sizzle contains jQuery escapeSelector = Sizzle escape ", "test/unit/selector.js": "iframeDoc write <body><form id='navigate' action='?'></form></body> iframeDoc close QUnit test Ensure escapeSelector exists (escape tests in Sizzle) function assert assert expect 1 assert equal jQuery escapeSelector #foo.bar #foo .bar escapeSelector present ", "count": 3}},
{"dictionary": {"test/unit/css.js": "assert equal div css top 10px can't get top in IE<9, see #8388 QUnit test Ensure styles are retrieving from parsed html on document fragments function assert assert expect 1 var = jQuery jQuery parseHTML <span style= font-family: Cuprum,sans-serif; font-size: 14px; color: #999999; >some text</span> assert equal $span css font-size 14px Font-size retrievable on parsed HTML node QUnit test can't get background-position in IE<9, see #10796 function assert var = jQuery <div/> appendTo #qunit-fixture = ", "count": 1}},
{"dictionary": {"src/css/var/getStyles.js": " FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\" var = elem ownerDocument defaultView if ! view opener if !   ||   ! view opener = window ", "count": 1}},
{"dictionary": {"README.md": "git http Node.js git https Node.js Homebrew `brew install git` `brew install node` ", "src/css/curCSS.js": " Android Browser returns percentage for some values,  but width seems to be reliably pixels.  This is against the CSSOM draft spec:   :// .org /cssom/#resolved-values   :// .org/cssom/#resolved-values if ! support pixelMarginRight && rnumnonpx test && rmargin test  Remember the original values ", "src/event.js": " jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding   ://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html   ://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html jQuery Event prototype = constructor ", "count": 3}},
{"dictionary": {"build/tasks/lib/spawn_test.js": " See the comment in ../node_smoke_tests.js for more information. module exports = function spawnTest done var = slice call arguments 1 = require -spawn = require -spawn spawn node : inherit on close function code ", "package.json": "babel-preset-es2015 6.3.13 commitplease 2.3.0 core-js 2.0.3 cross-spawn 2.1.5 grunt 0.4.5 grunt-babel 6.0.0 grunt-cli 0.1.13 sinon 1.17.3 sizzle 2.3.0 strip-json-comments 2.0.0 testswarm 1.1.0 win-spawn 2.0.0 testswarm 1.1.0 scripts build npm install && grunt ", "count": 2}},
{"dictionary": {".npmrc": "", "count": 1}},
{"dictionary": {".babelrc": "presets : es2015 ", "Gruntfile.js": "requirejs/require.js : requirejs/require.js sinon/ .js : sinon/ /sinon .js sinon/ .js : sinon/ /sinon.js sinon/LICENSE.txt : sinon/LICENSE ", "external/npo/npo.js": "", "external/qunit/LICENSE.txt": "", "external/qunit/qunit.css": "!  * QUnit 1.  * QUnit 1.  * http://qunitjs.com/  *  * Copyright jQuery Foundation and other contributors  * Released under the MIT license  * http://jquery.org/license  *  * Date: 2015-  * Date: 2015-   * Font Family and Sizes  #qunit-tests .hidepass li .running #qunit-tests .hidepass li .pass none hidden absolute 0 0 0 0 0 #qunit-tests li strong #C2CCD1 none #qunit-tests li p a 0.25 #6B6464 #qunit-tests li a :hover #qunit-tests li a :focus #000 ", "count": 5}},
{"dictionary": {"Gruntfile.js": "test/data/testrunner.js test/unit/animation.js test/unit/basic.js test/unit/support.js test/unit/tween.js test/unit/wrap.js ", "test/unit/support.js": "assert ok color was not reset ( + + ) assert deepEqual jQuery extend Same support properties assert deepEqual jQuery extend Same support properties var = assert async assert expect 2 assert deepEqual jQuery extend No violations of CSP polices assert deepEqual jQuery extend No violations of CSP polices supportjQuery get data/support/csp.log done function data assert equal No log request should be sent assert ok true no ajax; skipping jQuery.support[' + + ']   ", "count": 2}},
{"dictionary": {"test/unit/manipulation.js": "function assertSpecialCharsSupport method characters  Support: Android 4.4 only  Chromium < 35 incorrectly upper-cases \u00b5; Android 4.4 uses such a version by default  (and its WebView, being un-updatable, will use it for eternity) so we need to blacklist  that one for the tests to pass. if === \u00b5 &&   chrome i test navigator userAgent && navigator userAgent match   chrome ( ) i 1 < 35 assert ok true This Chromium version upper-cases \u00b5 incorrectly; skip test assert ok true This Chromium version upper-cases \u00b5 incorrectly; skip test assert ok true This Chromium version upper-cases \u00b5 incorrectly; skip test return var = characters charCodeAt 0 toString 16 toUpperCase = characters length === 1 ? ", "count": 1}},
{"dictionary": {"test/unit/core.js": "QUnit test isNumeric function assert assert expect 41 assert expect 43 var = jQuery isNumeric ToString = function value assert ok t - 16 Negative integer number assert ok t 0 Zero integer number assert ok t 32 Positive integer number assert ok t -1.6 Negative floating point string assert ok t 4.536 Positive floating point string assert ok t - 2.6 Negative floating point number assert ok t 3.1415 Positive floating point number assert ok t 1.5999999999999999 Very precise floating point number assert ok t 8e5 Exponential notation assert ok t 123e-2 Exponential notation string assert ok t 040 Legacy octal integer literal string assert ok t 0xFF Hexadecimal integer literal string (0x...) assert ok t 0Xba Hexadecimal integer literal string (0X...) assert ok t 0xFFF Hexadecimal integer literal if + 0b1 === 1 assert ok t 0b111110 Binary integer literal string  jshint ignore:line else assert ok true Browser does not support binary integer literal assert ok t 040 Octal integer literal string assert ok t 0xFF Hexadecimal integer literal string if + 0b1 === 1 assert ok t 0b111110 Binary integer literal  jshint ignore:line assert ok t 0b111110 Binary integer literal string (0b...) assert ok t 0B111110 Binary integer literal string (0B...) else assert ok true Browser does not support binary integer literal assert ok true Browser does not support binary integer literal (0b...) assert ok true Browser does not support binary integer literal (0B...) if + 0o1 === 1 assert ok t 0o76 Octal integer literal  jshint ignore:line assert ok t 0o76 Octal integer literal string (0o...) assert ok t 0O76 Octal integer literal string (0O...) else assert ok true Browser does not support octal integer literal assert ok true Browser does not support octal integer literal (0o...) assert ok true Browser does not support octal integer literal (0O...) assert ok t 0xFFF Hexadecimal integer literal assert ok t -1.6 Negative floating point string assert ok t 4.536 Positive floating point string assert ok t - 2.6 Negative floating point number assert ok t 3.1415 Positive floating point number assert ok t 1.5999999999999999 Very precise floating point number assert ok t 8e5 Exponential notation assert ok t 123e-2 Exponential notation string assert equal t new ToString 42 false Only limited to strings and numbers assert equal t false Empty string assert equal t          false Whitespace characters string ", "count": 1}},
{"dictionary": {"test/unit/support.js": "function var var  version, = window navigator userAgent if   edge i test = userAgent match   edge ( ) i 1 = ajax : true boxSizingReliable : true checkClone : true checkOn : true clearCloneStyle : false clearCloneStyle : version  >=   13 cors : true createHTMLDocument : true focusin : false ", "count": 1}},
{"dictionary": {"src/core.js": " that can be coerced to finite numbers (gh-2662) var = jQuery type return === number || === string && - parseFloat + 1 >= 0  parseFloat NaNs numeric-cast false positives (\"\")  ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")  subtraction forces infinities to NaN ! isNaN - parseFloat isPlainObject : function obj ", "test/unit/core.js": "QUnit test isNumeric function assert assert expect 38 assert expect 41 var = jQuery isNumeric ToString = function value assert ok t - 16 Negative integer number assert ok t 0 Zero integer number assert ok t 32 Positive integer number if + 0b1 === 1 assert ok t 0b111110 Binary integer literal string  jshint ignore:line else assert ok true Browser does not support binary integer literal assert ok t 040 Octal integer literal string assert ok t 0xFF Hexadecimal integer literal string if + 0b1 === 1 assert ok t 0b111110 Binary integer literal  jshint ignore:line else assert ok true Browser does not support binary integer literal if + 0o1 === 1 assert ok t 0o76 Octal integer literal  jshint ignore:line else assert ok true Browser does not support octal integer literal assert ok t 0xFFF Hexadecimal integer literal assert ok t -1.6 Negative floating point string assert ok t 4.536 Positive floating point string assert ok t 8e5 Exponential notation assert ok t 123e-2 Exponential notation string assert equal t new ToString 42 false assert equal t new ToString 42 false assert equal t false Empty string assert equal t          false Whitespace characters string assert equal t false Tab characters string ", "count": 2}},
{"dictionary": {"src/effects.js": "= propTween start if propTween end = propTween start propTween start = prop  ===     ||  prop  ===     ?   1   :   0 propTween start = 0 ", "count": 1}},
{"dictionary": {"src/ajax.js": "./ajax/parseJSON ./ajax/parseXML ./event/trigger ./deferred ./deferred ./serialize  jQuery.param function jQuery document rnotwhite location nonce rquery var ", "count": 1}},
{"dictionary": {"src/event.js": "if === false = else if ! return if === 1 ", "test/unit/event.js": ": QUnit test null or undefined handler function assert assert expect 4  Supports Fixes bug #7229 try jQuery #firstp on click null assert ok true Passing a null handler will not throw an exception catch try jQuery #firstp on click undefined assert ok true Passing an undefined handler will not throw an exception catch var = jQuery #firstp var = expectedElem on click null assert equal Passing a null handler should return the original element = expectedElem on click undefined assert equal Passing a null handler should return the original element QUnit test on() with non-null,defined data function assert assert expect 2 ", "count": 2}},
{"dictionary": {"src/traversing/findFilter.js": "jQuery fn extend find : function selector var var  ret, = this length = = this if typeof !== string = this pushStack for = 0 < ++ jQuery find return this . pushStack (  > 1 ? jQuery uniqueSort :  ) return > 1 ? jQuery uniqueSort : filter : function selector return this pushStack winnow this || false ", "count": 1}},
{"dictionary": {"src/css.js": "./var/rcssNum ./css/var/rnumnonpx ./css/var/cssExpand ./css/var/isHidden ./css/var/getStyles ./css/var/swap ./css/curCSS ./core/ready ./selector  contains function jQuery pnum access rmargin document rcssNum rnumnonpx cssExpand isHidden ,  getStyles swap curCSS adjustCSS addGetHookIf support getStyles swap curCSS adjustCSS addGetHookIf support var ", "src/css/showHide.js": "define ../core ../data/var/dataPriv ../css/var/ function jQuery dataPriv isHidden ../css/var/ function jQuery dataPriv isHiddenWithinTree var = return this each function if isHidden this if isHiddenWithinTree this jQuery this show else jQuery this hide ", "src/css/var/isHidden.js \u2192 src/css/var/isHiddenWithinTree.js": " css is assumed function jQuery  This function differs from the :hidden selector  in that it intentionally ignores hidden ancestors (gh-2404) return function elem el    might be called from jQuery#filter function;    might be called from jQuery#filter function;  in that case, element will be second argument = || return jQuery css display === none || ", "src/effects.js": "./var/rcssNum ./var/rnotwhite ./css/var/cssExpand ./css/var/ ./css/var/ ./css/var/swap ./css/adjustCSS ./data/var/dataPriv ./manipulation ./css ./effects/Tween function jQuery document rcssNum rnotwhite cssExpand isHidden swap function jQuery document rcssNum rnotwhite cssExpand isHiddenWithinTree swap adjustCSS dataPriv showHide var = this = = elem style = elem nodeType && isHidden = elem nodeType && isHiddenWithinTree = dataPriv get fxshow  Queue-skipping animations hijack the fx hooks fadeTo : function speed to easing callback  Show any hidden elements after setting opacity to 0 return this filter isHidden css opacity 0 show return this filter isHiddenWithinTree css opacity 0 show  Animate to the value specified end animate : ", "count": 4}},
{"dictionary": {"src/attributes/prop.js": " Support: IE <=11 only  Accessing the selectedIndex property  forces the browser to respect setting selected  on the option  The getter ensures a default option is selected  when in an optgroup if ! support optSelected jQuery propHooks selected = get : function elem parent parentNode selectedIndex return null set : function elem var = elem parentNode if parent selectedIndex if && parent parentNode parent parentNode selectedIndex ", "test/unit/attributes.js": "assert equal 0 getAttribute tabindex 1 set tabindex on cloned element QUnit test option.prop('selected', true) affects select.selectedIndex (gh-2732) function assert assert expect 2 function addOptions $elem return $elem append jQuery <option/> val a text One jQuery <option/> val b text Two jQuery <option/> val c text Three find [value=a] prop selected true end find [value=c] prop selected true end var = jQuery <select/>  Check select with options addOptions appendTo #qunit-fixture $select find [value=b] prop selected true assert equal 0 selectedIndex 1 Setting option selected affects selectedIndex $select empty  Check select with optgroup = jQuery <optgroup/> addOptions appendTo $select find [value=b] prop selected true assert equal 0 selectedIndex 1 Setting option in optgroup selected affects selectedIndex QUnit test removeProp(String) function assert assert expect 6 var = document createAttribute irrelevant ", "count": 2}},
{"dictionary": {"test/unit/deferred.js": "= window console warn window console warn = function msg assert ok   barf test Message:  +  Support: Chrome < 42  Some Chrome versions newer than 30 but older than 42 display the \"undefined is  not a function\" error, not mentioning the function name. This has been fixed  in Chrome 42. Relax this test there.  This affects our Android 5.0 & Yandex.Browser testing. var = false if   chrome i test navigator userAgent = parseInt navigator userAgent match   chrome ( ) i 1 10 < 42 if assert ok   (?:barf undefined) test Message:  + else assert ok   barf test Message:  + jQuery when defer then function  Should get an error jQuery barf then null jQuery noop defer then function  Should NOT get an error throw new Error Make me a sandwich then null jQuery noop = window console warn jQuery Deferred getStackHook = function  Default exceptionHook assumes the stack is in a form console.warn can log,  but a custom getStackHook+exceptionHook pair could save a raw form and  format it to a string only when an exception actually occurs. window console warn = function msg stack assert ok   cough_up_hairball test Function mentioned:  +  Support: Chrome < 42  Some Chrome versions newer than 30 but older than 42 display the \"undefined is  not a function\" error, not mentioning the function name. This has been fixed  in Chrome 42. Relax this test there.  This affects our Android 5.0 & Yandex.Browser testing. var = false if   chrome i test navigator userAgent = parseInt navigator userAgent match   chrome ( ) i 1 10 < 42 if assert ok   (?:cough_up_hairball undefined) test Function mentioned:  + else assert ok   cough_up_hairball test Function mentioned:  + assert ok   NO STACK FOR YOU test Stack trace included:  + defer then function ", "count": 1}},
{"dictionary": {"CONTRIBUTING.md": "Browser support browser support page `master` `compat` ", "README.md": "-------------------------------------- - Browser support  differs between the master branch and the compat branch. Specifically, the master branch does not support legacy browsers such as IE8. The jQuery team continues to provide support for legacy browsers on the compat branch. Use the latest compat release if support for those browsers is required. See [ browser support ](https://jquery.com/browser-support/) for more info. - To use  in   environments, use only master branch releases given the name \"jquery\" rather than \"jquery-compat\". The compat branch does not support these - Browser support - also supports  *Note* `effects/animatedSelector` `css/hiddenVisibleSelectors` *Note* `compat` AMD name ", "test/unit/core.js": "assert ok Creating a script assert ok ! foo Make sure the script wasn't executed prematurely jQuery body append <script>jQuery.foo='test';</script> assert ok foo Executing a   contents in the right context assert ok foo Executing a   contents in the right context  Test multi-line HTML = jQuery <div> some text <p>some p</p> more text </div> 0 ", "count": 3}},
{"dictionary": {"src/css/showHide.js": "elem style display = if elem style display === && jQuery css display === none if elem style display === && jQuery css display === none &&  Support: Firefox <=42 - 43  Don't set inline display on disconnected elements with computed display: none jQuery contains elem ownerDocument = getDefaultDisplay else ", "count": 1}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {"src/traversing.js": "= 0 = this length = = rneedsContext test || typeof !== string ? jQuery || this context : 0 = typeof !== string && jQuery for < ++ for = this && !== = cur parentNode  Positional selectors never match, since there's no _selection_ context if ! rneedsContext test for < ++ for = this && !== = cur parentNode  Always skip document fragments if cur nodeType < 11 && pos ? pos index > - 1 : \t  Always skip document fragments \t if cur nodeType < 11 && targets ? \t targets index > - 1 :  Don't pass non-elements to Sizzle cur nodeType === 1 && jQuery find matchesSelector \t  Don't pass non-elements to Sizzle \t cur nodeType === 1 && \t jQuery find matchesSelector matched push break matched push break ", "test/unit/traversing.js": "QUnit test closest() function assert assert expect 13 assert expect 14 var  Test on disconnected node assert equal jQuery <div><p></p></div> find p closest table length 0 Make sure disconnected closest work. assert deepEqual jQuery #firstp closest q qunit-fixture get q qunit-fixture Non-string match target  Bug #7369 assert equal jQuery <div foo='bar'></div> closest [foo] length 1 Disconnected nodes with attribute selector assert equal jQuery <div>text</div> closest [lang] length 0 Disconnected nodes with text and non-existent attribute selector jQuery find compile ? test : skip closest() with positional selectors function assert assert expect 2 assert expect 3 assert deepEqual jQuery #qunit-fixture closest div:first get closest(div:first) assert deepEqual jQuery #qunit-fixture div closest body:first div:last get q fx-tests closest(body:first div:last) assert deepEqual jQuery #qunit-fixture closest div:first get closest(div:first) assert deepEqual jQuery #qunit-fixture div closest body:first div:last get closest(body:first div:last) assert deepEqual jQuery #qunit-fixture div closest body:first div:last document get closest(body:first div:last, document) QUnit test closest(jQuery) function assert ", "count": 2}},
{"dictionary": {"CONTRIBUTING.md": "Repo organization Browser support browser support page ", "count": 1}},
{"dictionary": {"src/traversing/findFilter.js": "return jQuery grep function elem return indexOf call > - 1 !== return indexOf call > - 1 !==   &&   elem . nodeType   ===   1 ", "test/unit/traversing.js": "assert deepEqual jQuery p not jQuery #ap, #sndp, .result get q firstp en sap first not(jQuery) QUnit test not(Selector) excludes non-element nodes (gh-2808) function assert assert expect 3 var = jQuery #nonnodes contents = q nonnodesElement assert deepEqual mixedContents not * get not * assert deepEqual mixedContents not [id=a],[id=b] get not [id=a],[id=b] assert deepEqual mixedContents not [id=a],*,[id=b] get not [id=a],*,[id=b] QUnit test has(Element) function assert assert expect 3 var ", "count": 2}},
{"dictionary": {"src/css/showHide.js": "../css/var/isHidden function jQuery dataPriv isHidden var = function getDefaultDisplay elem var = elem ownerDocument = elem nodeName = if return = doc body appendChild doc createElement = jQuery css display temp parentNode removeChild if === none = block = return function showHide elements show var = = elem style display if if === none  Restore a pre-hide() value if we have one = dataPriv get display ||  Since we force visibility upon cascade-hidden elements, an immediate (and slow)  check is required in this first loop unless we have a nonempty display value (either  inline or about-to-be-restored) if === none = dataPriv get display || null if ! elem style display = if elem style display === && jQuery css display === none = getDefaultDisplay else if !== none = none  Remember  we're   Remember  we're  dataPriv set display  Set the display of the elements in a second loop  to avoid the constant reflow  Set the display of the elements in a second loop to avoid constant reflow for = 0 < ++ if != null style display = ", "src/effects.js": "= jQuery css display if === none = || swap display : function return jQuery css display if = else  Get nonempty value(s) by temporarily forcing visibility showHide true = elem style display || = jQuery css display showHide  Animate inline elements as inline-block ", "test/data/testsuite.css": "visible div .inline inline div .autoheight auto 0 div .hidden span .hidden none div #fx-tests div .widewidth repeat-x #span-14824 block #display list-item !important .block block .inline inline .list-item list-item .hidden .none none ", "count": 3}},
{"dictionary": {"test/index.html": "div id qunit div  Test HTML   this iframe is outside the #qunit-fixture so it won't  time  the tests   \"safe\" and clean up after themselves   this iframe is outside the #qunit-fixture so it won't  time  the tests   \"safe\" and clean up after themselves  iframe id loadediframe name loadediframe style src data/iframe.html iframe dl id dl style div id donor-outer ", "count": 1}},
{"dictionary": {"CONTRIBUTING.md": "Getting Involved We've put together [ a short guide with tips, tricks, and ideas on getting started ](http contribute. .org/open-source/). We're always looking for help identifying bugs, writing and reducing test cases, and documentation. [ API design principles ](https github.com/ /jquery/wiki/API-design-guidelines) contribute.jquery.org commit & pull request guide style guides contributor license agreement identifying bugs guidelines contribute.jquery.org getting started with open source commit & pull request guide style guides contributor license agreement Questions and Discussion ", "count": 1}},
{"dictionary": {"src/deferred.js": "mightThrow catch if jQuery Deferred exceptionHook jQuery Deferred exceptionHook process stackTrace  Support: Promises/A+ section 2.3.3.3.4.1  https://promisesaplus.com/#point-61  Ignore post-resolution exceptions if + 1 >=  Only   handlers pass on context  Only   handlers pass on context  and multiple values (non-spec behavior) if !== = undefined if process else  Call an optional hook to record the stack, in case of exception  since it's otherwise lost when execution goes async if jQuery Deferred getStackHook process stackTrace = jQuery Deferred getStackHook window setTimeout process ", "src/deferred/exceptionHook.js": "define ../core ../deferred function jQuery  These usually indicate a programmer mistake during development,  warn about them ASAP rather than swallowing them by default. var =   (Eval Internal Range Reference Syntax Type URI)Error jQuery Deferred exceptionHook = function error stack  Support: IE9  Console exists when dev tools are open, which can happen at any time if window console && window console warn && && rerrorNames test error name window console warn jQuery.Deferred exception:  + error message ", "src/jquery.js": "./traversing ./callbacks ./deferred ./deferred/exceptionHook ./core/ready ./data ./queue ", "test/unit/deferred.js": "catch window console ? test : skip jQuery.Deferred.exceptionHook function assert assert expect 1 var = assert async = jQuery Deferred = window console warn window console warn = function msg assert ok   barf test Message:  + jQuery when defer then function  Should get an error jQuery barf then null jQuery noop defer then function  Should NOT get an error throw new Error Make me a sandwich then null jQuery noop then function window console warn = done defer resolve window console ? test : skip jQuery.Deferred.exceptionHook with stack hooks function assert assert expect 2 var = assert async = jQuery Deferred = window console warn jQuery Deferred getStackHook = function  Default exceptionHook assumes the stack is in a form console.warn can log,  but a custom getStackHook+exceptionHook pair could save a raw form and  format it to a string only when an exception actually occurs.  For the unit test we just ensure the plumbing works. return NO STACK FOR YOU window console warn = function msg stack assert ok   cough_up_hairball test Function mentioned:  + assert ok   NO STACK FOR YOU test Stack trace included:  + defer then function jQuery cough_up_hairball then null function window console warn = delete jQuery Deferred getStackHook done defer resolve QUnit test jQuery.Deferred - 1.x/2.x compatibility function assert assert expect 8 ", "count": 4}},
{"dictionary": {"src/deferred.js": " Deferred helper when : function var var  resolveContexts, = 0 = slice call arguments = resolveValues length  the master Deferred. = jQuery Deferred  Update function for both  updateFunc = function i ,  contexts ,  values  Update function for both  updateFunc = function i return function value = this = arguments length > 1 ? slice call arguments : if === master notifyWith else if ! -- = this = arguments length > 1 ? slice call arguments : if ! -- master resolveWith contexts length === 1 ? contexts 0 : contexts values resolveContexts length === 1 ? resolveContexts 0 : resolveContexts resolveValues  Add listeners to   subordinates; treat others as resolved  Add listeners to   subordinates; treat others as resolved if > 0 = new Array = new Array = new Array for < ++  jQuery.Deferred - treated specially to get resolve-sync behavior if && jQuery isFunction = promise method call progress updateFunc done updateFunc done updateFunc fail master reject  Other thenables else if && jQuery isFunction = then method call updateFunc master reject updateFunc updateFunc master reject else updateFunc , resolveContexts, resolveValues updateFunc ", "test/unit/deferred.js": "QUnit test jQuery.when - joined function assert assert expect 195 assert expect 81 var = : 1 : jQuery Deferred resolve 1 : jQuery Deferred reject 0 : jQuery Deferred notify true : jQuery Deferred notify true : jQuery Deferred notify true : Promise resolve 1 : true : true = : true : true : true = 49 QUnit stop jQuery each function id2 defer2 var = && = || = || = ? 1 1 : 0 undefined = && = jQuery.when(  + + ,  + +  ) = && jQuery isFunction defer1 promise ? defer1 promise : window = && jQuery isFunction defer2 promise ? defer2 promise : window else assert ok false +  => reject progress function a b assert deepEqual +  => progress assert strictEqual this 0 0 ? : undefined +  => first context OK assert strictEqual this 1 1 ? : undefined +  => second context OK always deferreds eventuallyFulfilled resolve 1 deferreds eventuallyRejected reject 0 QUnit test jQuery.when - resolved function assert QUnit test jQuery.when -  resolved function assert assert expect 6 assert expect 3 var = jQuery Deferred notify 1 resolve 4 = jQuery Deferred notify 2 resolve 5 = jQuery Deferred notify 3 resolve 6 jQuery when progress function a b c assert strictEqual 1 first notify value ok assert strictEqual 2 second notify value ok assert strictEqual 3 third notify value ok done function a b c jQuery when done function a b c assert strictEqual 4 first resolve value ok assert strictEqual 5 second resolve value ok assert strictEqual 6 third resolve value ok ", "count": 2}},
{"dictionary": {"build/release/dist.js": "Release exec git add . Error adding files. Release exec git commit -m 'Release  + Release newVersion + ' Error   files. Error   files. console log ", "src/deferred.js": " Handle all other returned values else  Only   handlers pass on context  Only   handlers pass on context  and multiple values (non-spec behavior) if !== = undefined ", "test/unit/ajax.js": ": false beforeSend : function xhr settings  Remove the random number, but ensure the  -buster param is there  Remove the random number, but ensure the  -buster param is there var = settings url replace   assert equal data/name.html?abc&devo=hat&_=#brownies Make sure that the URL has its hash. return false ", "test/unit/animation.js": "assert equal TweenSpy callCount 0 Returning something never creates tweens  Test   usage on queues:  Test   usage on queues: prefilter reset = jQuery <div> css height 50 ", "test/unit/core.js": "assert equal t true false Boolean true literal assert equal t false false Boolean false literal assert equal t bcfed5.2 false Number with preceding non-numeric characters assert equal t 7.2acdgs false Number with   non-numeric characters assert equal t 7.2acdgs false Number with   non-numeric characters assert equal t undefined false Undefined value assert equal t null false Null value assert equal t NaN false NaN value ", "test/unit/manipulation.js": "var = jQuery <tr-multiple-hyphens><td-with-hyphen>text</td-with-hyphen></tr-multiple-hyphens> assert ok jQuery nodeName 0 TR-MULTIPLE-HYPHENS Tags with multiple  assert ok jQuery nodeName j children 0 TD-WITH-HYPHEN Tags with multiple  assert equal j children text text Tags with multiple   behave normally assert ok jQuery nodeName 0 TR-MULTIPLE-HYPHENS Tags with multiple  assert ok jQuery nodeName j children 0 TD-WITH-HYPHEN Tags with multiple  assert equal j children text text Tags with multiple   behave normally QUnit test Tag name processing respects the HTML Standard (gh-2005) function assert ", "count": 6}},
{"dictionary": {"Gruntfile.js": ": : false : true : true : dist/<%= grunt.option('filename').replace('.js', '.min.map') %> : min ", "count": 1}},
{"dictionary": {"count": 0}},
{"dictionary": {"CONTRIBUTING.md": "*jQuery Core* * * at the API repo http * their respective repos http * at the API repo https * their respective repos https Getting Involved API design principles identifying bugs guidelines contribute.jquery.org getting started with open source commit & pull request guide style guides contributor license agreement contribute.jquery.org getting started with open source commit & pull request guide style guides contributor license agreement Questions and Discussion Forum and IRC Stack Overflow http Stack Overflow https jQuery Development Forum http file it in the bug tracker #jquery-dev http jQuery Development Forum https file it in the bug tracker #jquery-dev https Weekly Status Meetings #jquery-meeting http Noon EST http #jquery-meeting https Noon EST https jQuery Core Meeting Notes http jQuery Core Meeting Notes https How to Report Bugs *not* Using jQuery Forum http Stack Overflow http Using jQuery Forum https Stack Overflow https Disable browser extensions Try the latest version of jQuery latest build http latest build https Simplify the test case reduce your code http *much* reduce your code https *much* Search for related or duplicate issues Build a Local Copy of jQuery http https Browser support browser support page http browser support page https `master` `compat` ", "README.md": "jQuery http jQuery https -------------------------------------- 1. Getting Involved http 2. Core Style Guide http 3. Writing Code for jQuery Foundation Projects http 1. Getting Involved https 2. Core Style Guide https 3. Writing Code for jQuery Foundation Projects https -------------------------------------- - Browser support http browser support http - Browser support https browser support https - git Node.js http git Node.js https /en Homebrew `brew install git` `brew install node` - WAMP download - MAMP download http index.html - MAMP download https downloads/ - Setting up LAMP - Mongoose (most platforms) http - Mongoose (most platforms) https * `Ctrl + S` * `Ctrl + Q` QUnit http QUnit https ----------------- Test methods ### ---------- Developing jQuery Core forum http Developing jQuery Core forum https ", "package.json": "description JavaScript library for DOM operations version 3.0.0-pre main dist/jquery.js homepage ://jquery.com homepage ://jquery.com author name jQuery Foundation and other contributors url https://github.com/jquery/jquery/blob/master/AUTHORS.txt ", "src/intro.js": "!  * jQuery JavaScript Library v@VERSION  *  ://jquery.com/  *  ://jquery.com/  *  * Includes Sizzle.js  *  ://sizzlejs.com/  *  ://sizzlejs.com/  *  * Copyright jQuery Foundation and other contributors  * Released under the MIT license  *  ://jquery.org/license  *  ://jquery.org/license  *  * Date: @DATE   ", "src/manipulation.js": "if ! support noCloneChecked && elem nodeType === 1 || elem nodeType === 11 && ! jQuery isXMLDoc  We eschew Sizzle here for performance reasons:  ://jsperf.com/getall-vs-sizzle/2  We eschew Sizzle here for performance reasons:  ://jsperf.com/getall-vs-sizzle/2 = getAll = getAll ", "src/queue/delay.js": "function jQuery  Based off of the plugin by Clint Helfers, with permission.   ://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/   ://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/ jQuery fn delay = function time type = jQuery fx ? jQuery fx speeds || : = || fx ", "test/networkerror.html": "h1 div a href ://bugs.jquery.com/ticket/8135 a href ://bugs.jquery.com/ticket/8135 a ", "test/readywait.html": "p a href ://bugs.jquery.com/ticket/6781 a a href ://bugs.jquery.com/ticket/6781 a a href ://bugs.jquery.com/ticket/8803 a a href ://bugs.jquery.com/ticket/8803 a p p ", "test/unit/manipulation.js": "<div id='test4087-multiple'><div class='test4087-multiple'>1</div><div class='test4087-multiple'>2</div></div> join appendTo #qunit-fixture  complex case based on  ://jsfiddle.net/pbramos/gZ7vB/  complex case based on  ://jsfiddle.net/pbramos/gZ7vB/ jQuery #test4087-complex div #test4087-complex li:last-child div:last-child assert equal jQuery #test4087-complex li:last-child div length === replaceAll ? 1 : 2 +  a node to itself, complex case. ", "count": 9}},
{"dictionary": {"src/css.js": " Don't automatically add \"px\" to these possibly-unitless properties : animationIterationCount : true columnCount : true fillOpacity : true flexGrow : true ", "test/unit/css.js": "QUnit test Do not append px (#9548, #12990) function assert assert expect 2 QUnit test Do not append px (#9548, #12990 ) function assert assert expect 3 var = jQuery <div> appendTo #qunit-fixture $div css fill-opacity 1  Support: Android 2.3 (no support for fill-opacity) if $div css fill-opacity if $div css fill-opacity !==   undefined   assert equal $div css fill-opacity 1 Do not append px to 'fill-opacity' else assert ok true No support for fill-opacity CSS property $div css column-count 1 if $div css column-count if $div css column-count !==   undefined   assert equal $div css column-count 1 Do not append px to 'column-count' else assert ok true No support for column-count CSS property $div css animation-iteration-count 2 if $div css animation-iteration-count !== undefined  if $div.css( \"animation-iteration-count\" ) return \"1\",  it actually return the default value of animation-iteration-count assert equal $div css animation-iteration-count 2 Do not append px to 'animation-iteration-count' else assert ok true No support for animation-iteration-count CSS property QUnit test css('width') and css('height') should respect box-sizing, see #11004 function assert ", "count": 2}},
{"dictionary": {"src/core/var/rsingleTag.js": "define function  Match a standalone tag return   <( >(?:< > ) return   <( >(?:< > ) ", "src/manipulation.js": "dataPriv dataUser acceptData DOMEval var =   <(?!area br col embed hr img input link meta param)(( ) ) > gi =   <(?!area br col embed hr img input link meta param)(( ) ) > gi  Support: IE 10-11, Edge 10240+  In IE/Edge using regex groups here causes severe slowdowns. ", "src/manipulation/var/rtagName.js": "define function return   <( ) return   <( ) ", "test/unit/manipulation.js": "assert equal j children text text Tags with multiple hypens behave normally QUnit test Tag name processing respects the HTML Standard (gh-2005) function assert assert expect 240 var = jQuery <div></div> = split = [ ] { } _ - = +   ( ) * & ^ % $ # @ ! ~ ` ' ; ? \u00a5 \u00ab \u00b5 \u03bb \u2295 \u2248 \u03be \u211c \u2663 \u20ac split   specialChars push specialChars join jQuery each function i characters assertSpecialCharsSupport html assertSpecialCharsSupport append jQuery each function i character assertNameTerminatingCharsHandling html assertNameTerminatingCharsHandling append function buildChild method html return wrapper children 0 function assertSpecialCharsSupport method characters var = characters charCodeAt 0 toString 16 toUpperCase = characters length === 1 ? U+ + 000 + slice - 4 +   + : all special characters = valid + + tagname = buildChild < + + ></ + + > assert equal child nodeName toUpperCase nodeName toUpperCase + (): Paired tag name includes  + = buildChild < + + > assert equal child nodeName toUpperCase nodeName toUpperCase + (): Unpaired tag name includes  + = buildChild < + + /> assert equal child nodeName toUpperCase nodeName toUpperCase + (): Self-closing tag name includes  + function assertNameTerminatingCharsHandling method character var = character charCodeAt 0 toString 16 toUpperCase = U+ + 000 + slice - 4 +   + = div + + this-will-be-discarded = buildChild < + + ></ + + > assert equal child nodeName toUpperCase DIV + (): Paired tag name terminated by  + = buildChild < + + > assert equal child nodeName toUpperCase DIV + (): Unpaired open tag name terminated by  + = buildChild < + + /> assert equal child nodeName toUpperCase DIV + (): Self-closing tag name terminated by  + QUnit test IE8 serialization bug function assert assert expect 2 ", "count": 4}},
{"dictionary": {"src/attributes/attr.js": "function jQuery access support rnotwhite var = jQuery expr attrHandle = jQuery expr attrHandle  Exclusively lowercase A-Z in attribute names (gh-2730)  https://dom.spec.whatwg.org/#converted-to-ascii-lowercase =   g lowercase = function ch return ch toLowerCase jQuery fn extend attr : function name value  All attributes are lowercase  Grab necessary hook if one is defined if !== 1 || ! jQuery isXMLDoc = name toLowerCase ( = name replace ( raz, lowercase  = jQuery attrHooks || jQuery expr match bool test ? : undefined ", "test/unit/attributes.js": "= jQuery <input> value : sup type : radio  Use uppercase here to ensure the type  attrHook is still used TYPE : radio appendTo #testForm assert equal $radio val sup Value is not reset when type is set after value on a radio assert equal jQuery #name attr nonexisting undefined attr nonexisting undefined .attr('attribute', undefined) does not create attribute (#5571) QUnit test attr(non-ASCII) function assert assert expect 2 var = jQuery <div \u03a9='omega' a\u00d8c='alpha'></div> appendTo #qunit-fixture assert equal $div attr \u03a9 omega .attr() exclusively lowercases characters in the range A-Z (gh-2730) assert equal $div attr A\u00d8C alpha .attr() exclusively lowercases characters in the range A-Z (gh-2730) QUnit test attr - extending the boolean attrHandle function assert assert expect 1 var = false ", "count": 2}},
{"dictionary": {"src/attributes/classes.js": "define ../core ../var/rnotwhite ../data/var/dataPriv ../core/init function jQuery rnotwhite function jQuery rnotwhite ,  dataPriv var =   g toggleClass : function value stateVal var = typeof = === string ? value match : var = typeof return this each function i var = jQuery this = 0 if typeof === boolean && === string return ? this addClass : this removeClass if === function = value call this getClass this match || if jQuery isFunction return this each function i jQuery this toggleClass value call this getClass this return this each function var if === string  Toggle individual class names based on presence or stateVal while = ++  Toggle individual class names = 0 = jQuery this = value match || while = ++  Check each className given, space separated list if self hasClass self removeClass else self addClass  Toggle whole class name else if === undefined || === boolean = getClass this if  Store className if set dataPriv set this __className__ if === false || !== true && self hasClass self removeClass else self addClass  If the element has a class name or if we're passed `false`,  then remove the whole classname (if there was one, the above saved it).  Otherwise bring back whatever was previously saved (if anything),  falling back to the empty string if nothing was stored. if this setAttribute this setAttribute class || === false ? : dataPriv get this __className__ || ", "test/unit/attributes.js": "var testToggleClass = function valueObj assert assert expect 11 assert expect 19 var = jQuery #firstp assert ok ! e is .test Assert class not present assert ok e is .testA.testC && ! e is .testB Assert 1 class added, 1 class removed, and 1 class kept e toggleClass valueObj testA testC assert ok ! e is .testA && ! e is .testB && ! e is .testC Assert no class present  toggleClass storage e toggleClass true assert ok 0 className === Assert class is empty (data was empty) e addClass testD testE assert ok e is .testD.testE Assert class present e toggleClass assert ok ! e is .testD.testE Assert class not present assert ok jQuery _data 0 __className__ === testD testE Assert data was stored e toggleClass assert ok e is .testD.testE Assert class present (restored from data) e toggleClass false assert ok ! e is .testD.testE Assert class not present e toggleClass true assert ok e is .testD.testE Assert class present (restored from data) e toggleClass e toggleClass false e toggleClass assert ok e is .testD.testE Assert class present (restored from data)  Cleanup e removeClass testD assert expectJqData this 0 __className__ QUnit test toggleClass(String|boolean|undefined[, boolean]) function assert ", "count": 2}},
{"dictionary": {"src/core.js": "./var/class2type ./var/toString ./var/hasOwn ./var/support function arr document slice concat push indexOf class2type toString hasOwn support ./var/support ./core/DOMEval function arr document slice concat push indexOf class2type toString hasOwn support DOMEval var = @VERSION  Evaluates a script in a global context globalEval : function code context = || document var = context createElement script script text = context head appendChild parentNode removeChild globalEval : function code DOMEval  Convert dashed to camelCase; used by the css and data modules ", "src/core/DOMEval.js": "define ../var/document function document function DOMEval code doc = || document var = doc createElement script script text = doc head appendChild parentNode removeChild return ", "src/manipulation.js": "./data/var/dataPriv ./data/var/dataUser ./data/var/acceptData ./core/DOMEval ./core/init ./traversing function jQuery concat push access rcheckableType rtagName rscriptType wrapMap getAll setGlobalEval buildFragment support dataPriv dataUser acceptData dataPriv dataUser acceptData ,  DOMEval var =   <(?!area br col embed hr img input link meta param)(( ) ) > gi jQuery _evalUrl node src else jQuery . globalEval node textContent replace DOMEval node textContent replace ", "count": 3}},
{"dictionary": {"src/ajax.js": " Loop variable  uncached part of the url  Create the final options object = jQuery ajaxSetup  Attach deferreds deferred promise  Remove hash character (#7531: and string promotion)  Add protocol if not provided (prefilters might expect it)  Handle falsy url in the settings object (#10093: consistency with old signature)  We also use the url parameter if available s url = || s url || location href + . replace ( rhash,   ) s url = || s url || location href + replace location protocol + //  Alias method option to type as per ticket #12004  Save the URL in case we're toying with the If-Modified-Since  and/or If-None-Match header later on = s url  Remove hash to simplify url manipulation = s url replace  More options handling for requests with no content if ! s hasContent  Remember the hash so we can put it back = s url slice cacheURL length  If data is available, append data to url if s data =  (  s . url   += rquery test ? & : ? + s data  ) += rquery test ? & : ? + s data  #9682: remove data so that it's not used in an eventual retry delete s data  Add anti-cache in url if needed  Add anti-cache in  url if needed if s cache === false s url = rts test ?  If there is already a '_' parameter, set its value cacheURL replace $1_= + ++ :  Otherwise add one to the end + rquery test ? & : ? + _= + ++ = cacheURL replace = rquery test ? & : ? + _= + ++ +  Put hash and anti-cache on the URL that will be requested (gh-1732) s url = +  Change '%20' to '+' if this is encoded form body content (gh-2658) else if s data && s processData && s contentType || indexOf application/x-www-form-urlencoded === 0 ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - hash 3 function assert ajaxTest jQuery.ajax() - hash 4 function assert return : data/name.html#foo beforeSend : function xhr settings assert equal settings url data/name.html Make sure that the URL  . assert equal settings url data/name.html Make sure that the URL  . return false : true : data/name.html?abc#foo beforeSend : function xhr settings assert equal settings url data/name.html?abc Make sure that the URL  . assert equal settings url data/name.html?abc Make sure that the URL  . return false : true test : 123 beforeSend : function xhr settings assert equal settings url data/name.html?abc&test=123 Make sure that the URL is trimmed. assert equal settings url data/name.html?abc&test=123#foo Make sure that the URL has its hash. return false : true : data/name.html?abc#brownies : devo : hat : false beforeSend : function xhr settings  Remove the random number, but ensure the cashe-buster param is there var = settings url replace   assert equal data/name.html?abc&devo=hat&_=#brownies Make sure that the URL has its hash. return false : true ", "count": 2}},
{"dictionary": {"src/event/trigger.js": "special _default apply eventPath pop === false && acceptData  Call a native DOM method on the target with the same name  as the event.  Call a native DOM method on the target with the same name as the event.  Don't do default actions on window, that's where global variables be (#6170) if && jQuery isFunction && ! jQuery isWindow ", "count": 1}},
{"dictionary": {"src/ajax.js": " Url cleanup var  Request state (becomes false upon send and true upon completion)  To know if global events are to be dispatched = =  The jqXHR state = 0  Default abort message = canceled  Builds headers hashtable if needed getResponseHeader : function key var if state  ===   2 if completed if ! = while = rheaders exec  Raw string getAllResponseHeaders : function return state  ===   2 ? : null return completed ? : null  Caches the header setRequestHeader : function name value var  lname  =   name . toLowerCase (); if  (  ! state ) { name  =   lname ]  =  requestHeadersNames[ lname || if  ( completed  ==   null  ) { \tname  =  requestHeadersNames[  name . toLowerCase () ]  = \t name . toLowerCase () || = return this  Overrides response content-type header overrideMimeType : function type if ! state if completed  ==   null s mimeType = return this statusCode : function map var if if < 2 for in  Lazy-add the new callback in a way that preserves old ones = else if  Execute the appropriate callbacks jqXHR always jqXHR status else  Lazy-add the new callbacks in a way that preserves old ones for in = return this inspectPrefiltersOrTransports  If request was aborted inside a prefilter, stop there if state  ===   2 if completed return  Allow custom headers/mimetypes and early abort if s beforeSend && s beforeSend call === false || state  ===   2 s beforeSend call === false || completed  Abort if not done already and return return jqXHR abort  If request was aborted inside ajaxSend, stop there if state  ===   2 if completed return try state = 1 completed = false transport send catch  Propagate exception as error if not done if < 2 done - 1  Simply rethrow otherwise else  Rethrow post-completion exceptions if throw  Propagate others as results done - 1 var =   if state  ===   2   if completed return  State is \"done\" now = 2 = true  Clear timeout if it exists if ", "count": 1}},
{"dictionary": {"test/unit/effects.js": "function testEasing assert speed easing complete assert expect 4 var = jQuery speed assert equal options duration 10 Duration set properly assert equal jQuery isFunction options easing ? options easing : options easing linear Easing set properly assert equal options queue fx Queue defaults to fx options complete QUnit test jQuery.speed( speed, easing, complete ) function assert testEasing 10 linear function assert ok true Complete called QUnit test jQuery.speed( speed, easing, complete ) - with easing function function assert testEasing 10 function return linear function assert ok true Complete called QUnit test jQuery.speed( options ) function assert testEasing : 10 : linear complete : function assert ok true Complete called QUnit test jQuery.speed( options ) - with easing function function assert testEasing : 10 easing : function return linear complete : function assert ok true Complete called QUnit test jQuery.speed( options ) - queue values function assert assert expect 5 var get = function queue return jQuery speed : queue assert equal get null fx null defaults to 'fx' assert equal get undefined fx undefined defaults to 'fx' assert equal get true fx true defaults to 'fx' assert equal get fx fx 'fx' passed through assert equal get custom custom 'custom' passed through QUnit test jQuery.speed() - durations function assert assert expect 5 var get = function duration return jQuery speed duration assert equal get 100 100 jQuery.speed sets number duration assert equal get jQuery fx speeds _default jQuery.speed falls back default duration assert equal get slow jQuery fx speeds slow jQuery.speed uses preset speeds assert equal get fast jQuery fx speeds fast jQuery.speed uses preset speeds jQuery fx off = true assert equal get 100 0 jQuery.speed defaults duration to zero if fx is off jQuery fx off = false ", "count": 1}},
{"dictionary": {"CONTRIBUTING.md": "$ npm run build ``` ```bash $ grunt   grunt watch ``` filter module **ALWAYS RUN THE FULL SUITE BEFORE COMMITTING AND PUSHING A PATCH!** Loading changes on the test page `grunt` `grunt watch` ```bash $ grunt watch ``` **load tests in AMD** Browser support browser support page ", "count": 1}},
{"dictionary": {"build/release.js": "module exports dependencies = archiver@0.14.2 shelljs@0.2.6 npm@2.3.0 npm@2.3.0 chalk@1.1.1 ", "build/release/ensure-sizzle.js": "var = require fs = require npm = require chalk = __dirname + /../../external/sizzle/dist/sizzle.js =   Engine v( (?:- ) )  colors is inherited from jquery-release console log The Sizzle version in the src folder ( + version red + ) is not the latest tag ( + latest green + ). The Sizzle version in the src folder ( + chalk red ( version ) + ) is not the latest tag ( + chalk green ( latest ) + ). Release confirm else console log Sizzle is latest ( + latest green + ) console log Sizzle is latest ( + chalk green ( latest ) + ) callback ", "count": 2}},
{"dictionary": {"AUTHORS.txt": "", "count": 1}},
{"dictionary": {"src/selector-native.js": "define ./core ./var/document ./var/documentElement function jQuery document documentElement ./var/documentElement ./var/hasOwn ./var/indexOf function jQuery document documentElement hasOwn indexOf  * Optional (non-Sizzle) selector module for custom builds.  * customize this stub for the project's specific needs.   var var = jQuery expando split sort join === jQuery expando = documentElement matches || documentElement webkitMatchesSelector || documentElement mozMatchesSelector || documentElement oMatchesSelector || documentElement msMatchesSelector sortOrder = function a b documentElement msMatchesSelector  Flag for duplicate removal if === = true return 0 function sortOrder a b var = b compareDocumentPosition && a compareDocumentPosition && a compareDocumentPosition  Flag for duplicate removal if === = true return 0 if  Sort on method existence if only one input has compareDocumentPosition var = ! a compareDocumentPosition - ! b compareDocumentPosition if return  Disconnected nodes if & 1  Calculate position if both inputs belong to the same document = a ownerDocument || === b ownerDocument || ? a compareDocumentPosition :  Choose the first element that is related to our document if === document || jQuery contains document return - 1 if === document || jQuery contains document return 1  Otherwise we know they are disconnected 1  Maintain original order return 0  Disconnected nodes if & 1 return & 4 ? - 1 : 1  Choose the first element that is related to our preferred document if === document || a ownerDocument === document && jQuery contains document return - 1 if === document || b ownerDocument === document && jQuery contains document return 1  Not directly comparable, sort on existence of method return a compareDocumentPosition ? - 1 : 1 uniqueSort = function results var = = 0 = 0  Maintain original order return ? indexOf call - indexOf call : 0 \thasDuplicate  =   false \t\t results . sort ( sortOrder ); return  compare  &   4   ?   - 1   :   1 } if while = ++ if === = duplicates push while -- results splice 1 function uniqueSort results var = = 0 = 0 = false = ! && results slice 0 results sort if while = ++ if === = duplicates push while -- results splice 1 return  Clear input after sorting to release objects  See https://github.com/jquery/sizzle/pull/225 = null return jQuery extend find : function selector context results seed return === || !! && bup nodeType === 1 && adown contains isXMLDoc : function elem return elem ownerDocument || documentElement nodeName !== HTML  documentElement is verified for cases where it doesn't yet exist  (such as loading iframes in IE - #4833) var = && elem ownerDocument || documentElement return ? documentElement nodeName !== HTML : false : : return matches call attr : function elem name return elem getAttribute var = jQuery expr attrHandle name toLowerCase  Don't get fooled by Object.prototype properties (jQuery #13807) = && hasOwn call jQuery expr attrHandle name toLowerCase ? fn jQuery isXMLDoc : undefined return !== undefined ? : elem getAttribute ", "test/unit/core.js": "Empty attributes object is not interpreted as a document (trac-8950) QUnit . test jQuery(selector, context) function assert [  jQuery . find . compile   ?   test   :    ] jQuery(selector, context) function assert assert expect 3 assert deepEqual jQuery div p #qunit-fixture get q sndp en sap Basic selector with string as context assert deepEqual jQuery div p q qunit-fixture 0 get q sndp en sap Basic selector with element as context equal( jQuery( \"element[attribute=<div></div>]\" ).length, 0, \t\"When html is within brackets, do not recognize as html.\" ); assert equal jQuery element:not(<div></div>) length 0 When html is within parens, do not recognize as html. if jQuery find compile assert equal jQuery element:not(<div></div>) length 0 When html is within parens, do not recognize as html. else assert ok skip Complex :not not supported in selector-native assert equal jQuery <div > length 0 Ignore escaped html characters ", "test/unit/css.js": "if jQuery fn toggle QUnit test toggle() function assert jQuery find compile && jQuery fn toggle ? test : skip toggle() function assert assert expect 9 var = jQuery #foo jQuery fn hide = QUnit test jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) function assert assert expect 4 assert equal Math round el css opacity * 100 20 remove opacity override QUnit . test :visible/:hidden selectors function assert [  jQuery . find . compile   ?   test   :    ] :visible/:hidden selectors function assert assert expect 17 var ", "test/unit/effects.js": "QUnit . test sanity check function assert [  jQuery . find . compile   ?   test   :    ] sanity check function assert assert expect 1 assert equal jQuery #dl:visible, #qunit-fixture:visible, #foo:visible length 3 QUnit state is correct for testing effects this clock tick 500 QUnit . test toggle() function assert [  jQuery . find . compile   ?   test   :    ] toggle() function assert assert expect 6 var = jQuery #foo assert ok x is :visible is visible jQuery fx off = true foo hide foo fadeIn 500 function assert ok jQuery this is :visible Element is visible in callback assert ok supportjQuery this is :visible Element is visible in callback foo fadeOut 500 function assert ok jQuery this is :hidden Element is hidden in callback assert ok supportjQuery this is :hidden Element is hidden in callback jQuery fx off = false clock tick 400 QUnit . test Animation callback should not show animated element as :animated (#7157) function assert [  jQuery . find . compile   ?   test   :    ] Animation callback should not show animated element as :animated (#7157) function assert assert expect 1 var = jQuery #foo this clock tick 100 QUnit . test Initial step callback should show element as :animated (#14623) function assert [  jQuery . find . compile   ?   test   :    ] Initial step callback should show element as :animated (#14623) function assert assert expect 1 var = jQuery #foo assert equal parseFloat div css +  finished at correct value assert equal div queue length 0 empty queue when done assert equal div is :animated false :animated doesn't match if jQuery find compile assert equal div is :animated false :animated doesn't match else assert ok skip :animated selector not supported with selector-native  cleanup div remove jQuery each function prop value assert equal parseFloat div css +  finished at correct value assert equal div is :animated false :animated doesn't match if jQuery find compile assert equal div is :animated false :animated doesn't match else assert ok skip :animated selector not supported with selector-native  cleanup div remove  start the first animation div dequeue custom assert equal div is :animated true :animated matches if jQuery find compile assert equal div is :animated true :animated matches else assert ok skip :animated selector not supported with selector-native div finish custom jQuery each function prop value assert equal parseFloat div css +  finished at correct value assert equal div is :animated false :animated doesn't match if jQuery find compile assert equal div is :animated false :animated doesn't match else assert ok skip :animated selector not supported with selector-native  cleanup div remove ", "test/unit/event.js": "remove QUnit test delegated event with delegateTarget-relative selector function assert  selector-native does not support scope-fixing in delegation jQuery find compile ? test : skip delegated event with delegateTarget-relative selector function assert assert expect 3 var = jQuery <div><ul><li><a id= a0 ></a><ul id= ul0 ><li class=test><a id= a0_0 ></a></li><li><a id= a0_1 ></a></li></ul></li></ul></div> appendTo #qunit-fixture ", "count": 5}},
{"dictionary": {"Gruntfile.js": " But our modules can delete srcHintOptions onevar if ! grunt option filename grunt option filename jquery.js grunt initConfig : grunt file readJSON package.json : readOptionalJSON dist/.destination.json : : : dist/jquery.min.js : dist/jquery.js dist/<%= grunt.option('filename').replace('.js', '.min.js') %> : dist/<%= grunt.option('filename') %> : : false : true : dist/jquery.min.map : dist/<%= grunt.option('filename').replace('.js', '.min.map') %> : min : ascii_only : true ", "build/release.js": "module exports = function Release var = dist/jquery.js dist/jquery.min.js dist/jquery.min.map = dist/jquery.js dist/jquery.min.js dist/jquery.min.map dist/jquery.slim.js dist/jquery.slim.min.js dist/jquery.slim.min.map = require ./release/cdn = require ./release/dist = require ./release/ensure-sizzle \t\t  generateArtifacts : function callback Release exec grunt Grunt command failed Release exec grunt custom:-ajax,-effects,-deprecated --filename=jquery.slim.js &&  + grunt remove_map_comment --filename=jquery.slim.js Grunt custom failed cdn makeReleaseCopies callback \t\t  dist : function callback cdn makeArchives function dist dist files,  ", "build/release/cdn.js": "= dist/cdn = dist/jquery.js = dist/jquery.min.js = dist/jquery.min.map = jquery-VER.js : jquery-VER.min.js : jquery-VER.min.map : jquery-VER.js : dist/jquery.js jquery-VER.min.js : dist/jquery.min.js jquery-VER.min.map : dist/jquery.min.map jquery-VER.slim.js : dist/jquery.slim.js jquery-VER.slim.min.js : dist/jquery.slim.min.js jquery-VER.slim.min.map : dist/jquery.slim.min.map = jquery.js jquery.min.js jquery.min.map jquery.js jquery.min.js jquery.min.map jquery.slim.js jquery.slim.min.js jquery.slim.min.map = jquery-VER.js jquery-VER.min.js jquery-VER.min.map jquery-VER.js jquery-VER.min.js jquery-VER.min.map jquery-VER.slim.js jquery-VER.slim.min.js jquery-VER.slim.min.map ", "build/release/dist.js": "module exports = function Release complete module exports = function Release files ,  complete var = require fs = require shelljs = require Release dir repo + /package.json = Release remote replace jquery.git jquery-dist.git = Release remote  For local and github dists replace   jquery( git ) jquery-dist$1  These files are included with the distribution files = extras = src LICENSE.txt AUTHORS.txt  Copy dist files var = Release dir dist + /dist shell mkdir -p dist/jquery.js dist/jquery.min.js dist/jquery.min.map forEach function file shell cp Release dir repo + / + files forEach function file shell cp -f Release dir repo + / +  Copy other files files forEach function file shell cp - Release dir repo + / + Release dir dist extras forEach function file shell cp - Release dir repo + / + Release dir dist  Write generated bower file ", "build/tasks/build.js": "= : src : jquery : dist/jquery.js  We have multiple minify steps : none = this async = this flags = * = this . data . dest = grunt . option (   ) = this data minimum = this data removeWith =  Filename can be passed to the command line using  command line options  e.g. grunt build --filename=jquery-custom.js = ? dist/ + : this data dest  append commit id to version if process env COMMIT +=   + process env COMMIT ", "build/tasks/dist.js": "use strict var = require fs var = require fs = grunt option filename = dist/ dist/ min.map dist/ min.js dist/   +  filename dist/   +   filename . replace (  ,  min.map  ) dist/   +   filename . replace (  ,  min.js  )  Process files for distribution ", "build/tasks/sourcemap.js": "var = require fs module exports = function grunt var minLoc = Object . keys (  grunt config uglify.all.files  )[  0  ] var config = grunt config uglify.all.files grunt registerTask remove_map_comment function var = grunt config process Object keys 0  Remove the source map comment; it causes way too many problems.  The map file is still generated for manual associations ", "count": 7}},
{"dictionary": {"src/css/showHide.js": "return ", "count": 1}},
{"dictionary": {"src/dimensions.js": " Set width or height on the element jQuery style ? : undefined ,  null ? : undefined ", "test/unit/dimensions.js": "function testWidth val assert assert expect 9 var blah var $empty = jQuery #nothiddendiv $div width val 30 assert equal jQuery #nothiddendivchild width 20 Test child width with border and padding jQuery #nothiddendiv, #nothiddendivchild css border : padding : width : blah = jQuery     assert equal blah width val 10 blah Make sure that setting a width on an empty set returns the set. assert equal (  blah width null Make sure ' ' is returned on an empty set $empty = jQuery assert equal $empty width val 10 $empty Make sure that setting a width on an empty set returns the set. assert strictEqual (  $empty width undefined Make sure ' ' is returned on an empty set assert equal jQuery window width document documentElement clientWidth Window width is equal to width reported by window/document. = jQuery blah assert equal blah height val 10 Make sure that setting a height on an empty set returns the set. assert equal blah height null Make sure ' ' is returned on an empty set assert strictEqual blah height undefined Make sure ' ' is returned on an empty set assert equal jQuery window height document documentElement clientHeight Window width is equal to width reported by window/document. QUnit test innerWidth() function assert assert expect 6 assert expect 7 var = jQuery window = jQuery document assert equal jQuery window innerWidth $win width Test on window assert equal jQuery document innerWidth $doc width Test on document assert strictEqual jQuery innerWidth undefined Test on empty set = jQuery #nothiddendiv $div css QUnit test innerHeight() function assert assert expect 6 assert expect 7 var = jQuery window = jQuery document assert equal jQuery window innerHeight $win height Test on window assert equal jQuery document innerHeight $doc height Test on document assert strictEqual jQuery innerHeight undefined Test on empty set = jQuery #nothiddendiv $div css QUnit test outerWidth() function assert assert expect 11 assert expect 12 var = jQuery window assert equal jQuery window outerWidth true Test on window with margin option assert equal jQuery document outerWidth $doc width Test on document without margin option assert equal jQuery document outerWidth true $doc width Test on document with margin option assert strictEqual jQuery outerWidth undefined Test on empty set = jQuery #nothiddendiv $div css width 30 QUnit test outerHeight() function assert assert expect 11 assert expect 12 var = jQuery window assert equal jQuery window outerHeight true Test on window with margin option assert equal jQuery document outerHeight $doc height Test on document without margin option assert equal jQuery document outerHeight true $doc height Test on document with margin option assert strictEqual jQuery outerHeight undefined Test on empty set = jQuery #nothiddendiv $div css height 30 assert equal jQuery #nothiddendiv width 30 width undefined width 30 .width(undefined) is chainable (#5571) QUnit test getters on non elements should return null function assert assert expect 8 var = jQuery notAnElement assert strictEqual nonElem width null .width() is not null (#12283) assert strictEqual nonElem innerWidth null .innerWidth() is not null (#12283) assert strictEqual nonElem outerWidth null .outerWidth() is not null (#12283) assert strictEqual nonElem outerWidth true null .outerWidth(true) is not null (#12283) assert strictEqual nonElem height null .height() is not null (#12283) assert strictEqual nonElem innerHeight null .innerHeight() is not null (#12283) assert strictEqual nonElem outerHeight null .outerHeight() is not null (#12283) assert strictEqual nonElem outerHeight true null .outerHeight(true) is not null (#12283) QUnit test setters with and without box-sizing:border-box function assert assert expect 60 ", "count": 2}},
{"dictionary": {"src/deferred.js": " Deferred helper when : function   subordinate     when : function var = 0 = slice call arguments = resolveValues length  the count of uncompleted subordinates = !== 1 || && jQuery isFunction subordinate promise ? : 0 =  the master Deferred.  If resolveValues consist of only a single Deferred, just use that. = === 1 ? : jQuery Deferred = jQuery Deferred  Update function for both resolve and progress values updateFunc = function i contexts values if === master notifyWith else if ! -- master resolveWith master resolveWith contexts length === 1 ? 0 :  Add listeners to Deferred subordinates; treat others as resolved if > 1 if > 0 = new Array = new Array = new Array updateFunc else -- remaining updateFunc ( i, resolveContexts, resolveValues )( resolveValues[ i ] )  If we're not waiting on anything, resolve the master if  (  ! remaining ) master resolveWith  resolveContexts, resolveValues  }  else master resolveWith return master promise ", "test/unit/deferred.js": "undefined : undefined a plain object : an array : 1 2 3 function message value assert ok jQuery isFunction jQuery each 1 2 3 function k i jQuery when || jQuery Deferred function this resolve done function value assert strictEqual 1 Function executed + > 1 ?  only once : = = ? 1 1 : 0 undefined = && = jQuery.when(  + + ,  + +  ) = && jQuery isFunction defer1 promise ? defer1 promise : defer1 then ? window : undefined = && jQuery isFunction defer2 promise ? defer2 promise : defer2 then ? window : undefined = && jQuery isFunction defer1 promise ? defer1 promise : window = && jQuery isFunction defer2 promise ? defer2 promise : window jQuery when done function a b if defer resolve other deferred QUnit test jQuery.when - solitary thenables function assert assert expect 1 var = assert async = new Promise function resolve reject setTimeout function reject rejected 100 jQuery when then function assert ok false Rejected, solitary, non-Deferred thenable should not resolve done function assert ok true Rejected, solitary, non-Deferred thenable rejected properly done QUnit test jQuery.when does not reuse a solitary jQuery Deferred (gh-2018) function assert assert expect 2 var = jQuery Deferred resolve = jQuery when assert equal promise state resolved Master Deferred is immediately resolved assert notStrictEqual defer promise jQuery.when returns the master deferred's promise ", "count": 2}},
{"dictionary": {"src/offset.js": "else = arguments length ,  null arguments length ", "test/unit/offset.js": "assert notEqual $ scrollLeft 100 null jQuery().scrollLeft(100) testing setter on empty jquery object assert notEqual $ scrollTop null null jQuery().scrollTop(null) testing setter on empty jquery object assert notEqual $ scrollLeft null null jQuery().scrollLeft(null) testing setter on empty jquery object assert strictEqual $ scrollTop null jQuery().scrollTop( ) testing   on empty jquery object assert strictEqual $ scrollLeft null jQuery().scrollLeft( ) testing   on empty jquery object assert strictEqual $ scrollTop undefined jQuery().scrollTop() testing   on empty jquery object assert strictEqual $ scrollLeft undefined jQuery().scrollLeft() testing   on empty jquery object  Tests position after parent scrolling (#15239) $ #scroll-1 scrollTop 0 ", "count": 2}},
{"dictionary": {"src/css.js": " except \"table\", \"table-cell\", or \"table-caption\"  See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display =   (none table(?!-c ) ) = new RegExp ^( + + )(.*)$ i = : absolute : hidden : block = : 0 function setPositiveNumber elem value subtract var = rnumsplit exec  Any relative (+/-) values have already been  normalized at this point var = rcssNum exec return ?  Guard against undefined \"subtract\", e.g., when used as in cssHooks Math max 0 1 - || 0 + 2 || px : Math max 0 2 - || 0 + 3 || px : set : function elem value extra var styles  =  extra  &&   getStyles ( elem ); return   setPositiveNumber , value, extra  ? augmentWidthOrHeight var matches, \tstyles  =  extra  &&   getStyles  ), subtract  =  extra  &&   augmentWidthOrHeight jQuery css boxSizing false === border-box : 0  Convert to pixels if value adjustment is needed if && = rcssNum exec && 3 || px !== px elem style = = jQuery css return setPositiveNumber ", "test/unit/dimensions.js": "QUnit test setters with and without box-sizing:border-box function assert assert expect 20  Support: Android 2.3 (-webkit-box-sizing). var = jQuery <div style='width:114px;height:114px;margin:5px;padding:3px;border:4px solid white;-webkit-box-sizing:border-box;box-sizing:border-box;'>test</div> appendTo #qunit-fixture = jQuery <div style='width:100px;height:100px;margin:5px;padding:3px;border:4px solid white;'>test</div> appendTo #qunit-fixture = 100 assert equal el_bb width 101 width + 1 test border-box width(int) by roundtripping assert equal el_bb innerWidth 108 width + 2 test border-box innerWidth(int) by roundtripping assert equal el_bb outerWidth 117 width + 3 test border-box outerWidth(int) by roundtripping assert equal el_bb outerWidth 118 false width + 4 test border-box outerWidth(int, false) by roundtripping assert equal el_bb outerWidth 129 true width + 5 test border-box innerWidth(int, true) by roundtripping assert equal el_bb height 101 height + 1 test border-box height(int) by roundtripping assert equal el_bb innerHeight 108 height + 2 test border-box innerHeight(int) by roundtripping assert equal el_bb outerHeight 117 height + 3 test border-box outerHeight(int) by roundtripping assert equal el_bb outerHeight 118 false height + 4 test border-box outerHeight(int, false) by roundtripping assert equal el_bb outerHeight 129 true height + 5 test border-box innerHeight(int, true) by roundtripping assert equal el width 101 width + 1 test border-box width(int) by roundtripping assert equal el innerWidth 108 width + 2 test border-box innerWidth(int) by roundtripping assert equal el outerWidth 117 width + 3 test border-box outerWidth(int) by roundtripping assert equal el outerWidth 118 false width + 4 test border-box outerWidth(int, false) by roundtripping assert equal el outerWidth 129 true width + 5 test border-box innerWidth(int, true) by roundtripping assert equal el height 101 height + 1 test border-box height(int) by roundtripping assert equal el innerHeight 108 height + 2 test border-box innerHeight(int) by roundtripping assert equal el outerHeight 117 height + 3 test border-box outerHeight(int) by roundtripping assert equal el outerHeight 118 false height + 4 test border-box outerHeight(int, false) by roundtripping assert equal el outerHeight 129 true height + 5 test border-box innerHeight(int, true) by roundtripping assert expect 60 var = jQuery #foo css : 200px : 200px font-size : 16px = jQuery <div style='margin:5px;padding:1px;border:2px solid black;box-sizing:border-box;'></div> appendTo = jQuery <div style='margin:5px;padding:1px;border:2px solid black;'></div> appendTo jQuery each number : : 100 : 100 em : : 10em : 160 percentage : : 50% : 100 function units values assert equal el_bb width values set width values expected test border-box width( + + ) by roundtripping assert equal el_bb innerWidth values set width values expected - 2 test border-box innerWidth( + + ) by roundtripping assert equal el_bb outerWidth values set width values expected - 6 test border-box outerWidth( + + ) by roundtripping assert equal el_bb outerWidth values set false width values expected - 6 test border-box outerWidth( + + , false) by roundtripping assert equal el_bb outerWidth values set true width values expected - 16 test border-box innerWidth( + + , true) by roundtripping assert equal el_bb height values set height values expected test border-box height( + + ) by roundtripping assert equal el_bb innerHeight values set height values expected - 2 test border-box innerHeight( + + ) by roundtripping assert equal el_bb outerHeight values set height values expected - 6 test border-box outerHeight( + + ) by roundtripping assert equal el_bb outerHeight values set false height values expected - 6 test border-box outerHeight( + + , false) by roundtripping assert equal el_bb outerHeight values set true height values expected - 16 test border-box innerHeight( + + , true) by roundtripping assert equal el width values set width values expected test non-border-box width( + + ) by roundtripping assert equal el innerWidth values set width values expected - 2 test non-border-box innerWidth( + + ) by roundtripping assert equal el outerWidth values set width values expected - 6 test non-border-box outerWidth( + + ) by roundtripping assert equal el outerWidth values set false width values expected - 6 test non-border-box outerWidth( + + , false) by roundtripping assert equal el outerWidth values set true width values expected - 16 test non-border-box innerWidth( + + , true) by roundtripping assert equal el height values set height values expected test non-border-box height( + + ) by roundtripping assert equal el innerHeight values set height values expected - 2 test non-border-box innerHeight( + + ) by roundtripping assert equal el outerHeight values set height values expected - 6 test non-border-box outerHeight( + + ) by roundtripping assert equal el outerHeight values set false height values expected - 6 test non-border-box outerHeight( + + , false) by roundtripping assert equal el outerHeight values set true height values expected - 16 test non-border-box innerHeight( + + , true) by roundtripping testIframe ", "count": 2}},
{"dictionary": {"test/unit/event.js": "jQuery #simon1 click assert equal 1 Check that click, triggers onclick event handler on an a tag also  test that special handlers do not blow up with VML elements (#7071) jQuery <xml:namespace ns='urn:schemas-microsoft-com:vml' prefix='v' /> appendTo head jQuery <v:oval id='oval' style='width:100pt;height:75pt;' fillcolor='red'> </v:oval> appendTo #form jQuery #oval click keydown jQuery fn click ? test : skip Event aliases function assert  Support: IE9 (remove when IE9 is no longer supported)  https://msdn.microsoft.com/en-us/library/hh801223(v=vs.85).aspx QUnit test VML with special event handlers (trac-7071) function assert assert expect 1 var = jQuery <xml:namespace ns='urn:schemas-microsoft-com:vml' prefix='v' /> appendTo head jQuery <v:oval id='oval' style='width:100pt;height:75pt;' fillcolor='red'> </v:oval> appendTo #form jQuery #form on keydown function assert ok true no error was thrown jQuery #oval trigger click trigger keydown ns remove  These tests are unreliable in Firefox if !   firefox i test window navigator userAgent QUnit test Check order of focusin/focusout events function assert ", "count": 1}},
{"dictionary": {"src/core.js": " Evaluates a script in a global context globalEval : function code var = document createElement script globalEval : function code context = || document var = context createElement script script text = document head appendChild parentNode removeChild context head appendChild parentNode removeChild  Convert dashed to camelCase; used by the css and data modules ", "src/manipulation.js": "jQuery _evalUrl node src else jQuery globalEval node textContent replace jQuery globalEval node textContent replace , doc ", "test/data/manipulation/scripts-context.html": "html head meta charset utf-8 title title head body div id qunit-fixture div script src ../../jquery.js script script \t\t\t . . ( \t\t\t\t , \t\t\t\t . , \t\t\t\t \t\t\t); \t\t script body html ", "test/unit/manipulation.js": "testIframeWithCallback domManip executes scripts in iframes in the iframes' context manipulation/scripts-context.html function frameWindow bodyElement html assert assert expect 2 jQuery append assert ok ! window scriptTest script executed in iframe context assert ok frameWindow scriptTest script executed in iframe context QUnit test jQuery.clone - no exceptions for object elements #9587 function assert assert expect 1 ", "count": 4}},
{"dictionary": {"src/dimensions.js": "if jQuery isWindow   return   elem document documentElement client +   return   funcName . indexOf (   )  ===   0   ? \telem[    +  name ]  : \t elem document documentElement client +  Get document width or height ", "test/unit/dimensions.js": "var = jQuery window = jQuery document = jQuery document = $win prop innerWidth assert equal jQuery window outerWidth $win . width () Test on window without margin option assert equal jQuery window outerWidth true $win . width () Test on window with margin option assert equal jQuery window outerWidth winwidth Test on window without margin option assert equal jQuery window outerWidth true winwidth Test on window with margin option assert equal jQuery document outerWidth $doc width Test on document without margin option assert equal jQuery document outerWidth true $doc width Test on document with margin option div remove QUnit test outerHeight() function assert assert expect 11 var = jQuery window = jQuery document = $win prop innerHeight assert equal jQuery window outerHeight Test on window without margin option assert equal jQuery window outerHeight true Test on window with margin option assert equal jQuery document outerHeight $doc height Test on document without margin option assert equal jQuery document outerHeight true $doc height Test on document with margin option = jQuery #nothiddendiv $div css height 30 assert equal $div outerHeight 30 Test with only height set $div css padding 20px assert equal $div outerHeight 70 Test with padding $div css border 2px solid #fff assert equal $div outerHeight 74 Test with padding and border $div css margin 10px assert equal $div outerHeight 74 Test with padding, border and margin without margin option $div css position absolute assert equal $div outerHeight true 94 Test with padding, border and margin with margin option $div css display none assert equal $div outerHeight true 94 Test hidden div with padding, border and margin with margin option  reset styles $div css position : display : border : padding : width : height : = jQuery <div>  Temporarily require 0 for backwards compat - should be auto assert equal div outerWidth 0 Make sure that disconnected nodes are handled. div remove QUnit test child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height()  see #9441 #9300 function assert assert expect 16 $divNormal remove QUnit test outerHeight() function assert assert expect 11 var = jQuery window = jQuery document assert equal jQuery window outerHeight $win height Test on window without margin option assert equal jQuery window outerHeight true $win height Test on window with margin option assert equal jQuery document outerHeight $doc height Test on document without margin option assert equal jQuery document outerHeight true $doc height Test on document with margin option = jQuery #nothiddendiv $div css height 30 assert equal $div outerHeight 30 Test with only width set $div css padding 20px assert equal $div outerHeight 70 Test with padding $div css border 2px solid #fff assert equal $div outerHeight 74 Test with padding and border $div css margin 10px assert equal $div outerHeight 74 Test with padding, border and margin without margin option assert equal $div outerHeight true 94 Test with padding, border and margin with margin option $div css display none assert equal $div outerHeight true 94 Test hidden div with padding, border and margin with margin option  reset styles $div css display : border : padding : width : height : = jQuery <div>  Temporarily require 0 for backwards compat - should be auto assert equal div outerHeight 0 Make sure that disconnected nodes are handled. div remove QUnit test passing undefined is a setter #5571 function assert assert expect 4 assert equal jQuery #nothiddendiv height 30 height undefined height 30 .height(undefined) is chainable (#5571) ", "count": 2}},
{"dictionary": {"test/data/event/focusElem.html": "body a href # id frame-link a script \t\t ( ); \t\t ( ); \t\t . . (   ); \t script body ", "test/unit/event.js": "if jQuery fn click QUnit test trigger() shortcuts function assert assert expect 5 var = jQuery <li><a href='#'>Change location</a></li> prependTo #firstUL elem find a on click function var = jQuery spanx this  same with jQuery(this).find(\"span\"); assert equal close length 0 Context element does not exist, length must be zero assert ok ! 0 Context element does not exist, direct access to element must return undefined return false click  manually clean up detached elements elem remove jQuery #check1 click function assert ok true click event handler for checkbox gets fired twice, see #815 click = 0 jQuery #firstp 0 onclick = function ++ jQuery #firstp click assert equal 1 Check that click, triggers onclick event handler also = 0 jQuery #simon1 0 onclick = function ++ jQuery #simon1 click assert equal 1 Check that click, triggers onclick event handler on an a tag also  test that special handlers do not blow up with VML elements (#7071) jQuery <xml:namespace ns='urn:schemas-microsoft-com:vml' prefix='v' /> appendTo head jQuery <v:oval id='oval' style='width:100pt;height:75pt;' fillcolor='red'> </v:oval> appendTo #form jQuery #oval click keydown QUnit test trigger() bubbling function assert assert expect 18 Preventing default on focusin throws no exception done focus ( trigger (    QUnit test Donor event interference function assert jQuery #donor-input trigger focus jQuery fn click ? test : skip trigger() shortcuts function assert assert expect 5 var = jQuery <li><a href='#'>Change location</a></li> prependTo #firstUL elem find a on click function var = jQuery spanx this  same with jQuery(this).find(\"span\"); assert equal close length 0 Context element does not exist, length must be zero assert ok ! 0 Context element does not exist, direct access to element must return undefined return false click  manually clean up detached elements elem remove jQuery #check1 click function assert ok true click event handler for checkbox gets fired twice, see #815 click = 0 jQuery #firstp 0 onclick = function ++ jQuery #firstp click assert equal 1 Check that click, triggers onclick event handler also = 0 jQuery #simon1 0 onclick = function ++ jQuery #simon1 click assert equal 1 Check that click, triggers onclick event handler on an a tag also  test that special handlers do not blow up with VML elements (#7071) jQuery <xml:namespace ns='urn:schemas-microsoft-com:vml' prefix='v' /> appendTo head jQuery <v:oval id='oval' style='width:100pt;height:75pt;' fillcolor='red'> </v:oval> appendTo #form jQuery #oval click keydown jQuery fn click ? test : skip Event aliases function assert  Explicitly skipping focus/blur events due to their flakiness ", "count": 2}},
{"dictionary": {".editorconfig": "indent_style [test/**.css] indent_style indent_size indent_style ", "count": 1}},
{"dictionary": {"README.md": "- **effects** `.animate()` `.slideUp()` `.hide(\"slow\")` - **event** `.on()` `.off()` `event/alias` - **event/alias** `.click()` `.mouseover()` - **event/focusin** - **event/trigger** `.trigger()` `.triggerHandler()` **alias** **focusin** - **offset** `.offset()` `.position()` `.offsetParent()` `.scrollLeft()` `.scrollTop()` - **wrap** `.wrap()` `.wrapAll()` `.wrapInner()` `.unwrap()` - **core/ready** `jQuery()` `jQuery(document).ready()` `.on(\"ready\", ...)` ", "src/ajax.js": "./ajax/var/location ./ajax/var/nonce ./ajax/var/rquery ./core/init ./ajax/parseJSON ./ajax/parseXML ./event/trigger ./deferred function jQuery document rnotwhite location nonce rquery ", "src/event.js": "./core ./var/document ./var/rnotwhite ./var/hasOwn ./var/slice ./event/support ./data/var/dataPriv ./data/var/acceptData ./core/init ./selector function jQuery document rnotwhite hasOwn ,  slice support ,  dataPriv ,  acceptData function jQuery document rnotwhite slice dataPriv var =   key =   (?:mouse pointer contextmenu drag drop) click =   (?:focusinfocus focusoutblur) =   ( )(?: ( ) ) function returnTrue trigger : function event data elem onlyHandlers var = || document = hasOwn call event type ? event type : event = hasOwn call event namespace ? event namespace split . : = = = || document  Don't do events on text and comment nodes if elem nodeType === 3 || elem nodeType === 8 return  focus/blur morphs to focusin/out; ensure we're not firing them right now if rfocusMorph test + jQuery event triggered return if type indexOf . > - 1  Namespaced trigger; create a regexp to match event type in handle() = type split . = namespaces shift namespaces sort = type indexOf : < 0 && on +  Caller can pass in a jQuery.Event object, Object, or just an event type string event = event jQuery expando ? event : new jQuery.Event typeof event === object && event  Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true) event isTrigger = ? 2 : 3 event namespace = namespaces join . event rnamespace = event namespace ? new RegExp (^| .) + namespaces join .(?:.* .|) + ( .|$) : null  Clean up the event in case it is being reused event result = undefined if ! event target event target =  Clone any incoming data and prepend the event, creating the handler arg list = == null ? event : jQuery makeArray event  Allow special events to draw outside the lines = jQuery event special || if ! && special trigger && special trigger apply === false return  Determine event propagation path in advance, per W3C events spec (#9951)  Bubble up to document, then to window; watch for a global ownerDocument var (#9724) if ! && ! special noBubble && ! jQuery isWindow = special delegateType || if ! rfocusMorph test + = cur parentNode for = cur parentNode eventPath push =  Only add window if we got to document (e.g., not plain obj or detached DOM) if === elem ownerDocument || document eventPath push tmp defaultView || tmp parentWindow || window  Fire handlers on the event path = 0 while = ++ && ! event isPropagationStopped event type = > 1 ? : special bindType ||  jQuery handler = dataPriv get events || event type && dataPriv get handle if handle apply  Native handler = && if && handle apply && acceptData event result = handle apply if event result === false event preventDefault event type =  If nobody prevented the default action, do it now if ! && ! event isDefaultPrevented if ! special _default || special _default apply eventPath pop === false && acceptData  Call a native DOM method on the target with the same name name as the event.  Don't do default actions on window, that's where global variables be (#6170) if && jQuery isFunction && ! jQuery isWindow  Don't re-trigger an onFOO event when we call its FOO() method = if = null  Prevent re-triggering of the same event, since we already bubbled it above jQuery event triggered = jQuery event triggered = undefined if = return event result dispatch : function event  Make a writable jQuery.Event from the native event object  Piggyback on a donor event to simulate a different one simulate : function type elem event var = jQuery extend new jQuery.Event event : : true  Previously, `originalEvent: {}` was set here, so stopPropagation call  would not be triggered on donor event, since in our own  jQuery.event.stopPropagation function we had a check for existence of  originalEvent.stopPropagation method, so, consequently it would be a noop.  But now, this \"simulate\" function is used only for events  for which stopPropagation() is noop, so there is no need for that anymore.  For the compat branch though, guard for \"click\" and \"submit\"  events is still used, but was moved to jQuery.event.stopPropagation function  because `originalEvent` should point to the original event for the constancy  with other events and for more focused logic jQuery event trigger null if e isDefaultPrevented event preventDefault  Support: Firefox  Firefox doesn't have focus(in | out) events  Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787  Support: Chrome, Safari  focus(in | out) events fire after focus & blur events,  which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order  Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857 if ! support focusin jQuery each : focusin : focusout function orig fix  Attach a single capturing handler on the document while someone wants focusin/focusout var handler = function event jQuery event simulate event target jQuery event fix event jQuery event special = setup : function var = this ownerDocument || this = dataPriv access if ! doc addEventListener true dataPriv access || 0 + 1 teardown : function var = this ownerDocument || this = dataPriv access - 1 if ! doc removeEventListener true dataPriv remove else dataPriv access jQuery fn extend on : function types selector data fn return this each function jQuery event remove this trigger : function type data return this each function jQuery event trigger this triggerHandler : function type data var = this 0 if return jQuery event trigger true ", "src/event/alias.js": "define ../core ../event ../event ./trigger function jQuery jQuery each blur focus focusin focusout resize scroll click dblclick  + ", "src/event/focusin.js": "define ../core ../data/var/dataPriv ./support ../event ./trigger function jQuery dataPriv support  Support: Firefox  Firefox doesn't have focus(in | out) events  Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787  Support: Chrome, Safari  focus(in | out) events fire after focus & blur events,  which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order  Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857 if ! support focusin jQuery each : focusin : focusout function orig fix  Attach a single capturing handler on the document while someone wants focusin/focusout var handler = function event jQuery event simulate event target jQuery event fix event jQuery event special = setup : function var = this ownerDocument || this = dataPriv access if ! doc addEventListener true dataPriv access || 0 + 1 teardown : function var = this ownerDocument || this = dataPriv access - 1 if ! doc removeEventListener true dataPriv remove else dataPriv access return ", "count": 5}},
{"dictionary": {"src/attributes/val.js": "var = elem options = elem selectedIndex = elem type === select-one   ||  index  <   0 = elem type === select-one = ? null : = ? + 1 : options length = < 0 ? ", "test/unit/attributes.js": "var = jQuery <select multiple id= select6 ><option value= 1 >A</option><option value= 2 >B</option></select> appendTo #form jQuery val nothing assert equal jQuery val null Non-matching set (single value) on select-multiple assert deepEqual jQuery val [] Non-matching set (single value) on select-multiple jQuery val nothing1 nothing2 assert equal jQuery val null Non-matching set (array of values) on select-multiple assert deepEqual jQuery val [] Non-matching set (array of values) on select-multiple select6 remove ", "count": 2}},
{"dictionary": {"test/unit/event.js": "jQuery #donor-input trigger focus jQuery fn click ? test : skip Event aliases function assert  Explicitly skipping focus/blur events due to their flakiness var = jQuery <div /> appendTo #qunit-fixture = resize scroll click dblclick mousedown mouseup  + mousemove mouseover mouseout mouseenter mouseleave change  + select submit keydown keypress keyup contextmenu split   assert expect aliases length jQuery each function i name  e.g. $(elem).click(...).click(); function event assert equal event type triggered  + off  These tests are unreliable in Firefox if !   firefox i test window navigator userAgent QUnit test Check order of focusin/focusout events function assert ", "count": 1}},
{"dictionary": {"test/unit/event.js": "jQuery #anchor2 trigger click QUnit test ignore comment nodes in event delegation (gh-2055) function assert assert expect 1  Test if DOMNodeInserted is supported  This is a back-up for when DOMNodeInserted support  is eventually removed from browsers function test var = false var = jQuery #qunit-fixture $fixture on DOMNodeInserted function = true $fixture off DOMNodeInserted append <div></div> return var = jQuery #foo on DOMNodeInserted [id] function assert ok true No error thrown on comment node = jQuery document createComment comment appendTo $foo find #sap if ! test fireNative 0 DOMNodeInserted QUnit test stopPropagation() stops directly-bound events on delegated target function assert assert expect 1 ", "count": 1}},
{"dictionary": {"src/ajax/xhr.js": "xhr status || xhr status xhr statusText  Support: IE9  Accessing binary-data responseText throws an exception  (#11426) typeof xhr responseText === string ? : xhr responseText : undefined  Support: IE9 only  IE9 has no XHR2 but throws on binary (trac-11426)  For XHR2 non-text, let the caller handle it (gh-2498) xhr responseType || text !== text || typeof xhr responseText !== string ? : xhr response : : xhr responseText xhr getAllResponseHeaders ", "test/unit/ajax.js": "if typeof window ArrayBuffer === undefined || typeof new XMLHttpRequest responseType !== string QUnit skip No ArrayBuffer support in XHR jQuery noop else  No built-in support for binary data, but it's easy to add via a prefilter jQuery ajaxPrefilter arraybuffer function s s xhrFields = : arraybuffer s responseFields arraybuffer = response s converters binary arraybuffer = true ajaxTest gh-2498 - jQuery.ajax() - binary data shouldn't throw an exception 2 function assert return : url data/1x1.jpg : arraybuffer success : function data s jqxhr assert ok instanceof window ArrayBuffer correct data type assert ok jqxhr response instanceof window ArrayBuffer data in jQXHR QUnit asyncTest #11743 - jQuery.ajax() - script, throws exception 1 function assert  Support: Android 2.3 only ", "count": 2}},
{"dictionary": {"src/ajax/xhr.js": "support ajax = = !! jQuery ajaxTransport function options var var , errorCallback  Cross domain only allowed if supported through XMLHttpRequest if support cors || && ! options crossDomain callback = function type return function if = xhr onload = xhr onerror = null = = xhr onload = xhr onerror = xhr onabort = xhr onreadystatechange = null if === abort xhr abort else if === error complete  File: protocol always yields status 0; see #8605, #14207 xhr status xhr statusText  Support: IE9  On a manual native abort, IE9 throws  errors on any property access that is not readyState if typeof xhr status !== number complete 0 error else complete  File: protocol always yields status 0; see #8605, #14207 xhr status xhr statusText else complete xhr status || xhr status  Listen to events xhr onload = callback xhr onerror = callback error = xhr onerror = callback error  Support: IE9  Use onreadystatechange to replace onabort  to handle uncaught aborts if xhr onabort !== undefined xhr onabort = else xhr onreadystatechange = function  Check readyState before timeout as it changes if xhr readyState === 4  Allow onerror to be called first,  but that will not handle a native abort  Also, save errorCallback to a variable  as xhr.onerror cannot be accessed window setTimeout function if errorCallback  Create the abort callback = callback abort ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - success callbacks 8 function assert      return \t return : addGlobalEvents ajaxStart ajaxStop ajaxSend ajaxComplete ajaxSuccess : url data/name.html beforeSend : function ajaxTest jQuery.ajax() - native abort 2 function assert return : url data/name.php?wait=1 xhr : function var = new window.XMLHttpRequest setTimeout function xhr abort 100 return error : function xhr msg assert strictEqual error Native abort triggers error callback complete : function assert ok true complete ajaxTest jQuery.ajax() - events with context 12 function assert var = document createElement div ", "count": 2}},
{"dictionary": {"src/ajax.js": "function jQuery document rnotwhite location nonce rquery var =   %20 g =   # =   ( )_= =   ( ): ( ) mg  Otherwise add one to the end + rquery test ? & : ? + _= + ++  Change '%20' to '+' if this is encoded form body content (gh-2658) else if s data && s processData && s contentType || indexOf application/x-www-form-urlencoded === 0 s data = s data replace +  Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode. ", "src/serialize.js": "./attributes/prop function jQuery rcheckableType var  r20  = , var =   =   g =   (?:submit button image reset file) i  Return the resulting serialization return s join & . replace ( r20,   ) return s join & jQuery fn extend ", "test/unit/ajax.js": "ajaxTest jQuery.ajax() - data - x-www-form-urlencoded (gh-2658) 1 function assert return : bogus.html : : A Beautiful World : post beforeSend : function _ s assert strictEqual s data devo=A+Beautiful+World data is '+'-encoded return false : true ajaxTest jQuery.ajax() - data - text/plain (gh-2658) 1 function assert return : bogus.html : : A Beautiful World : post : text/plain beforeSend : function _ s assert strictEqual s data devo=A%20Beautiful%20World data is %20-encoded return false : true ajaxTest jQuery.ajax() - data - no processing  1 function assert return : bogus.html : : A Beautiful World : post : x-special-sauce : false beforeSend : function _ s assert deepEqual s data : A Beautiful World data is not processed return false : true var = new Date jQuery each ", "test/unit/serialize.js": "assert equal ! jQuery ajaxSettings && jQuery ajaxSettings traditional true traditional flag, falsy by default = foo : bar baz : 42 quux : All your base are belong to us assert equal jQuery param foo=bar&baz=42&quux=All simple assert equal jQuery param foo=bar&baz=42&quux=All simple = string : foo null : null undefined : undefined assert equal jQuery param string=foo&null=&undefined= handle nulls and undefineds properly assert equal jQuery param foo%5B%5D=a&foo%5B%5D=b&foo%5B%5D=c with array of strings = foo : baz 42 All your base are belong to us assert equal jQuery param foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All more array assert equal jQuery param foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All more array = foo : bar : baz beep : 42 quux : All your base are belong to us assert equal jQuery param foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All even more arrays assert equal jQuery param foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All even more arrays = : 1 2 : : 3 : 4 5 : : 6 : 7 : 8 9 : true : false : undefined : 10 11 : true : false : undefined 0 : cowboy hat? assert equal decodeURIComponent jQuery param a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure assert equal decodeURIComponent jQuery param a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure = a : 0 1 2 3 4 5 6 b : 7 8 9 c : 10 d : 11 12 13 e : f : g : 14 15 16 17 assert equal decodeURIComponent jQuery param a[]=0&a[1][]=1&a[1][]=2&a[2][]=3&a[2][1][]=4&a[2][1][]=5&a[2][2][]=6&a[3][b][]=7&a[3][b][1][]=8&a[3][b][1][]=9&a[3][b][2][0][c]=10&a[3][b][2][0][d]=11&a[3][b][3][0][]=12&a[3][b][4][0][0][]=13&a[3][b][5][e][f][g][]=14&a[3][b][5][e][f][g][1][]=15&a[3][b][]=16&a[]=17 nested arrays = a : 1 2 b : c : 3 d : 4 5 e : x : 6 y : 7 z : 8 9 f : true g : false h : undefined i : 10 11 j : true k : false l : undefined 0 m : cowboy hat? assert equal jQuery param true a=1&a=2&b=%5Bobject 5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy %3F huge structure, forced traditional assert equal jQuery param true a=1&a=2&b=%5Bobject 5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy %3F huge structure, forced traditional assert equal decodeURIComponent jQuery param a : 1 2 3 b[] : 4 5 6 c[d] : 7 8 9 e : f : 10 g : 11 12 h : 13 a[]=1&a[]=2&a[]=3&b[]=4&b[]=5&b[]=6&c[d][]=7&c[d][]=8&c[d][]=9&e[f][]=10&e[g][]=11&e[g][]=12&e[h]=13 Make sure params are not double-encoded. = foo : bar baz : 42 quux : All your base are belong to us assert equal jQuery param foo=bar&baz=42&quux=All simple assert equal jQuery param foo=bar&baz=42&quux=All simple = someName : 1 2 3 regularThing : blah assert equal jQuery param someName=1&someName=2&someName=3&regularThing=blah with array assert equal jQuery param foo=a&foo=b&foo=c with array of strings = foo[] : baz 42 All your base are belong to us assert equal jQuery param foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All more array assert equal jQuery param foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All more array = foo[bar] : baz foo[beep] : 42 foo[quux] : All your base are belong to us assert equal jQuery param foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All even more arrays assert equal jQuery param foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All even more arrays = : 1 2 : : 3 : 4 5 : : 6 : 7 : 8 9 : true : false : undefined : 10 11 : true : false : undefined 0 : cowboy hat? assert equal jQuery param a=1&a=2&b=%5Bobject 5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy %3F huge structure assert equal jQuery param a=1&a=2&b=%5Bobject 5D&i=10&i=11&j=true&k=false&l=&l=0&m=cowboy %3F huge structure = a : 0 1 2 3 4 5 6 b : 7 8 9 c : 10 : 11 12 13 e : f : g : 14 15 16 17 assert equal jQuery param a=0&a=1%2C2&a=3%2C4%2C5%2C6&a=%5Bobject %5D&a=17 nested arrays (not possible when jQuery.param.traditional == true) assert equal jQuery param a=0&a=1%2C2&a=3%2C4%2C5%2C6&a=%5Bobject %5D&a=17 nested arrays (not possible when jQuery.param.traditional == true) = : 1 2 : : 3 : 4 5 : : 6 : 7 : 8 9 : true : false : undefined : 10 11 : true : false : undefined 0 : cowboy hat? assert equal decodeURIComponent jQuery param false a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure, forced not traditional assert equal decodeURIComponent jQuery param false a[]=1&a[]=2&b[c]=3&b[d][]=4&b[d][]=5&b[e][x][]=6&b[e][y]=7&b[e][z][]=8&b[e][z][]=9&b[f]=true&b[g]=false&b[h]=&i[]=10&i[]=11&j=true&k=false&l[]=&l[]=0&m=cowboy hat? huge structure, forced not traditional = param1 : null assert equal jQuery param false param1= Make sure that null params aren't traversed. Check input serialization as query string assert equal jQuery #testForm serialize T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= Check form serialization as query string assert equal jQuery input,select,textarea,button #testForm serialize T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= Check input serialization as query string assert equal jQuery #form, #testForm serialize action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&search=search&email=dave%40jquery.com&number=43&select1=&select2=3&select3=1&select3=2&select5=3&T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&search=search&email=dave%40jquery.com&number=43&select1=&select2=3&select3=1&select3=2&select5=3&T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= Multiple form serialization as query string assert equal jQuery #form, #testForm :input serialize action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&search=search&email=dave%40jquery.com&number=43&select1=&select2=3&select3=1&select3=2&select5=3&T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&search=search&email=dave%40jquery.com&number=43&select1=&select2=3&select3=1&select3=2&select5=3&T3=%3F%0D%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My =me&S1=abc&S3=YES&S4= Mixed form/input serialization as query string jQuery #html5email, #html5number remove ", "count": 4}}
]